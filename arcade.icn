procedure hangman__tombofhorrors(hangman__hickman, hangman__tharizdun)
    
    hangman__strahd := List(hangman__hickman[0])
    print(hangman__strahd)
    hangman__lolth := ""
    hangman__z := 0
    while (hangman__z < length(hangman__strahd)) do {
        hangman__lolth := hangman__lolth || "*"
        hangman__z := hangman__z + 1
    }
    hangman__score := 0
    hangman__win := 0
    hangman__loss := 0
    hangman__e := hangman__ravenloft(hangman__hickman, hangman__tharizdun, hangman__lolth, hangman__score, hangman__win, hangman__loss)
    return hangman__e
end

procedure hangman__ravenloft(hangman__hickman, hangman__tharizdun, hangman__lolth, hangman__score, hangman__win, hangman__loss)
    
    hangman__strahd := List(hangman__hickman[0])
    if (hangman__tharizdun === 0) then {
        print("Game over! The Final answer was:", hangman__hickman[0])
        hangman__loss := hangman__loss + 1
        hangman__balrog := []
        put(hangman__balrog, hangman__win)
        put(hangman__balrog, hangman__loss)
        put(hangman__balrog, hangman__score)
        return hangman__balrog
    }
    else if (hangman__lolth === hangman__hickman[0]) then {
        print("You win!!", hangman__hickman[0], "You win!!")
        hangman__win := hangman__win + 1
        hangman__balrog := []
        put(hangman__balrog, hangman__win)
        put(hangman__balrog, hangman__loss)
        put(hangman__balrog, hangman__score)
        print(hangman__balrog)
        return hangman__balrog
        
    }
    else {
        print(hangman__lolth, "lives left:", hangman__tharizdun)
        print("score", hangman__score)
        hangman__beholder := input_puny("guess a letter")
        hangman__y := 0
        hangman__demagorgon := 0
        while (hangman__y < length(hangman__strahd)) do {
            if (hangman__strahd[hangman__y] === hangman__beholder) then {
                hangman__demagorgon := 1
                hangman__x := 0
                hangman__lich := ""
                while (hangman__x < length(hangman__strahd)) do {
                    if (hangman__x === hangman__y) then {
                        hangman__lich := hangman__lich + hangman__strahd[hangman__y]
                        hangman__x := hangman__x + 1
                    }
                    else {
                        hangman__lich := hangman__lich || "*"
                        hangman__x := hangman__x + 1
                    }
                }
                hangman__w := 0
                hangman__dungeon := List(hangman__lolth)
                hangman__dragon := List(hangman__lich)
                hangman__acerak := ""
                while (hangman__w < length(hangman__strahd)) do {
                    if (hangman__dungeon[hangman__w] === hangman__dragon[hangman__w]) then {
                        hangman__acerak := hangman__acerak + hangman__dungeon[hangman__w]
                        hangman__w := hangman__w + 1
                    }
                    else {
                        if (hangman__dungeon[hangman__w] === "*") then {
                            hangman__acerak := hangman__acerak + hangman__dragon[hangman__w]
                        }
                        else {
                            hangman__acerak := hangman__acerak + hangman__dungeon[hangman__w]
                        }
                        hangman__w := hangman__w + 1
                    }
                    hangman__lolth := hangman__acerak
                }
                hangman__score := hangman__score + 2
                hangman__y := hangman__y + 1
            }
            else {
                hangman__y := hangman__y + 1
            }
        }
        if (hangman__demagorgon === 0) then {
            hangman__score := hangman__score - 2
            hangman__tharizdun := hangman__tharizdun - 1
            print("One life lost!")
        }
        hangman__l := hangman__ravenloft(hangman__hickman, hangman__tharizdun, hangman__lolth, hangman__score, hangman__win, hangman__loss)
        return hangman__l
    }
end

procedure hangman__main()
    
    hangman__difficulty := input_puny("Choose your difficulty: easy, medium, hard, or MEGA-DETH: ")
    hangman__gygax := []
    hangman__hommlet := ["pleasing", "reasons", "frankenstein", "legionaire", "prestidigitation", "honolulu"]
    hangman__zuggtomy := ["astronomer", "albuquerque", "indubitably", "werewolf", "euphonium", "exceptional"]
    hangman__giants := ["metaphysics", "dracula", "dallas", "bean", "bass", "barracuda"]
    hangman__drow := ["jazz", "vortex", "mozambique", "igor", "pheonix", "odd", "fall"]
    if (hangman__difficulty === "easy") then {
        put(hangman__gygax, choice(hangman__hommlet))
    }
    else if (hangman__difficulty === "medium") then {
        put(hangman__gygax, choice(hangman__zuggtomy))
    }
    else if (hangman__difficulty === "hard") then {
        put(hangman__gygax, choice(hangman__giants))
    }
    else if (hangman__difficulty === "MEGA-DETH") then {
        put(hangman__gygax, choice(hangman__drow))
    }
    else {
        print("Error. Please pick a difficulty between easy, medium, hard, or MEGA-DETH.")
        hangman__main()
    }
    hangman__u := hangman__tombofhorrors(hangman__gygax, 6)
    return hangman__u
end

procedure minesweeper__moria(minesweeper__mordor, minesweeper__angmar, minesweeper__flags, minesweeper__score, minesweeper__wins, minesweeper__losses)
    
    minesweeper__a := 0
    while (minesweeper__a < 7) do {
        minesweeper__b := 0
        minesweeper__rivendell := []
        while (minesweeper__b < 7) do {
            minesweeper__s := string(minesweeper__mordor[minesweeper__b, minesweeper__a])
            replace(minesweeper__s, "'", " ")
            put(minesweeper__rivendell, minesweeper__s)
            minesweeper__b := minesweeper__b + 1
        }
        print(minesweeper__rivendell)
        minesweeper__a := minesweeper__a + 1
    }
    print("score:", minesweeper__score)
    print("Number of flags:", minesweeper__flags)
    minesweeper__lothlorien := input_puny("Do you wish to FLAG, UNFLAG or MOVE?")
    if ((minesweeper__lothlorien === 'flag') | (minesweeper__lothlorien === 'FLAG')) then {
        if (minesweeper__flags === 0) then {
            print("Error. You are all out of flags!")
            minesweeper__o := minesweeper__moria(minesweeper__mordor, minesweeper__angmar, minesweeper__flags, minesweeper__score, minesweeper__wins, minesweeper__losses)
            return minesweeper__o
        }
        else {
            minesweeper__gondor := input_puny("Enter in a coordinate from 1, 1 to 5, 5")
            minesweeper__gondor := split(minesweeper__gondor, ",")
            if (minesweeper__gondor[1][0] === " ") then {
                minesweeper__gondor[1] := minesweeper__gondor[1][1]
            }
            minesweeper__mordor[int(minesweeper__gondor[0]), int(minesweeper__gondor[1])] := "F"
            minesweeper__flags := minesweeper__flags - 1
            minesweeper__h := minesweeper__moria(minesweeper__mordor, minesweeper__angmar, minesweeper__flags, minesweeper__score, minesweeper__wins, minesweeper__losses)
            return minesweeper__h
        }
    }
    else if ((minesweeper__lothlorien === 'unflag') | (minesweeper__lothlorien === 'UNFLAG')) then {
        minesweeper__arnor := input_puny("Enter in a coordinate from 1, 1 to 5, 5")
        minesweeper__arnor := split(minesweeper__arnor, ",")
        if (minesweeper__arnor[1][0] === " ") then {
            minesweeper__arnor[1] := minesweeper__arnor[1][1]
        }
        if (minesweeper__mordor[int(minesweeper__arnor[0]), int(minesweeper__arnor[1])] === "F") then {
            minesweeper__mordor[int(minesweeper__arnor[0]), int(minesweeper__arnor[1])] := "0"
            minesweeper__flags := minesweeper__flags + 1
        }
        else {
            print("Error, not a flagged square")
        }
        minesweeper__g := minesweeper__moria(minesweeper__mordor, minesweeper__angmar, minesweeper__flags, minesweeper__score, minesweeper__wins, minesweeper__losses)
        return minesweeper__g
    }
    else if ((minesweeper__lothlorien === 'move') | (minesweeper__lothlorien === 'MOVE')) then {
        minesweeper__rohan := input_puny("Enter in a coordinate from 1, 1 to 5, 5")
        minesweeper__rohan := split(minesweeper__rohan, ",")
        if (minesweeper__rohan[1][0] === " ") then {
            minesweeper__rohan[1] := minesweeper__rohan[1][1]
        }
        if (minesweeper__mordor[int(minesweeper__rohan[0]), int(minesweeper__rohan[1])] === "F") then {
            print("Don't move to a flagged tile!!")
            minesweeper__c := minesweeper__moria(minesweeper__mordor, minesweeper__angmar, minesweeper__flags, minesweeper__score, minesweeper__wins, minesweeper__losses)
            return minesweeper__c
        }
        if (minesweeper__angmar[int(minesweeper__rohan[0]), int(minesweeper__rohan[1])] === "B") then {
            minesweeper__losses := minesweeper__losses + 1
            minesweeper__weathertop := [minesweeper__wins, minesweeper__losses, minesweeper__score]
            print("You stepped on a bomb! You lose!!")
            return minesweeper__weathertop
        }
        else {
            if (minesweeper__mordor[int(minesweeper__rohan[0]), int(minesweeper__rohan[1])] === "0") then {
                minesweeper__score := minesweeper__score + 2
            }
            minesweeper__mordor[int(minesweeper__rohan[0]), int(minesweeper__rohan[1])] := minesweeper__angmar[int(minesweeper__rohan[0]), int(minesweeper__rohan[1])]
            if (minesweeper__score === 44) then {
                print("Victory Achieved!!")
                minesweeper__wins := minesweeper__wins + 1
                minesweeper__fangorn := []
                put(minesweeper__fangorn, minesweeper__wins)
                put(minesweeper__fangorn, minesweeper__losses)
                put(minesweeper__fangorn, minesweeper__score)
                return (minesweeper__fangorn)
            }
            else {
                minesweeper__f := minesweeper__moria(minesweeper__mordor, minesweeper__angmar, minesweeper__flags, minesweeper__score, minesweeper__wins, minesweeper__losses)
                return minesweeper__f
            }
        }
    }
    else {
        print("error, not a valid command")
        minesweeper__i := minesweeper__moria(minesweeper__mordor, minesweeper__angmar, minesweeper__flags, minesweeper__score, minesweeper__wins, minesweeper__losses)
        return minesweeper__i
    }
end

procedure minesweeper__main()
    
    minesweeper__dagorlad := ["B", "_", "_", "_", "_", "_", "_", "_", "_", "_", "B", "_", "_", "_", "_", "B", "_", "_", "_", "_", "_", "_", "_", "_", "_"]
    minesweeper__mordor := table()
    minesweeper__mordor[0, 0] := "*"
    minesweeper__mordor[1, 0] := "*"
    minesweeper__mordor[2, 0] := "*"
    minesweeper__mordor[3, 0] := "*"
    minesweeper__mordor[4, 0] := "*"
    minesweeper__mordor[5, 0] := "*"
    minesweeper__mordor[6, 0] := "*"
    minesweeper__mordor[0, 1] := "|"
    minesweeper__mordor[1, 1] := "0"
    minesweeper__mordor[2, 1] := "0"
    minesweeper__mordor[3, 1] := "0"
    minesweeper__mordor[4, 1] := "0"
    minesweeper__mordor[5, 1] := "0"
    minesweeper__mordor[6, 1] := "|"
    minesweeper__mordor[0, 2] := "|"
    minesweeper__mordor[1, 2] := "0"
    minesweeper__mordor[2, 2] := "0"
    minesweeper__mordor[3, 2] := "0"
    minesweeper__mordor[4, 2] := "0"
    minesweeper__mordor[5, 2] := "0"
    minesweeper__mordor[6, 2] := "|"
    minesweeper__mordor[0, 3] := "|"
    minesweeper__mordor[1, 3] := "0"
    minesweeper__mordor[2, 3] := "0"
    minesweeper__mordor[3, 3] := "0"
    minesweeper__mordor[4, 3] := "0"
    minesweeper__mordor[5, 3] := "0"
    minesweeper__mordor[6, 3] := "|"
    minesweeper__mordor[0, 4] := "|"
    minesweeper__mordor[1, 4] := "0"
    minesweeper__mordor[2, 4] := "0"
    minesweeper__mordor[3, 4] := "0"
    minesweeper__mordor[4, 4] := "0"
    minesweeper__mordor[5, 4] := "0"
    minesweeper__mordor[6, 4] := "|"
    minesweeper__mordor[0, 5] := "|"
    minesweeper__mordor[1, 5] := "0"
    minesweeper__mordor[2, 5] := "0"
    minesweeper__mordor[3, 5] := "0"
    minesweeper__mordor[4, 5] := "0"
    minesweeper__mordor[5, 5] := "0"
    minesweeper__mordor[6, 5] := "|"
    minesweeper__mordor[0, 6] := "*"
    minesweeper__mordor[1, 6] := "*"
    minesweeper__mordor[2, 6] := "*"
    minesweeper__mordor[3, 6] := "*"
    minesweeper__mordor[4, 6] := "*"
    minesweeper__mordor[5, 6] := "*"
    minesweeper__mordor[6, 6] := "*"
    minesweeper__hobbiton := [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]
    minesweeper__osgiliath := 0
    minesweeper__bree := table()
    while (minesweeper__osgiliath < 25) do {
        minesweeper__buckland := choice(minesweeper__hobbiton)
        minesweeper__bree[minesweeper__osgiliath] := minesweeper__dagorlad[minesweeper__buckland - 1]
        remove_element(minesweeper__hobbiton, minesweeper__buckland)
        minesweeper__osgiliath := minesweeper__osgiliath + 1
    }
    minesweeper__angmar := table()
    minesweeper__angmar[0, 0] := "-"
    minesweeper__angmar[1, 0] := "-"
    minesweeper__angmar[2, 0] := "-"
    minesweeper__angmar[3, 0] := "-"
    minesweeper__angmar[4, 0] := "-"
    minesweeper__angmar[5, 0] := "-"
    minesweeper__angmar[6, 0] := "-"
    minesweeper__angmar[0, 1] := "|"
    minesweeper__angmar[1, 1] := minesweeper__bree[0]
    minesweeper__angmar[2, 1] := minesweeper__bree[1]
    minesweeper__angmar[3, 1] := minesweeper__bree[2]
    minesweeper__angmar[4, 1] := minesweeper__bree[3]
    minesweeper__angmar[5, 1] := minesweeper__bree[4]
    minesweeper__angmar[6, 1] := "|"
    minesweeper__angmar[0, 2] := "|"
    minesweeper__angmar[1, 2] := minesweeper__bree[5]
    minesweeper__angmar[2, 2] := minesweeper__bree[6]
    minesweeper__angmar[3, 2] := minesweeper__bree[7]
    minesweeper__angmar[4, 2] := minesweeper__bree[8]
    minesweeper__angmar[5, 2] := minesweeper__bree[9]
    minesweeper__angmar[6, 2] := "|"
    minesweeper__angmar[0, 3] := "|"
    minesweeper__angmar[1, 3] := minesweeper__bree[10]
    minesweeper__angmar[2, 3] := minesweeper__bree[11]
    minesweeper__angmar[3, 3] := minesweeper__bree[12]
    minesweeper__angmar[4, 3] := minesweeper__bree[13]
    minesweeper__angmar[5, 3] := minesweeper__bree[14]
    minesweeper__angmar[6, 3] := "|"
    minesweeper__angmar[0, 4] := "|"
    minesweeper__angmar[1, 4] := minesweeper__bree[15]
    minesweeper__angmar[2, 4] := minesweeper__bree[16]
    minesweeper__angmar[3, 4] := minesweeper__bree[17]
    minesweeper__angmar[4, 4] := minesweeper__bree[18]
    minesweeper__angmar[5, 4] := minesweeper__bree[19]
    minesweeper__angmar[6, 4] := "|"
    minesweeper__angmar[0, 5] := "|"
    minesweeper__angmar[1, 5] := minesweeper__bree[20]
    minesweeper__angmar[2, 5] := minesweeper__bree[21]
    minesweeper__angmar[3, 5] := minesweeper__bree[22]
    minesweeper__angmar[4, 5] := minesweeper__bree[23]
    minesweeper__angmar[5, 5] := minesweeper__bree[24]
    minesweeper__angmar[6, 5] := "|"
    minesweeper__angmar[0, 6] := "-"
    minesweeper__angmar[1, 6] := "-"
    minesweeper__angmar[2, 6] := "-"
    minesweeper__angmar[3, 6] := "-"
    minesweeper__angmar[4, 6] := "-"
    minesweeper__angmar[5, 6] := "-"
    minesweeper__angmar[6, 6] := "-"
    minesweeper__x := 1
    while (minesweeper__x < 6) do {
        minesweeper__y := 1
        while (minesweeper__y < 6) do {
            if (minesweeper__angmar[minesweeper__x, minesweeper__y] === "B") then {
                minesweeper__y := minesweeper__y + 1
            }
            else {
                if (minesweeper__angmar[minesweeper__x, minesweeper__y + 1] === "B") then {
                    if (minesweeper__angmar[minesweeper__x, minesweeper__y] === "_") then {
                        minesweeper__angmar[minesweeper__x, minesweeper__y] := 1
                    }
                    else {
                        minesweeper__angmar[minesweeper__x, minesweeper__y] := minesweeper__angmar[minesweeper__x, minesweeper__y] + 1
                    }
                }
                if (minesweeper__angmar[minesweeper__x, minesweeper__y - 1] === "B") then {
                    if (minesweeper__angmar[minesweeper__x, minesweeper__y] === "_") then {
                        minesweeper__angmar[minesweeper__x, minesweeper__y] := 1
                    }
                    else {
                        minesweeper__angmar[minesweeper__x, minesweeper__y] := minesweeper__angmar[minesweeper__x, minesweeper__y] + 1
                    }
                }
                if (minesweeper__angmar[minesweeper__x + 1, minesweeper__y] === "B") then {
                    if (minesweeper__angmar[minesweeper__x, minesweeper__y] === "_") then {
                        minesweeper__angmar[minesweeper__x, minesweeper__y] := 1
                    }
                    else {
                        minesweeper__angmar[minesweeper__x, minesweeper__y] := minesweeper__angmar[minesweeper__x, minesweeper__y] + 1
                    }
                }
                if (minesweeper__angmar[minesweeper__x - 1, minesweeper__y] === "B") then {
                    if (minesweeper__angmar[minesweeper__x, minesweeper__y] === "_") then {
                        minesweeper__angmar[minesweeper__x, minesweeper__y] := 1
                    }
                    else {
                        minesweeper__angmar[minesweeper__x, minesweeper__y] := minesweeper__angmar[minesweeper__x, minesweeper__y] + 1
                    }
                }
                if (minesweeper__angmar[minesweeper__x + 1, minesweeper__y + 1] === "B") then {
                    if (minesweeper__angmar[minesweeper__x, minesweeper__y] === "_") then {
                        minesweeper__angmar[minesweeper__x, minesweeper__y] := 1
                    }
                    else {
                        minesweeper__angmar[minesweeper__x, minesweeper__y] := minesweeper__angmar[minesweeper__x, minesweeper__y] + 1
                    }
                }
                if (minesweeper__angmar[minesweeper__x + 1, minesweeper__y - 1] === "B") then {
                    if (minesweeper__angmar[minesweeper__x, minesweeper__y] === "_") then {
                        minesweeper__angmar[minesweeper__x, minesweeper__y] := 1
                    }
                    else {
                        minesweeper__angmar[minesweeper__x, minesweeper__y] := minesweeper__angmar[minesweeper__x, minesweeper__y] + 1
                    }
                }
                if (minesweeper__angmar[minesweeper__x - 1, minesweeper__y + 1] === "B") then {
                    if (minesweeper__angmar[minesweeper__x, minesweeper__y] === "_") then {
                        minesweeper__angmar[minesweeper__x, minesweeper__y] := 1
                    }
                    else {
                        minesweeper__angmar[minesweeper__x, minesweeper__y] := minesweeper__angmar[minesweeper__x, minesweeper__y] + 1
                    }
                }
                if (minesweeper__angmar[minesweeper__x - 1, minesweeper__y - 1] === "B") then {
                    if (minesweeper__angmar[minesweeper__x, minesweeper__y] === "_") then {
                        minesweeper__angmar[minesweeper__x, minesweeper__y] := 1
                    }
                    else {
                        minesweeper__angmar[minesweeper__x, minesweeper__y] := minesweeper__angmar[minesweeper__x, minesweeper__y] + 1
                    }
                }
                minesweeper__y := minesweeper__y + 1
            }
        }
        minesweeper__x := minesweeper__x + 1
    }
    minesweeper__k := minesweeper__moria(minesweeper__mordor, minesweeper__angmar, 3, 0, 0, 0)
    return minesweeper__k
end

procedure arcade__stats(arcade__scoresh, arcade__winsh, arcade__lossesh, arcade__scoresm, arcade__winsm, arcade__lossesm)
    
    arcade__Geronimo := open("Dustbucket_tavern_hall_o'_fame.txt", "w")
    write(arcade__Geronimo, "Hangman")
    write(arcade__Geronimo, "\n")
    write(arcade__Geronimo, "-------------\n")
    arcade__gamesh := arcade__winsh + arcade__lossesh
    if (arcade__gamesh === 0) then {
        write(arcade__Geronimo, "No Games of hangman were played\n")
    }
    else {
        arcade__Crazyhorse := "win %: " || string(int(arcade__winsh * 100 / arcade__gamesh)) || " %\n"
        write(arcade__Geronimo, arcade__Crazyhorse)
        arcade__Redcloud := "loss %: " || string(int(arcade__lossesh * 100 / arcade__gamesh)) || " %\n"
        write(arcade__Geronimo, arcade__Redcloud)
    }
    if (arcade__scoresh === []) then {
        write(arcade__Geronimo, "No high score for this game.\n")
    }
    else {
        arcade__t := 0
        arcade__highscore := arcade__scoresh[0]
        while (arcade__t < length(arcade__scoresh)) do {
            if (int(arcade__scoresh[arcade__t]) - int(arcade__highscore) > 0) then {
                arcade__highscore := arcade__scoresh[arcade__t]
            }
            arcade__t := arcade__t + 1
        }
        write(arcade__Geronimo, "Highscore =" || string(arcade__highscore) || "\n")
    }
    if (arcade__scoresh === []) then {
        write(arcade__Geronimo, "No low score for this game\n")
    }
    else {
        arcade__q := 0
        arcade__lowscore := arcade__scoresh[0]
        while (arcade__q < length(arcade__scoresh)) do {
            if (int(arcade__lowscore) - int(arcade__scoresh[arcade__q]) > 0) then {
                arcade__lowscore := arcade__scoresh[arcade__q]
            }
            arcade__q := arcade__q + 1
        }
        write(arcade__Geronimo, "Lowscore:" || string(arcade__lowscore) || "!!!!!!!!!\n")
    }
    write(arcade__Geronimo, "Minesweeper\n")
    write(arcade__Geronimo, "------------\n")
    arcade__gamesm := arcade__winsm + arcade__lossesm
    if (arcade__gamesm === 0) then {
        write(arcade__Geronimo, "No Games of minesweeper were played\n")
    }
    else {
        write(arcade__Geronimo, "win %:" || string(int(arcade__winsm * 100 / arcade__gamesm)) || " %\n")
        write(arcade__Geronimo, "loss %" || string(int(arcade__lossesm * 100 / arcade__gamesm)) || " %\n")
    }
    if (arcade__scoresm === []) then {
        write(arcade__Geronimo, "No high score for this game.\n")
    }
    else {
        arcade__t := 0
        arcade__highscorem := arcade__scoresm[0]
        while (arcade__t < length(arcade__scoresm)) do {
            if (int(arcade__scoresm[arcade__t]) - int(arcade__highscorem) > 0) then {
                arcade__highscorem := arcade__scoresm[arcade__t]
            }
            arcade__t := arcade__t + 1
        }
        write(arcade__Geronimo, "Highscore =" || string(arcade__highscorem) || "\n")
    }
    if (arcade__scoresm === []) then {
        write(arcade__Geronimo, "No low score for this game\n")
    }
    else {
        arcade__q := 0
        arcade__lowscorem := arcade__scoresm[0]
        while (arcade__q < length(arcade__scoresm)) do {
            if (int(arcade__lowscorem) - int(arcade__scoresm[arcade__q]) > 0) then {
                arcade__lowscorem := arcade__scoresm[arcade__q]
            }
            arcade__q := arcade__q + 1
        }
        write(arcade__Geronimo, "Lowscore:" || string(arcade__lowscorem) || "!!!!!!!!!\n")
    }
    close(arcade__Geronimo, )
    arcade__Geronimo := open("Dustbucket_tavern_hall_o'_fame.txt", "r")
    print(read(arcade__Geronimo, ))
    arcade__menu(arcade__scoresh, arcade__winsh, arcade__lossesh, arcade__scoresm, arcade__winsm, arcade__lossesm)
end

procedure arcade__menu(arcade__scoresh, arcade__winsh, arcade__lossesh, arcade__scoresm, arcade__winsm, arcade__lossesm)
    
    print("  Menu  ")
    print("1) Hangman")
    print("2) Minesweeper")
    print("3) Stats")
    print("4) About")
    print("5) Exit")
    print("---------------")
    arcade__Oakley := input_puny("Please pick an option:")
    if (arcade__Oakley === "1") then {
        arcade__z := hangman__main()
        print(arcade__z)
        arcade__winsh := arcade__winsh + arcade__z[0]
        arcade__lossesh := arcade__lossesh + arcade__z[1]
        put(arcade__scoresh, arcade__z[2])
        arcade__j := input_puny("Would you like to play a NEW GAME?")
        while ((arcade__j === "NEW GAME") | (arcade__j === "new game") | (arcade__j === "YES") | (arcade__j === "Yes") | (arcade__j === "yes")) do {
            arcade__y := hangman__main()
            arcade__winsh := arcade__winsh + arcade__y[0]
            arcade__lossesh := arcade__lossesh + arcade__y[1]
            put(arcade__scoresh, arcade__y[2])
            arcade__j := input_puny("Would you like to play a NEW GAME?")
        }
        arcade__menu(arcade__scoresh, arcade__winsh, arcade__lossesh, arcade__scoresm, arcade__winsm, arcade__lossesm)
    }
    else if (arcade__Oakley === "2") then {
        arcade__w := minesweeper__main()
        arcade__winsm := arcade__winsm + arcade__w[0]
        arcade__lossesm := arcade__lossesm + arcade__w[1]
        put(arcade__scoresm, arcade__w[2])
        arcade__p := input_puny("Would you like to play a new game?")
        while ((arcade__p === "NEW GAME") | (arcade__p === "new game") | (arcade__p === "YES") | (arcade__p === "Yes") | (arcade__p === "yes")) do {
            arcade__v := minesweeper__main()
            arcade__winsm := arcade__winsm + arcade__v[0]
            arcade__lossesm := arcade__lossesm + arcade__v[1]
            put(arcade__scoresm, arcade__v[2])
            arcade__p := input_puny("Would you like to play a new game?")
        }
        arcade__menu(arcade__scoresh, arcade__winsh, arcade__lossesh, arcade__scoresm, arcade__winsm, arcade__lossesm)
    }
    else if (arcade__Oakley === "3") then {
        arcade__stats(arcade__scoresh, arcade__winsh, arcade__lossesh, arcade__scoresm, arcade__winsm, arcade__lossesm)
    }
    else if (arcade__Oakley === "4") then {
        print("Anonymous is a novice programmer, and a crime fighting crusader in the EEFU (Euphonium Extended Film Universe)")
        arcade__menu(arcade__scoresh, arcade__winsh, arcade__lossesh, arcade__scoresm, arcade__winsm, arcade__lossesm)
    }
    else if (arcade__Oakley === "5") then {
        print("Travel well, cowpoke")
    }
    else {
        print("Error. Invalid command")
        arcade__menu(arcade__scoresh, arcade__winsh, arcade__lossesh, arcade__scoresm, arcade__winsm, arcade__lossesm)
    }
end

procedure arcade__main()
    
    arcade__Greetings := []
    arcade__Billy := "Howdeedoo, Buckarro?"
    put(arcade__Greetings, arcade__Billy)
    arcade__Villa := "Welcome to the Dustbucket Tavern! Free games all around!"
    put(arcade__Greetings, arcade__Villa)
    arcade__Butch := "Well, well, well. If it ain't the good ol' king of the west!"
    put(arcade__Greetings, arcade__Butch)
    arcade__Wyatt := "This next one is on the house, y'all!"
    put(arcade__Greetings, arcade__Wyatt)
    arcade__Buffalobill := choice(arcade__Greetings)
    print(arcade__Buffalobill)
    arcade__winsh := 0
    arcade__lossesh := 0
    arcade__scoresh := []
    arcade__winsm := 0
    arcade__lossesm := 0
    arcade__scoresm := []
    arcade__menu(arcade__scoresh, arcade__winsh, arcade__lossesh, arcade__scoresm, arcade__winsm, arcade__lossesm)
end

procedure main()
    
    hangman__main()
    
    if ("__name__" === "__main__") then {
        minesweeper__main()
    }
    
    arcade__main()
end

