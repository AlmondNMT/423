Terminals unused in grammar

    INDENT
    DEDENT
    LBRACE
    RBRACE
    AT
    ATEQUAL
    RARROW
    COLONEQUAL
    PYFALSE
    PYDEF
    NONE
    PYTRUE
    ELIF
    TRY
    WHILE
    EXCEPT
    LAMBDA
    WITH
    FINALLY
    NONLOCAL
    CLASS
    OP
    AWAIT
    ASYNC
    TYPE_IGNORE
    TYPE_COMMENT
    ERRORTOKEN
    COMMENT
    ENCODING
    EMPTY
    MATCH
    ASSIGNMENT
    DECORATOR


State 211 conflicts: 1 shift/reduce


Grammar

    0 $accept: file_input $end

    1 file_input: nl_OR_stmt_rep ENDMARKER

    2 nl_OR_stmt_rep: ε
    3               | nl_OR_stmt_rep NEWLINE
    4               | nl_OR_stmt_rep stmt

    5 stmt: simple_stmt

    6 simple_stmt: small_stmt semi_small_stmt_rep semi_opt NEWLINE

    7 semi_small_stmt_rep: ε
    8                    | semi_small_stmt_rep SEMI small_stmt

    9 semi_opt: ε
   10         | SEMI

   11 small_stmt: pass_stmt
   12           | del_stmt
   13           | flow_stmt
   14           | import_stmt
   15           | expr_stmt
   16           | global_stmt
   17           | assert_stmt

   18 global_stmt: GLOBAL NAME comma_name_rep

   19 comma_name_rep: ε
   20               | comma_name_rep COMMA NAME

   21 pass_stmt: PASS

   22 del_stmt: DEL exprlist

   23 flow_stmt: break_stmt
   24          | continue_stmt
   25          | return_stmt
   26          | raise_stmt
   27          | yield_stmt

   28 assert_stmt: ASSERT test comma_test_opt

   29 break_stmt: BREAK

   30 continue_stmt: CONTINUE

   31 return_stmt: RETURN testlist_opt

   32 raise_stmt: RAISE test_triplet_opt

   33 yield_stmt: yield_expr

   34 yield_expr: YIELD testlist_opt

   35 expr_stmt: testlist expr_conjunct

   36 expr_conjunct: augassign yield_OR_testlist
   37              | equal_OR_yield_OR_testlist_rep

   38 yield_OR_testlist: YIELD
   39                  | testlist

   40 equal_OR_yield_OR_testlist_rep: ε
   41                               | equal_OR_yield_OR_testlist_rep EQUAL yield_OR_testlist

   42 augassign: PLUSEQUAL
   43          | MINEQUAL
   44          | STAREQUAL
   45          | SLASHEQUAL
   46          | PERCENTEQUAL
   47          | AMPEREQUAL
   48          | VBAREQUAL
   49          | CIRCUMFLEXEQUAL
   50          | LEFTSHIFTEQUAL
   51          | RIGHTSHIFTEQUAL
   52          | DOUBLESTAREQUAL
   53          | DOUBLESLASHEQUAL

   54 import_stmt: import_name
   55            | import_from

   56 import_name: IMPORT dotted_as_names

   57 import_from: FROM dot_OR_ellipsis_rep_opt dotted_name IMPORT import_from_targets
   58            | FROM dot_OR_ellipsis_rep IMPORT import_from_targets

   59 import_from_targets: LPAR import_from_as_names comma_opt RPAR
   60                    | import_from_as_names
   61                    | STAR

   62 import_from_as_names: import_from_as_name comma_import_from_as_name_rep

   63 comma_import_from_as_name_rep: ε
   64                              | comma_import_from_as_name_rep COMMA import_from_as_name

   65 import_from_as_name: NAME as_name_opt

   66 as_name_opt: ε
   67            | AS NAME

   68 dotted_as_names: dotted_as_name comma_dotted_as_name_rep

   69 comma_dotted_as_name_rep: ε
   70                         | comma_dotted_as_name_rep COMMA dotted_as_name

   71 dotted_as_name: dotted_name as_name_opt

   72 dotted_name: dotted_name DOT NAME
   73            | NAME

   74 dot_OR_ellipsis_rep_opt: ε
   75                        | dot_OR_ellipsis_rep

   76 dot_OR_ellipsis_rep: dot_OR_ellipsis
   77                    | dot_OR_ellipsis_rep dot_OR_ellipsis

   78 dot_OR_ellipsis: DOT
   79                | ELLIPSIS

   80 test_triplet_opt: ε
   81                 | test test_doublet_opt

   82 test_doublet_opt: ε
   83                 | COMMA test comma_test_opt

   84 comma_test_opt: ε
   85               | COMMA test

   86 testlist_opt: ε
   87             | testlist

   88 testlist: test comma_test_rep comma_opt

   89 comma_test_rep: ε
   90               | comma_test_rep COMMA test

   91 exprlist: expr comma_expr_rep comma_opt

   92 comma_expr_rep: ε
   93               | comma_expr_rep COMMA expr

   94 comma_opt: ε
   95          | COMMA

   96 expr: xor_expr vbar_xor_expr_rep

   97 vbar_xor_expr_rep: ε
   98                  | vbar_xor_expr_rep VBAR xor_expr

   99 xor_expr: and_expr caret_and_expr_rep

  100 caret_and_expr_rep: ε
  101                   | caret_and_expr_rep CIRCUMFLEX and_expr

  102 and_expr: shift_expr amper_shift_expr_rep

  103 amper_shift_expr_rep: ε
  104                     | amper_shift_expr_rep AMPER shift_expr

  105 shift_expr: arith_expr shift_arith_expr_rep

  106 shift_arith_expr_rep: ε
  107                     | shift_arith_expr_rep shift arith_expr

  108 shift: LEFTSHIFT
  109      | RIGHTSHIFT

  110 arith_expr: term pm_term_rep

  111 pm_term_rep: ε
  112            | pm_term_rep plus_OR_minus term

  113 plus_OR_minus: PLUS
  114              | MINUS

  115 term: factor factops_factor_rep

  116 factops_factor_rep: ε
  117                   | factops_factor_rep factops factor

  118 factops: STAR
  119        | SLASH
  120        | PERCENT
  121        | DOUBLESLASH

  122 factor: pmt factor
  123       | power

  124 pmt: PLUS
  125    | MINUS
  126    | TILDE

  127 power: atom trailer_rep dstar_factor_opt

  128 trailer_rep: ε
  129            | trailer_rep trailer

  130 trailer: LPAR arglist_opt RPAR
  131        | LSQB subscriptlist RSQB
  132        | DOT NAME

  133 arglist_opt: ε
  134            | arglist

  135 arglist: arg_comma_rep arg_ORS

  136 arg_comma_rep: ε
  137              | arg_comma_rep argument COMMA

  138 arg_ORS: argument comma_opt
  139        | STAR test comma_arg_rep comma_dstar_test_opt
  140        | DOUBLESTAR test

  141 comma_arg_rep: ε
  142              | comma_arg_rep COMMA argument

  143 comma_dstar_test_opt: ε
  144                     | COMMA DOUBLESTAR test

  145 argument: test comp_for_opt
  146         | test EQUAL test

  147 comp_for_opt: ε
  148             | comp_for

  149 comp_for: FOR exprlist IN or_test comp_iter_opt

  150 comp_iter_opt: ε
  151              | comp_iter

  152 comp_iter: comp_for

  153 subscriptlist: subscript comma_subscript_rep comma_opt

  154 comma_subscript_rep: ε
  155                    | comma_subscript_rep COMMA subscript

  156 subscript: ELLIPSIS
  157          | test
  158          | test_opt COLON test_opt sliceop_opt

  159 sliceop_opt: ε
  160            | sliceop

  161 sliceop: COLON test_opt

  162 test_opt: ε
  163         | test

  164 test: or_test if_or_test_else_test_opt

  165 if_or_test_else_test_opt: ε
  166                         | IF or_test ELSE test

  167 or_test: and_test or_and_test_rep

  168 or_and_test_rep: ε
  169                | or_and_test_rep OR and_test

  170 and_test: not_test and_not_test_rep

  171 and_not_test_rep: ε
  172                 | and_not_test_rep AND not_test

  173 not_test: NOT not_test
  174         | comparison

  175 comparison: expr comp_op_expr_rep

  176 comp_op_expr_rep: ε
  177                 | comp_op_expr_rep comp_op expr

  178 comp_op: LESS
  179        | GREATER
  180        | EQEQUAL
  181        | GREATEREQUAL
  182        | LESSEQUAL
  183        | NOTEQUAL
  184        | IN
  185        | not_in
  186        | IS
  187        | is_not

  188 not_in: NOT IN

  189 is_not: IS NOT

  190 dstar_factor_opt: ε
  191                 | DOUBLESTAR factor

  192 atom: NAME
  193     | INTLIT
  194     | FLOATLIT
  195     | STRINGLIT


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    FLOATLIT <treeptr> (258) 194
    ENDMARKER <treeptr> (259) 1
    NAME <treeptr> (260) 18 20 65 67 72 73 132 192
    INTLIT <treeptr> (261) 193
    STRINGLIT <treeptr> (262) 195
    NEWLINE <treeptr> (263) 3 6
    INDENT <treeptr> (264)
    DEDENT <treeptr> (265)
    LPAR <treeptr> (266) 59 130
    RPAR <treeptr> (267) 59 130
    LSQB <treeptr> (268) 131
    RSQB <treeptr> (269) 131
    COLON <treeptr> (270) 158 161
    COMMA <treeptr> (271) 20 64 70 83 85 90 93 95 137 142 144 155
    SEMI <treeptr> (272) 8 10
    PLUS <treeptr> (273) 113 124
    MINUS <treeptr> (274) 114 125
    STAR <treeptr> (275) 61 118 139
    SLASH <treeptr> (276) 119
    VBAR <treeptr> (277) 98
    AMPER <treeptr> (278) 104
    LESS <treeptr> (279) 178
    GREATER <treeptr> (280) 179
    EQUAL <treeptr> (281) 41 146
    DOT <treeptr> (282) 72 78 132
    PERCENT <treeptr> (283) 120
    LBRACE <treeptr> (284)
    RBRACE <treeptr> (285)
    EQEQUAL <treeptr> (286) 180
    NOTEQUAL <treeptr> (287) 183
    LESSEQUAL <treeptr> (288) 182
    GREATEREQUAL <treeptr> (289) 181
    TILDE <treeptr> (290) 126
    CIRCUMFLEX <treeptr> (291) 101
    LEFTSHIFT <treeptr> (292) 108
    RIGHTSHIFT <treeptr> (293) 109
    DOUBLESTAR <treeptr> (294) 140 144 191
    PLUSEQUAL <treeptr> (295) 42
    MINEQUAL <treeptr> (296) 43
    STAREQUAL <treeptr> (297) 44
    SLASHEQUAL <treeptr> (298) 45
    PERCENTEQUAL <treeptr> (299) 46
    AMPEREQUAL <treeptr> (300) 47
    VBAREQUAL <treeptr> (301) 48
    CIRCUMFLEXEQUAL <treeptr> (302) 49
    LEFTSHIFTEQUAL <treeptr> (303) 50
    RIGHTSHIFTEQUAL <treeptr> (304) 51
    DOUBLESTAREQUAL <treeptr> (305) 52
    DOUBLESLASH <treeptr> (306) 121
    DOUBLESLASHEQUAL <treeptr> (307) 53
    AT <treeptr> (308)
    ATEQUAL <treeptr> (309)
    RARROW <treeptr> (310)
    ELLIPSIS <treeptr> (311) 79 156
    COLONEQUAL <treeptr> (312)
    PYFALSE <treeptr> (313)
    PYDEF <treeptr> (314)
    IF <treeptr> (315) 166
    RAISE <treeptr> (316) 32
    NONE <treeptr> (317)
    DEL <treeptr> (318) 22
    IMPORT <treeptr> (319) 56 57 58
    RETURN <treeptr> (320) 31
    PYTRUE <treeptr> (321)
    ELIF <treeptr> (322)
    IN <treeptr> (323) 149 184 188
    TRY <treeptr> (324)
    AND <treeptr> (325) 172
    ELSE <treeptr> (326) 166
    IS <treeptr> (327) 186 189
    WHILE <treeptr> (328)
    AS <treeptr> (329) 67
    EXCEPT <treeptr> (330)
    LAMBDA <treeptr> (331)
    WITH <treeptr> (332)
    ASSERT <treeptr> (333) 28
    FINALLY <treeptr> (334)
    NONLOCAL <treeptr> (335)
    YIELD <treeptr> (336) 34 38
    BREAK <treeptr> (337) 29
    FOR <treeptr> (338) 149
    NOT <treeptr> (339) 173 188 189
    CLASS <treeptr> (340)
    FROM <treeptr> (341) 57 58
    OR <treeptr> (342) 169
    CONTINUE <treeptr> (343) 30
    GLOBAL <treeptr> (344) 18
    PASS <treeptr> (345) 21
    OP <treeptr> (346)
    AWAIT <treeptr> (347)
    ASYNC <treeptr> (348)
    TYPE_IGNORE <treeptr> (349)
    TYPE_COMMENT <treeptr> (350)
    ERRORTOKEN <treeptr> (351)
    COMMENT <treeptr> (352)
    ENCODING <treeptr> (353)
    EMPTY <treeptr> (354)
    MATCH <treeptr> (355)
    ASSIGNMENT <treeptr> (356)
    DECORATOR <treeptr> (357)


Nonterminals, with rules where they appear

    $accept (103)
        on left: 0
    file_input (104)
        on left: 1
        on right: 0
    nl_OR_stmt_rep (105)
        on left: 2 3 4
        on right: 1 3 4
    stmt (106)
        on left: 5
        on right: 4
    simple_stmt (107)
        on left: 6
        on right: 5
    semi_small_stmt_rep (108)
        on left: 7 8
        on right: 6 8
    semi_opt (109)
        on left: 9 10
        on right: 6
    small_stmt (110)
        on left: 11 12 13 14 15 16 17
        on right: 6 8
    global_stmt (111)
        on left: 18
        on right: 16
    comma_name_rep (112)
        on left: 19 20
        on right: 18 20
    pass_stmt (113)
        on left: 21
        on right: 11
    del_stmt (114)
        on left: 22
        on right: 12
    flow_stmt (115)
        on left: 23 24 25 26 27
        on right: 13
    assert_stmt (116)
        on left: 28
        on right: 17
    break_stmt (117)
        on left: 29
        on right: 23
    continue_stmt (118)
        on left: 30
        on right: 24
    return_stmt (119)
        on left: 31
        on right: 25
    raise_stmt (120)
        on left: 32
        on right: 26
    yield_stmt (121)
        on left: 33
        on right: 27
    yield_expr (122)
        on left: 34
        on right: 33
    expr_stmt (123)
        on left: 35
        on right: 15
    expr_conjunct (124)
        on left: 36 37
        on right: 35
    yield_OR_testlist (125)
        on left: 38 39
        on right: 36 41
    equal_OR_yield_OR_testlist_rep (126)
        on left: 40 41
        on right: 37 41
    augassign (127)
        on left: 42 43 44 45 46 47 48 49 50 51 52 53
        on right: 36
    import_stmt (128)
        on left: 54 55
        on right: 14
    import_name (129)
        on left: 56
        on right: 54
    import_from (130)
        on left: 57 58
        on right: 55
    import_from_targets (131)
        on left: 59 60 61
        on right: 57 58
    import_from_as_names (132)
        on left: 62
        on right: 59 60
    comma_import_from_as_name_rep (133)
        on left: 63 64
        on right: 62 64
    import_from_as_name (134)
        on left: 65
        on right: 62 64
    as_name_opt (135)
        on left: 66 67
        on right: 65 71
    dotted_as_names (136)
        on left: 68
        on right: 56
    comma_dotted_as_name_rep (137)
        on left: 69 70
        on right: 68 70
    dotted_as_name (138)
        on left: 71
        on right: 68 70
    dotted_name (139)
        on left: 72 73
        on right: 57 71 72
    dot_OR_ellipsis_rep_opt (140)
        on left: 74 75
        on right: 57
    dot_OR_ellipsis_rep (141)
        on left: 76 77
        on right: 58 75 77
    dot_OR_ellipsis (142)
        on left: 78 79
        on right: 76 77
    test_triplet_opt (143)
        on left: 80 81
        on right: 32
    test_doublet_opt (144)
        on left: 82 83
        on right: 81
    comma_test_opt (145)
        on left: 84 85
        on right: 28 83
    testlist_opt (146)
        on left: 86 87
        on right: 31 34
    testlist (147)
        on left: 88
        on right: 35 39 87
    comma_test_rep (148)
        on left: 89 90
        on right: 88 90
    exprlist (149)
        on left: 91
        on right: 22 149
    comma_expr_rep (150)
        on left: 92 93
        on right: 91 93
    comma_opt (151)
        on left: 94 95
        on right: 59 88 91 138 153
    expr (152)
        on left: 96
        on right: 91 93 175 177
    vbar_xor_expr_rep (153)
        on left: 97 98
        on right: 96 98
    xor_expr (154)
        on left: 99
        on right: 96 98
    caret_and_expr_rep (155)
        on left: 100 101
        on right: 99 101
    and_expr (156)
        on left: 102
        on right: 99 101
    amper_shift_expr_rep (157)
        on left: 103 104
        on right: 102 104
    shift_expr (158)
        on left: 105
        on right: 102 104
    shift_arith_expr_rep (159)
        on left: 106 107
        on right: 105 107
    shift (160)
        on left: 108 109
        on right: 107
    arith_expr (161)
        on left: 110
        on right: 105 107
    pm_term_rep (162)
        on left: 111 112
        on right: 110 112
    plus_OR_minus (163)
        on left: 113 114
        on right: 112
    term (164)
        on left: 115
        on right: 110 112
    factops_factor_rep (165)
        on left: 116 117
        on right: 115 117
    factops (166)
        on left: 118 119 120 121
        on right: 117
    factor (167)
        on left: 122 123
        on right: 115 117 122 191
    pmt (168)
        on left: 124 125 126
        on right: 122
    power (169)
        on left: 127
        on right: 123
    trailer_rep (170)
        on left: 128 129
        on right: 127 129
    trailer (171)
        on left: 130 131 132
        on right: 129
    arglist_opt (172)
        on left: 133 134
        on right: 130
    arglist (173)
        on left: 135
        on right: 134
    arg_comma_rep (174)
        on left: 136 137
        on right: 135 137
    arg_ORS (175)
        on left: 138 139 140
        on right: 135
    comma_arg_rep (176)
        on left: 141 142
        on right: 139 142
    comma_dstar_test_opt (177)
        on left: 143 144
        on right: 139
    argument (178)
        on left: 145 146
        on right: 137 138 142
    comp_for_opt (179)
        on left: 147 148
        on right: 145
    comp_for (180)
        on left: 149
        on right: 148 152
    comp_iter_opt (181)
        on left: 150 151
        on right: 149
    comp_iter (182)
        on left: 152
        on right: 151
    subscriptlist (183)
        on left: 153
        on right: 131
    comma_subscript_rep (184)
        on left: 154 155
        on right: 153 155
    subscript (185)
        on left: 156 157 158
        on right: 153 155
    sliceop_opt (186)
        on left: 159 160
        on right: 158
    sliceop (187)
        on left: 161
        on right: 160
    test_opt (188)
        on left: 162 163
        on right: 158 161
    test (189)
        on left: 164
        on right: 28 81 83 85 88 90 139 140 144 145 146 157 163 166
    if_or_test_else_test_opt (190)
        on left: 165 166
        on right: 164
    or_test (191)
        on left: 167
        on right: 149 164 166
    or_and_test_rep (192)
        on left: 168 169
        on right: 167 169
    and_test (193)
        on left: 170
        on right: 167 169
    and_not_test_rep (194)
        on left: 171 172
        on right: 170 172
    not_test (195)
        on left: 173 174
        on right: 170 172 173
    comparison (196)
        on left: 175
        on right: 174
    comp_op_expr_rep (197)
        on left: 176 177
        on right: 175 177
    comp_op (198)
        on left: 178 179 180 181 182 183 184 185 186 187
        on right: 177
    not_in (199)
        on left: 188
        on right: 185
    is_not (200)
        on left: 189
        on right: 187
    dstar_factor_opt (201)
        on left: 190 191
        on right: 127
    atom (202)
        on left: 192 193 194 195
        on right: 127


State 0

    0 $accept: • file_input $end

    $default  reduce using rule 2 (nl_OR_stmt_rep)

    file_input      go to state 1
    nl_OR_stmt_rep  go to state 2


State 1

    0 $accept: file_input • $end

    $end  shift, and go to state 3


State 2

    1 file_input: nl_OR_stmt_rep • ENDMARKER
    3 nl_OR_stmt_rep: nl_OR_stmt_rep • NEWLINE
    4               | nl_OR_stmt_rep • stmt

    FLOATLIT   shift, and go to state 4
    ENDMARKER  shift, and go to state 5
    NAME       shift, and go to state 6
    INTLIT     shift, and go to state 7
    STRINGLIT  shift, and go to state 8
    NEWLINE    shift, and go to state 9
    PLUS       shift, and go to state 10
    MINUS      shift, and go to state 11
    TILDE      shift, and go to state 12
    RAISE      shift, and go to state 13
    DEL        shift, and go to state 14
    IMPORT     shift, and go to state 15
    RETURN     shift, and go to state 16
    ASSERT     shift, and go to state 17
    YIELD      shift, and go to state 18
    BREAK      shift, and go to state 19
    NOT        shift, and go to state 20
    FROM       shift, and go to state 21
    CONTINUE   shift, and go to state 22
    GLOBAL     shift, and go to state 23
    PASS       shift, and go to state 24

    stmt           go to state 25
    simple_stmt    go to state 26
    small_stmt     go to state 27
    global_stmt    go to state 28
    pass_stmt      go to state 29
    del_stmt       go to state 30
    flow_stmt      go to state 31
    assert_stmt    go to state 32
    break_stmt     go to state 33
    continue_stmt  go to state 34
    return_stmt    go to state 35
    raise_stmt     go to state 36
    yield_stmt     go to state 37
    yield_expr     go to state 38
    expr_stmt      go to state 39
    import_stmt    go to state 40
    import_name    go to state 41
    import_from    go to state 42
    testlist       go to state 43
    expr           go to state 44
    xor_expr       go to state 45
    and_expr       go to state 46
    shift_expr     go to state 47
    arith_expr     go to state 48
    term           go to state 49
    factor         go to state 50
    pmt            go to state 51
    power          go to state 52
    test           go to state 53
    or_test        go to state 54
    and_test       go to state 55
    not_test       go to state 56
    comparison     go to state 57
    atom           go to state 58


State 3

    0 $accept: file_input $end •

    $default  accept


State 4

  194 atom: FLOATLIT •

    $default  reduce using rule 194 (atom)


State 5

    1 file_input: nl_OR_stmt_rep ENDMARKER •

    $default  reduce using rule 1 (file_input)


State 6

  192 atom: NAME •

    $default  reduce using rule 192 (atom)


State 7

  193 atom: INTLIT •

    $default  reduce using rule 193 (atom)


State 8

  195 atom: STRINGLIT •

    $default  reduce using rule 195 (atom)


State 9

    3 nl_OR_stmt_rep: nl_OR_stmt_rep NEWLINE •

    $default  reduce using rule 3 (nl_OR_stmt_rep)


State 10

  124 pmt: PLUS •

    $default  reduce using rule 124 (pmt)


State 11

  125 pmt: MINUS •

    $default  reduce using rule 125 (pmt)


State 12

  126 pmt: TILDE •

    $default  reduce using rule 126 (pmt)


State 13

   32 raise_stmt: RAISE • test_triplet_opt

    FLOATLIT   shift, and go to state 4
    NAME       shift, and go to state 6
    INTLIT     shift, and go to state 7
    STRINGLIT  shift, and go to state 8
    PLUS       shift, and go to state 10
    MINUS      shift, and go to state 11
    TILDE      shift, and go to state 12
    NOT        shift, and go to state 20

    $default  reduce using rule 80 (test_triplet_opt)

    test_triplet_opt  go to state 59
    expr              go to state 44
    xor_expr          go to state 45
    and_expr          go to state 46
    shift_expr        go to state 47
    arith_expr        go to state 48
    term              go to state 49
    factor            go to state 50
    pmt               go to state 51
    power             go to state 52
    test              go to state 60
    or_test           go to state 54
    and_test          go to state 55
    not_test          go to state 56
    comparison        go to state 57
    atom              go to state 58


State 14

   22 del_stmt: DEL • exprlist

    FLOATLIT   shift, and go to state 4
    NAME       shift, and go to state 6
    INTLIT     shift, and go to state 7
    STRINGLIT  shift, and go to state 8
    PLUS       shift, and go to state 10
    MINUS      shift, and go to state 11
    TILDE      shift, and go to state 12

    exprlist    go to state 61
    expr        go to state 62
    xor_expr    go to state 45
    and_expr    go to state 46
    shift_expr  go to state 47
    arith_expr  go to state 48
    term        go to state 49
    factor      go to state 50
    pmt         go to state 51
    power       go to state 52
    atom        go to state 58


State 15

   56 import_name: IMPORT • dotted_as_names

    NAME  shift, and go to state 63

    dotted_as_names  go to state 64
    dotted_as_name   go to state 65
    dotted_name      go to state 66


State 16

   31 return_stmt: RETURN • testlist_opt

    FLOATLIT   shift, and go to state 4
    NAME       shift, and go to state 6
    INTLIT     shift, and go to state 7
    STRINGLIT  shift, and go to state 8
    PLUS       shift, and go to state 10
    MINUS      shift, and go to state 11
    TILDE      shift, and go to state 12
    NOT        shift, and go to state 20

    $default  reduce using rule 86 (testlist_opt)

    testlist_opt  go to state 67
    testlist      go to state 68
    expr          go to state 44
    xor_expr      go to state 45
    and_expr      go to state 46
    shift_expr    go to state 47
    arith_expr    go to state 48
    term          go to state 49
    factor        go to state 50
    pmt           go to state 51
    power         go to state 52
    test          go to state 53
    or_test       go to state 54
    and_test      go to state 55
    not_test      go to state 56
    comparison    go to state 57
    atom          go to state 58


State 17

   28 assert_stmt: ASSERT • test comma_test_opt

    FLOATLIT   shift, and go to state 4
    NAME       shift, and go to state 6
    INTLIT     shift, and go to state 7
    STRINGLIT  shift, and go to state 8
    PLUS       shift, and go to state 10
    MINUS      shift, and go to state 11
    TILDE      shift, and go to state 12
    NOT        shift, and go to state 20

    expr        go to state 44
    xor_expr    go to state 45
    and_expr    go to state 46
    shift_expr  go to state 47
    arith_expr  go to state 48
    term        go to state 49
    factor      go to state 50
    pmt         go to state 51
    power       go to state 52
    test        go to state 69
    or_test     go to state 54
    and_test    go to state 55
    not_test    go to state 56
    comparison  go to state 57
    atom        go to state 58


State 18

   34 yield_expr: YIELD • testlist_opt

    FLOATLIT   shift, and go to state 4
    NAME       shift, and go to state 6
    INTLIT     shift, and go to state 7
    STRINGLIT  shift, and go to state 8
    PLUS       shift, and go to state 10
    MINUS      shift, and go to state 11
    TILDE      shift, and go to state 12
    NOT        shift, and go to state 20

    $default  reduce using rule 86 (testlist_opt)

    testlist_opt  go to state 70
    testlist      go to state 68
    expr          go to state 44
    xor_expr      go to state 45
    and_expr      go to state 46
    shift_expr    go to state 47
    arith_expr    go to state 48
    term          go to state 49
    factor        go to state 50
    pmt           go to state 51
    power         go to state 52
    test          go to state 53
    or_test       go to state 54
    and_test      go to state 55
    not_test      go to state 56
    comparison    go to state 57
    atom          go to state 58


State 19

   29 break_stmt: BREAK •

    $default  reduce using rule 29 (break_stmt)


State 20

  173 not_test: NOT • not_test

    FLOATLIT   shift, and go to state 4
    NAME       shift, and go to state 6
    INTLIT     shift, and go to state 7
    STRINGLIT  shift, and go to state 8
    PLUS       shift, and go to state 10
    MINUS      shift, and go to state 11
    TILDE      shift, and go to state 12
    NOT        shift, and go to state 20

    expr        go to state 44
    xor_expr    go to state 45
    and_expr    go to state 46
    shift_expr  go to state 47
    arith_expr  go to state 48
    term        go to state 49
    factor      go to state 50
    pmt         go to state 51
    power       go to state 52
    not_test    go to state 71
    comparison  go to state 57
    atom        go to state 58


State 21

   57 import_from: FROM • dot_OR_ellipsis_rep_opt dotted_name IMPORT import_from_targets
   58            | FROM • dot_OR_ellipsis_rep IMPORT import_from_targets

    DOT       shift, and go to state 72
    ELLIPSIS  shift, and go to state 73

    $default  reduce using rule 74 (dot_OR_ellipsis_rep_opt)

    dot_OR_ellipsis_rep_opt  go to state 74
    dot_OR_ellipsis_rep      go to state 75
    dot_OR_ellipsis          go to state 76


State 22

   30 continue_stmt: CONTINUE •

    $default  reduce using rule 30 (continue_stmt)


State 23

   18 global_stmt: GLOBAL • NAME comma_name_rep

    NAME  shift, and go to state 77


State 24

   21 pass_stmt: PASS •

    $default  reduce using rule 21 (pass_stmt)


State 25

    4 nl_OR_stmt_rep: nl_OR_stmt_rep stmt •

    $default  reduce using rule 4 (nl_OR_stmt_rep)


State 26

    5 stmt: simple_stmt •

    $default  reduce using rule 5 (stmt)


State 27

    6 simple_stmt: small_stmt • semi_small_stmt_rep semi_opt NEWLINE

    $default  reduce using rule 7 (semi_small_stmt_rep)

    semi_small_stmt_rep  go to state 78


State 28

   16 small_stmt: global_stmt •

    $default  reduce using rule 16 (small_stmt)


State 29

   11 small_stmt: pass_stmt •

    $default  reduce using rule 11 (small_stmt)


State 30

   12 small_stmt: del_stmt •

    $default  reduce using rule 12 (small_stmt)


State 31

   13 small_stmt: flow_stmt •

    $default  reduce using rule 13 (small_stmt)


State 32

   17 small_stmt: assert_stmt •

    $default  reduce using rule 17 (small_stmt)


State 33

   23 flow_stmt: break_stmt •

    $default  reduce using rule 23 (flow_stmt)


State 34

   24 flow_stmt: continue_stmt •

    $default  reduce using rule 24 (flow_stmt)


State 35

   25 flow_stmt: return_stmt •

    $default  reduce using rule 25 (flow_stmt)


State 36

   26 flow_stmt: raise_stmt •

    $default  reduce using rule 26 (flow_stmt)


State 37

   27 flow_stmt: yield_stmt •

    $default  reduce using rule 27 (flow_stmt)


State 38

   33 yield_stmt: yield_expr •

    $default  reduce using rule 33 (yield_stmt)


State 39

   15 small_stmt: expr_stmt •

    $default  reduce using rule 15 (small_stmt)


State 40

   14 small_stmt: import_stmt •

    $default  reduce using rule 14 (small_stmt)


State 41

   54 import_stmt: import_name •

    $default  reduce using rule 54 (import_stmt)


State 42

   55 import_stmt: import_from •

    $default  reduce using rule 55 (import_stmt)


State 43

   35 expr_stmt: testlist • expr_conjunct

    PLUSEQUAL         shift, and go to state 79
    MINEQUAL          shift, and go to state 80
    STAREQUAL         shift, and go to state 81
    SLASHEQUAL        shift, and go to state 82
    PERCENTEQUAL      shift, and go to state 83
    AMPEREQUAL        shift, and go to state 84
    VBAREQUAL         shift, and go to state 85
    CIRCUMFLEXEQUAL   shift, and go to state 86
    LEFTSHIFTEQUAL    shift, and go to state 87
    RIGHTSHIFTEQUAL   shift, and go to state 88
    DOUBLESTAREQUAL   shift, and go to state 89
    DOUBLESLASHEQUAL  shift, and go to state 90

    $default  reduce using rule 40 (equal_OR_yield_OR_testlist_rep)

    expr_conjunct                   go to state 91
    equal_OR_yield_OR_testlist_rep  go to state 92
    augassign                       go to state 93


State 44

  175 comparison: expr • comp_op_expr_rep

    $default  reduce using rule 176 (comp_op_expr_rep)

    comp_op_expr_rep  go to state 94


State 45

   96 expr: xor_expr • vbar_xor_expr_rep

    $default  reduce using rule 97 (vbar_xor_expr_rep)

    vbar_xor_expr_rep  go to state 95


State 46

   99 xor_expr: and_expr • caret_and_expr_rep

    $default  reduce using rule 100 (caret_and_expr_rep)

    caret_and_expr_rep  go to state 96


State 47

  102 and_expr: shift_expr • amper_shift_expr_rep

    $default  reduce using rule 103 (amper_shift_expr_rep)

    amper_shift_expr_rep  go to state 97


State 48

  105 shift_expr: arith_expr • shift_arith_expr_rep

    $default  reduce using rule 106 (shift_arith_expr_rep)

    shift_arith_expr_rep  go to state 98


State 49

  110 arith_expr: term • pm_term_rep

    $default  reduce using rule 111 (pm_term_rep)

    pm_term_rep  go to state 99


State 50

  115 term: factor • factops_factor_rep

    $default  reduce using rule 116 (factops_factor_rep)

    factops_factor_rep  go to state 100


State 51

  122 factor: pmt • factor

    FLOATLIT   shift, and go to state 4
    NAME       shift, and go to state 6
    INTLIT     shift, and go to state 7
    STRINGLIT  shift, and go to state 8
    PLUS       shift, and go to state 10
    MINUS      shift, and go to state 11
    TILDE      shift, and go to state 12

    factor  go to state 101
    pmt     go to state 51
    power   go to state 52
    atom    go to state 58


State 52

  123 factor: power •

    $default  reduce using rule 123 (factor)


State 53

   88 testlist: test • comma_test_rep comma_opt

    $default  reduce using rule 89 (comma_test_rep)

    comma_test_rep  go to state 102


State 54

  164 test: or_test • if_or_test_else_test_opt

    IF  shift, and go to state 103

    $default  reduce using rule 165 (if_or_test_else_test_opt)

    if_or_test_else_test_opt  go to state 104


State 55

  167 or_test: and_test • or_and_test_rep

    $default  reduce using rule 168 (or_and_test_rep)

    or_and_test_rep  go to state 105


State 56

  170 and_test: not_test • and_not_test_rep

    $default  reduce using rule 171 (and_not_test_rep)

    and_not_test_rep  go to state 106


State 57

  174 not_test: comparison •

    $default  reduce using rule 174 (not_test)


State 58

  127 power: atom • trailer_rep dstar_factor_opt

    $default  reduce using rule 128 (trailer_rep)

    trailer_rep  go to state 107


State 59

   32 raise_stmt: RAISE test_triplet_opt •

    $default  reduce using rule 32 (raise_stmt)


State 60

   81 test_triplet_opt: test • test_doublet_opt

    COMMA  shift, and go to state 108

    $default  reduce using rule 82 (test_doublet_opt)

    test_doublet_opt  go to state 109


State 61

   22 del_stmt: DEL exprlist •

    $default  reduce using rule 22 (del_stmt)


State 62

   91 exprlist: expr • comma_expr_rep comma_opt

    $default  reduce using rule 92 (comma_expr_rep)

    comma_expr_rep  go to state 110


State 63

   73 dotted_name: NAME •

    $default  reduce using rule 73 (dotted_name)


State 64

   56 import_name: IMPORT dotted_as_names •

    $default  reduce using rule 56 (import_name)


State 65

   68 dotted_as_names: dotted_as_name • comma_dotted_as_name_rep

    $default  reduce using rule 69 (comma_dotted_as_name_rep)

    comma_dotted_as_name_rep  go to state 111


State 66

   71 dotted_as_name: dotted_name • as_name_opt
   72 dotted_name: dotted_name • DOT NAME

    DOT  shift, and go to state 112
    AS   shift, and go to state 113

    $default  reduce using rule 66 (as_name_opt)

    as_name_opt  go to state 114


State 67

   31 return_stmt: RETURN testlist_opt •

    $default  reduce using rule 31 (return_stmt)


State 68

   87 testlist_opt: testlist •

    $default  reduce using rule 87 (testlist_opt)


State 69

   28 assert_stmt: ASSERT test • comma_test_opt

    COMMA  shift, and go to state 115

    $default  reduce using rule 84 (comma_test_opt)

    comma_test_opt  go to state 116


State 70

   34 yield_expr: YIELD testlist_opt •

    $default  reduce using rule 34 (yield_expr)


State 71

  173 not_test: NOT not_test •

    $default  reduce using rule 173 (not_test)


State 72

   78 dot_OR_ellipsis: DOT •

    $default  reduce using rule 78 (dot_OR_ellipsis)


State 73

   79 dot_OR_ellipsis: ELLIPSIS •

    $default  reduce using rule 79 (dot_OR_ellipsis)


State 74

   57 import_from: FROM dot_OR_ellipsis_rep_opt • dotted_name IMPORT import_from_targets

    NAME  shift, and go to state 63

    dotted_name  go to state 117


State 75

   58 import_from: FROM dot_OR_ellipsis_rep • IMPORT import_from_targets
   75 dot_OR_ellipsis_rep_opt: dot_OR_ellipsis_rep •
   77 dot_OR_ellipsis_rep: dot_OR_ellipsis_rep • dot_OR_ellipsis

    DOT       shift, and go to state 72
    ELLIPSIS  shift, and go to state 73
    IMPORT    shift, and go to state 118

    $default  reduce using rule 75 (dot_OR_ellipsis_rep_opt)

    dot_OR_ellipsis  go to state 119


State 76

   76 dot_OR_ellipsis_rep: dot_OR_ellipsis •

    $default  reduce using rule 76 (dot_OR_ellipsis_rep)


State 77

   18 global_stmt: GLOBAL NAME • comma_name_rep

    $default  reduce using rule 19 (comma_name_rep)

    comma_name_rep  go to state 120


State 78

    6 simple_stmt: small_stmt semi_small_stmt_rep • semi_opt NEWLINE
    8 semi_small_stmt_rep: semi_small_stmt_rep • SEMI small_stmt

    SEMI  shift, and go to state 121

    $default  reduce using rule 9 (semi_opt)

    semi_opt  go to state 122


State 79

   42 augassign: PLUSEQUAL •

    $default  reduce using rule 42 (augassign)


State 80

   43 augassign: MINEQUAL •

    $default  reduce using rule 43 (augassign)


State 81

   44 augassign: STAREQUAL •

    $default  reduce using rule 44 (augassign)


State 82

   45 augassign: SLASHEQUAL •

    $default  reduce using rule 45 (augassign)


State 83

   46 augassign: PERCENTEQUAL •

    $default  reduce using rule 46 (augassign)


State 84

   47 augassign: AMPEREQUAL •

    $default  reduce using rule 47 (augassign)


State 85

   48 augassign: VBAREQUAL •

    $default  reduce using rule 48 (augassign)


State 86

   49 augassign: CIRCUMFLEXEQUAL •

    $default  reduce using rule 49 (augassign)


State 87

   50 augassign: LEFTSHIFTEQUAL •

    $default  reduce using rule 50 (augassign)


State 88

   51 augassign: RIGHTSHIFTEQUAL •

    $default  reduce using rule 51 (augassign)


State 89

   52 augassign: DOUBLESTAREQUAL •

    $default  reduce using rule 52 (augassign)


State 90

   53 augassign: DOUBLESLASHEQUAL •

    $default  reduce using rule 53 (augassign)


State 91

   35 expr_stmt: testlist expr_conjunct •

    $default  reduce using rule 35 (expr_stmt)


State 92

   37 expr_conjunct: equal_OR_yield_OR_testlist_rep •
   41 equal_OR_yield_OR_testlist_rep: equal_OR_yield_OR_testlist_rep • EQUAL yield_OR_testlist

    EQUAL  shift, and go to state 123

    $default  reduce using rule 37 (expr_conjunct)


State 93

   36 expr_conjunct: augassign • yield_OR_testlist

    FLOATLIT   shift, and go to state 4
    NAME       shift, and go to state 6
    INTLIT     shift, and go to state 7
    STRINGLIT  shift, and go to state 8
    PLUS       shift, and go to state 10
    MINUS      shift, and go to state 11
    TILDE      shift, and go to state 12
    YIELD      shift, and go to state 124
    NOT        shift, and go to state 20

    yield_OR_testlist  go to state 125
    testlist           go to state 126
    expr               go to state 44
    xor_expr           go to state 45
    and_expr           go to state 46
    shift_expr         go to state 47
    arith_expr         go to state 48
    term               go to state 49
    factor             go to state 50
    pmt                go to state 51
    power              go to state 52
    test               go to state 53
    or_test            go to state 54
    and_test           go to state 55
    not_test           go to state 56
    comparison         go to state 57
    atom               go to state 58


State 94

  175 comparison: expr comp_op_expr_rep •
  177 comp_op_expr_rep: comp_op_expr_rep • comp_op expr

    LESS          shift, and go to state 127
    GREATER       shift, and go to state 128
    EQEQUAL       shift, and go to state 129
    NOTEQUAL      shift, and go to state 130
    LESSEQUAL     shift, and go to state 131
    GREATEREQUAL  shift, and go to state 132
    IN            shift, and go to state 133
    IS            shift, and go to state 134
    NOT           shift, and go to state 135

    $default  reduce using rule 175 (comparison)

    comp_op  go to state 136
    not_in   go to state 137
    is_not   go to state 138


State 95

   96 expr: xor_expr vbar_xor_expr_rep •
   98 vbar_xor_expr_rep: vbar_xor_expr_rep • VBAR xor_expr

    VBAR  shift, and go to state 139

    $default  reduce using rule 96 (expr)


State 96

   99 xor_expr: and_expr caret_and_expr_rep •
  101 caret_and_expr_rep: caret_and_expr_rep • CIRCUMFLEX and_expr

    CIRCUMFLEX  shift, and go to state 140

    $default  reduce using rule 99 (xor_expr)


State 97

  102 and_expr: shift_expr amper_shift_expr_rep •
  104 amper_shift_expr_rep: amper_shift_expr_rep • AMPER shift_expr

    AMPER  shift, and go to state 141

    $default  reduce using rule 102 (and_expr)


State 98

  105 shift_expr: arith_expr shift_arith_expr_rep •
  107 shift_arith_expr_rep: shift_arith_expr_rep • shift arith_expr

    LEFTSHIFT   shift, and go to state 142
    RIGHTSHIFT  shift, and go to state 143

    $default  reduce using rule 105 (shift_expr)

    shift  go to state 144


State 99

  110 arith_expr: term pm_term_rep •
  112 pm_term_rep: pm_term_rep • plus_OR_minus term

    PLUS   shift, and go to state 145
    MINUS  shift, and go to state 146

    $default  reduce using rule 110 (arith_expr)

    plus_OR_minus  go to state 147


State 100

  115 term: factor factops_factor_rep •
  117 factops_factor_rep: factops_factor_rep • factops factor

    STAR         shift, and go to state 148
    SLASH        shift, and go to state 149
    PERCENT      shift, and go to state 150
    DOUBLESLASH  shift, and go to state 151

    $default  reduce using rule 115 (term)

    factops  go to state 152


State 101

  122 factor: pmt factor •

    $default  reduce using rule 122 (factor)


State 102

   88 testlist: test comma_test_rep • comma_opt
   90 comma_test_rep: comma_test_rep • COMMA test

    COMMA  shift, and go to state 153

    $default  reduce using rule 94 (comma_opt)

    comma_opt  go to state 154


State 103

  166 if_or_test_else_test_opt: IF • or_test ELSE test

    FLOATLIT   shift, and go to state 4
    NAME       shift, and go to state 6
    INTLIT     shift, and go to state 7
    STRINGLIT  shift, and go to state 8
    PLUS       shift, and go to state 10
    MINUS      shift, and go to state 11
    TILDE      shift, and go to state 12
    NOT        shift, and go to state 20

    expr        go to state 44
    xor_expr    go to state 45
    and_expr    go to state 46
    shift_expr  go to state 47
    arith_expr  go to state 48
    term        go to state 49
    factor      go to state 50
    pmt         go to state 51
    power       go to state 52
    or_test     go to state 155
    and_test    go to state 55
    not_test    go to state 56
    comparison  go to state 57
    atom        go to state 58


State 104

  164 test: or_test if_or_test_else_test_opt •

    $default  reduce using rule 164 (test)


State 105

  167 or_test: and_test or_and_test_rep •
  169 or_and_test_rep: or_and_test_rep • OR and_test

    OR  shift, and go to state 156

    $default  reduce using rule 167 (or_test)


State 106

  170 and_test: not_test and_not_test_rep •
  172 and_not_test_rep: and_not_test_rep • AND not_test

    AND  shift, and go to state 157

    $default  reduce using rule 170 (and_test)


State 107

  127 power: atom trailer_rep • dstar_factor_opt
  129 trailer_rep: trailer_rep • trailer

    LPAR        shift, and go to state 158
    LSQB        shift, and go to state 159
    DOT         shift, and go to state 160
    DOUBLESTAR  shift, and go to state 161

    $default  reduce using rule 190 (dstar_factor_opt)

    trailer           go to state 162
    dstar_factor_opt  go to state 163


State 108

   83 test_doublet_opt: COMMA • test comma_test_opt

    FLOATLIT   shift, and go to state 4
    NAME       shift, and go to state 6
    INTLIT     shift, and go to state 7
    STRINGLIT  shift, and go to state 8
    PLUS       shift, and go to state 10
    MINUS      shift, and go to state 11
    TILDE      shift, and go to state 12
    NOT        shift, and go to state 20

    expr        go to state 44
    xor_expr    go to state 45
    and_expr    go to state 46
    shift_expr  go to state 47
    arith_expr  go to state 48
    term        go to state 49
    factor      go to state 50
    pmt         go to state 51
    power       go to state 52
    test        go to state 164
    or_test     go to state 54
    and_test    go to state 55
    not_test    go to state 56
    comparison  go to state 57
    atom        go to state 58


State 109

   81 test_triplet_opt: test test_doublet_opt •

    $default  reduce using rule 81 (test_triplet_opt)


State 110

   91 exprlist: expr comma_expr_rep • comma_opt
   93 comma_expr_rep: comma_expr_rep • COMMA expr

    COMMA  shift, and go to state 165

    $default  reduce using rule 94 (comma_opt)

    comma_opt  go to state 166


State 111

   68 dotted_as_names: dotted_as_name comma_dotted_as_name_rep •
   70 comma_dotted_as_name_rep: comma_dotted_as_name_rep • COMMA dotted_as_name

    COMMA  shift, and go to state 167

    $default  reduce using rule 68 (dotted_as_names)


State 112

   72 dotted_name: dotted_name DOT • NAME

    NAME  shift, and go to state 168


State 113

   67 as_name_opt: AS • NAME

    NAME  shift, and go to state 169


State 114

   71 dotted_as_name: dotted_name as_name_opt •

    $default  reduce using rule 71 (dotted_as_name)


State 115

   85 comma_test_opt: COMMA • test

    FLOATLIT   shift, and go to state 4
    NAME       shift, and go to state 6
    INTLIT     shift, and go to state 7
    STRINGLIT  shift, and go to state 8
    PLUS       shift, and go to state 10
    MINUS      shift, and go to state 11
    TILDE      shift, and go to state 12
    NOT        shift, and go to state 20

    expr        go to state 44
    xor_expr    go to state 45
    and_expr    go to state 46
    shift_expr  go to state 47
    arith_expr  go to state 48
    term        go to state 49
    factor      go to state 50
    pmt         go to state 51
    power       go to state 52
    test        go to state 170
    or_test     go to state 54
    and_test    go to state 55
    not_test    go to state 56
    comparison  go to state 57
    atom        go to state 58


State 116

   28 assert_stmt: ASSERT test comma_test_opt •

    $default  reduce using rule 28 (assert_stmt)


State 117

   57 import_from: FROM dot_OR_ellipsis_rep_opt dotted_name • IMPORT import_from_targets
   72 dotted_name: dotted_name • DOT NAME

    DOT     shift, and go to state 112
    IMPORT  shift, and go to state 171


State 118

   58 import_from: FROM dot_OR_ellipsis_rep IMPORT • import_from_targets

    NAME  shift, and go to state 172
    LPAR  shift, and go to state 173
    STAR  shift, and go to state 174

    import_from_targets   go to state 175
    import_from_as_names  go to state 176
    import_from_as_name   go to state 177


State 119

   77 dot_OR_ellipsis_rep: dot_OR_ellipsis_rep dot_OR_ellipsis •

    $default  reduce using rule 77 (dot_OR_ellipsis_rep)


State 120

   18 global_stmt: GLOBAL NAME comma_name_rep •
   20 comma_name_rep: comma_name_rep • COMMA NAME

    COMMA  shift, and go to state 178

    $default  reduce using rule 18 (global_stmt)


State 121

    8 semi_small_stmt_rep: semi_small_stmt_rep SEMI • small_stmt
   10 semi_opt: SEMI •

    FLOATLIT   shift, and go to state 4
    NAME       shift, and go to state 6
    INTLIT     shift, and go to state 7
    STRINGLIT  shift, and go to state 8
    PLUS       shift, and go to state 10
    MINUS      shift, and go to state 11
    TILDE      shift, and go to state 12
    RAISE      shift, and go to state 13
    DEL        shift, and go to state 14
    IMPORT     shift, and go to state 15
    RETURN     shift, and go to state 16
    ASSERT     shift, and go to state 17
    YIELD      shift, and go to state 18
    BREAK      shift, and go to state 19
    NOT        shift, and go to state 20
    FROM       shift, and go to state 21
    CONTINUE   shift, and go to state 22
    GLOBAL     shift, and go to state 23
    PASS       shift, and go to state 24

    $default  reduce using rule 10 (semi_opt)

    small_stmt     go to state 179
    global_stmt    go to state 28
    pass_stmt      go to state 29
    del_stmt       go to state 30
    flow_stmt      go to state 31
    assert_stmt    go to state 32
    break_stmt     go to state 33
    continue_stmt  go to state 34
    return_stmt    go to state 35
    raise_stmt     go to state 36
    yield_stmt     go to state 37
    yield_expr     go to state 38
    expr_stmt      go to state 39
    import_stmt    go to state 40
    import_name    go to state 41
    import_from    go to state 42
    testlist       go to state 43
    expr           go to state 44
    xor_expr       go to state 45
    and_expr       go to state 46
    shift_expr     go to state 47
    arith_expr     go to state 48
    term           go to state 49
    factor         go to state 50
    pmt            go to state 51
    power          go to state 52
    test           go to state 53
    or_test        go to state 54
    and_test       go to state 55
    not_test       go to state 56
    comparison     go to state 57
    atom           go to state 58


State 122

    6 simple_stmt: small_stmt semi_small_stmt_rep semi_opt • NEWLINE

    NEWLINE  shift, and go to state 180


State 123

   41 equal_OR_yield_OR_testlist_rep: equal_OR_yield_OR_testlist_rep EQUAL • yield_OR_testlist

    FLOATLIT   shift, and go to state 4
    NAME       shift, and go to state 6
    INTLIT     shift, and go to state 7
    STRINGLIT  shift, and go to state 8
    PLUS       shift, and go to state 10
    MINUS      shift, and go to state 11
    TILDE      shift, and go to state 12
    YIELD      shift, and go to state 124
    NOT        shift, and go to state 20

    yield_OR_testlist  go to state 181
    testlist           go to state 126
    expr               go to state 44
    xor_expr           go to state 45
    and_expr           go to state 46
    shift_expr         go to state 47
    arith_expr         go to state 48
    term               go to state 49
    factor             go to state 50
    pmt                go to state 51
    power              go to state 52
    test               go to state 53
    or_test            go to state 54
    and_test           go to state 55
    not_test           go to state 56
    comparison         go to state 57
    atom               go to state 58


State 124

   38 yield_OR_testlist: YIELD •

    $default  reduce using rule 38 (yield_OR_testlist)


State 125

   36 expr_conjunct: augassign yield_OR_testlist •

    $default  reduce using rule 36 (expr_conjunct)


State 126

   39 yield_OR_testlist: testlist •

    $default  reduce using rule 39 (yield_OR_testlist)


State 127

  178 comp_op: LESS •

    $default  reduce using rule 178 (comp_op)


State 128

  179 comp_op: GREATER •

    $default  reduce using rule 179 (comp_op)


State 129

  180 comp_op: EQEQUAL •

    $default  reduce using rule 180 (comp_op)


State 130

  183 comp_op: NOTEQUAL •

    $default  reduce using rule 183 (comp_op)


State 131

  182 comp_op: LESSEQUAL •

    $default  reduce using rule 182 (comp_op)


State 132

  181 comp_op: GREATEREQUAL •

    $default  reduce using rule 181 (comp_op)


State 133

  184 comp_op: IN •

    $default  reduce using rule 184 (comp_op)


State 134

  186 comp_op: IS •
  189 is_not: IS • NOT

    NOT  shift, and go to state 182

    $default  reduce using rule 186 (comp_op)


State 135

  188 not_in: NOT • IN

    IN  shift, and go to state 183


State 136

  177 comp_op_expr_rep: comp_op_expr_rep comp_op • expr

    FLOATLIT   shift, and go to state 4
    NAME       shift, and go to state 6
    INTLIT     shift, and go to state 7
    STRINGLIT  shift, and go to state 8
    PLUS       shift, and go to state 10
    MINUS      shift, and go to state 11
    TILDE      shift, and go to state 12

    expr        go to state 184
    xor_expr    go to state 45
    and_expr    go to state 46
    shift_expr  go to state 47
    arith_expr  go to state 48
    term        go to state 49
    factor      go to state 50
    pmt         go to state 51
    power       go to state 52
    atom        go to state 58


State 137

  185 comp_op: not_in •

    $default  reduce using rule 185 (comp_op)


State 138

  187 comp_op: is_not •

    $default  reduce using rule 187 (comp_op)


State 139

   98 vbar_xor_expr_rep: vbar_xor_expr_rep VBAR • xor_expr

    FLOATLIT   shift, and go to state 4
    NAME       shift, and go to state 6
    INTLIT     shift, and go to state 7
    STRINGLIT  shift, and go to state 8
    PLUS       shift, and go to state 10
    MINUS      shift, and go to state 11
    TILDE      shift, and go to state 12

    xor_expr    go to state 185
    and_expr    go to state 46
    shift_expr  go to state 47
    arith_expr  go to state 48
    term        go to state 49
    factor      go to state 50
    pmt         go to state 51
    power       go to state 52
    atom        go to state 58


State 140

  101 caret_and_expr_rep: caret_and_expr_rep CIRCUMFLEX • and_expr

    FLOATLIT   shift, and go to state 4
    NAME       shift, and go to state 6
    INTLIT     shift, and go to state 7
    STRINGLIT  shift, and go to state 8
    PLUS       shift, and go to state 10
    MINUS      shift, and go to state 11
    TILDE      shift, and go to state 12

    and_expr    go to state 186
    shift_expr  go to state 47
    arith_expr  go to state 48
    term        go to state 49
    factor      go to state 50
    pmt         go to state 51
    power       go to state 52
    atom        go to state 58


State 141

  104 amper_shift_expr_rep: amper_shift_expr_rep AMPER • shift_expr

    FLOATLIT   shift, and go to state 4
    NAME       shift, and go to state 6
    INTLIT     shift, and go to state 7
    STRINGLIT  shift, and go to state 8
    PLUS       shift, and go to state 10
    MINUS      shift, and go to state 11
    TILDE      shift, and go to state 12

    shift_expr  go to state 187
    arith_expr  go to state 48
    term        go to state 49
    factor      go to state 50
    pmt         go to state 51
    power       go to state 52
    atom        go to state 58


State 142

  108 shift: LEFTSHIFT •

    $default  reduce using rule 108 (shift)


State 143

  109 shift: RIGHTSHIFT •

    $default  reduce using rule 109 (shift)


State 144

  107 shift_arith_expr_rep: shift_arith_expr_rep shift • arith_expr

    FLOATLIT   shift, and go to state 4
    NAME       shift, and go to state 6
    INTLIT     shift, and go to state 7
    STRINGLIT  shift, and go to state 8
    PLUS       shift, and go to state 10
    MINUS      shift, and go to state 11
    TILDE      shift, and go to state 12

    arith_expr  go to state 188
    term        go to state 49
    factor      go to state 50
    pmt         go to state 51
    power       go to state 52
    atom        go to state 58


State 145

  113 plus_OR_minus: PLUS •

    $default  reduce using rule 113 (plus_OR_minus)


State 146

  114 plus_OR_minus: MINUS •

    $default  reduce using rule 114 (plus_OR_minus)


State 147

  112 pm_term_rep: pm_term_rep plus_OR_minus • term

    FLOATLIT   shift, and go to state 4
    NAME       shift, and go to state 6
    INTLIT     shift, and go to state 7
    STRINGLIT  shift, and go to state 8
    PLUS       shift, and go to state 10
    MINUS      shift, and go to state 11
    TILDE      shift, and go to state 12

    term    go to state 189
    factor  go to state 50
    pmt     go to state 51
    power   go to state 52
    atom    go to state 58


State 148

  118 factops: STAR •

    $default  reduce using rule 118 (factops)


State 149

  119 factops: SLASH •

    $default  reduce using rule 119 (factops)


State 150

  120 factops: PERCENT •

    $default  reduce using rule 120 (factops)


State 151

  121 factops: DOUBLESLASH •

    $default  reduce using rule 121 (factops)


State 152

  117 factops_factor_rep: factops_factor_rep factops • factor

    FLOATLIT   shift, and go to state 4
    NAME       shift, and go to state 6
    INTLIT     shift, and go to state 7
    STRINGLIT  shift, and go to state 8
    PLUS       shift, and go to state 10
    MINUS      shift, and go to state 11
    TILDE      shift, and go to state 12

    factor  go to state 190
    pmt     go to state 51
    power   go to state 52
    atom    go to state 58


State 153

   90 comma_test_rep: comma_test_rep COMMA • test
   95 comma_opt: COMMA •

    FLOATLIT   shift, and go to state 4
    NAME       shift, and go to state 6
    INTLIT     shift, and go to state 7
    STRINGLIT  shift, and go to state 8
    PLUS       shift, and go to state 10
    MINUS      shift, and go to state 11
    TILDE      shift, and go to state 12
    NOT        shift, and go to state 20

    $default  reduce using rule 95 (comma_opt)

    expr        go to state 44
    xor_expr    go to state 45
    and_expr    go to state 46
    shift_expr  go to state 47
    arith_expr  go to state 48
    term        go to state 49
    factor      go to state 50
    pmt         go to state 51
    power       go to state 52
    test        go to state 191
    or_test     go to state 54
    and_test    go to state 55
    not_test    go to state 56
    comparison  go to state 57
    atom        go to state 58


State 154

   88 testlist: test comma_test_rep comma_opt •

    $default  reduce using rule 88 (testlist)


State 155

  166 if_or_test_else_test_opt: IF or_test • ELSE test

    ELSE  shift, and go to state 192


State 156

  169 or_and_test_rep: or_and_test_rep OR • and_test

    FLOATLIT   shift, and go to state 4
    NAME       shift, and go to state 6
    INTLIT     shift, and go to state 7
    STRINGLIT  shift, and go to state 8
    PLUS       shift, and go to state 10
    MINUS      shift, and go to state 11
    TILDE      shift, and go to state 12
    NOT        shift, and go to state 20

    expr        go to state 44
    xor_expr    go to state 45
    and_expr    go to state 46
    shift_expr  go to state 47
    arith_expr  go to state 48
    term        go to state 49
    factor      go to state 50
    pmt         go to state 51
    power       go to state 52
    and_test    go to state 193
    not_test    go to state 56
    comparison  go to state 57
    atom        go to state 58


State 157

  172 and_not_test_rep: and_not_test_rep AND • not_test

    FLOATLIT   shift, and go to state 4
    NAME       shift, and go to state 6
    INTLIT     shift, and go to state 7
    STRINGLIT  shift, and go to state 8
    PLUS       shift, and go to state 10
    MINUS      shift, and go to state 11
    TILDE      shift, and go to state 12
    NOT        shift, and go to state 20

    expr        go to state 44
    xor_expr    go to state 45
    and_expr    go to state 46
    shift_expr  go to state 47
    arith_expr  go to state 48
    term        go to state 49
    factor      go to state 50
    pmt         go to state 51
    power       go to state 52
    not_test    go to state 194
    comparison  go to state 57
    atom        go to state 58


State 158

  130 trailer: LPAR • arglist_opt RPAR

    RPAR      reduce using rule 133 (arglist_opt)
    $default  reduce using rule 136 (arg_comma_rep)

    arglist_opt    go to state 195
    arglist        go to state 196
    arg_comma_rep  go to state 197


State 159

  131 trailer: LSQB • subscriptlist RSQB

    FLOATLIT   shift, and go to state 4
    NAME       shift, and go to state 6
    INTLIT     shift, and go to state 7
    STRINGLIT  shift, and go to state 8
    PLUS       shift, and go to state 10
    MINUS      shift, and go to state 11
    TILDE      shift, and go to state 12
    ELLIPSIS   shift, and go to state 198
    NOT        shift, and go to state 20

    $default  reduce using rule 162 (test_opt)

    expr           go to state 44
    xor_expr       go to state 45
    and_expr       go to state 46
    shift_expr     go to state 47
    arith_expr     go to state 48
    term           go to state 49
    factor         go to state 50
    pmt            go to state 51
    power          go to state 52
    subscriptlist  go to state 199
    subscript      go to state 200
    test_opt       go to state 201
    test           go to state 202
    or_test        go to state 54
    and_test       go to state 55
    not_test       go to state 56
    comparison     go to state 57
    atom           go to state 58


State 160

  132 trailer: DOT • NAME

    NAME  shift, and go to state 203


State 161

  191 dstar_factor_opt: DOUBLESTAR • factor

    FLOATLIT   shift, and go to state 4
    NAME       shift, and go to state 6
    INTLIT     shift, and go to state 7
    STRINGLIT  shift, and go to state 8
    PLUS       shift, and go to state 10
    MINUS      shift, and go to state 11
    TILDE      shift, and go to state 12

    factor  go to state 204
    pmt     go to state 51
    power   go to state 52
    atom    go to state 58


State 162

  129 trailer_rep: trailer_rep trailer •

    $default  reduce using rule 129 (trailer_rep)


State 163

  127 power: atom trailer_rep dstar_factor_opt •

    $default  reduce using rule 127 (power)


State 164

   83 test_doublet_opt: COMMA test • comma_test_opt

    COMMA  shift, and go to state 115

    $default  reduce using rule 84 (comma_test_opt)

    comma_test_opt  go to state 205


State 165

   93 comma_expr_rep: comma_expr_rep COMMA • expr
   95 comma_opt: COMMA •

    FLOATLIT   shift, and go to state 4
    NAME       shift, and go to state 6
    INTLIT     shift, and go to state 7
    STRINGLIT  shift, and go to state 8
    PLUS       shift, and go to state 10
    MINUS      shift, and go to state 11
    TILDE      shift, and go to state 12

    $default  reduce using rule 95 (comma_opt)

    expr        go to state 206
    xor_expr    go to state 45
    and_expr    go to state 46
    shift_expr  go to state 47
    arith_expr  go to state 48
    term        go to state 49
    factor      go to state 50
    pmt         go to state 51
    power       go to state 52
    atom        go to state 58


State 166

   91 exprlist: expr comma_expr_rep comma_opt •

    $default  reduce using rule 91 (exprlist)


State 167

   70 comma_dotted_as_name_rep: comma_dotted_as_name_rep COMMA • dotted_as_name

    NAME  shift, and go to state 63

    dotted_as_name  go to state 207
    dotted_name     go to state 66


State 168

   72 dotted_name: dotted_name DOT NAME •

    $default  reduce using rule 72 (dotted_name)


State 169

   67 as_name_opt: AS NAME •

    $default  reduce using rule 67 (as_name_opt)


State 170

   85 comma_test_opt: COMMA test •

    $default  reduce using rule 85 (comma_test_opt)


State 171

   57 import_from: FROM dot_OR_ellipsis_rep_opt dotted_name IMPORT • import_from_targets

    NAME  shift, and go to state 172
    LPAR  shift, and go to state 173
    STAR  shift, and go to state 174

    import_from_targets   go to state 208
    import_from_as_names  go to state 176
    import_from_as_name   go to state 177


State 172

   65 import_from_as_name: NAME • as_name_opt

    AS  shift, and go to state 113

    $default  reduce using rule 66 (as_name_opt)

    as_name_opt  go to state 209


State 173

   59 import_from_targets: LPAR • import_from_as_names comma_opt RPAR

    NAME  shift, and go to state 172

    import_from_as_names  go to state 210
    import_from_as_name   go to state 177


State 174

   61 import_from_targets: STAR •

    $default  reduce using rule 61 (import_from_targets)


State 175

   58 import_from: FROM dot_OR_ellipsis_rep IMPORT import_from_targets •

    $default  reduce using rule 58 (import_from)


State 176

   60 import_from_targets: import_from_as_names •

    $default  reduce using rule 60 (import_from_targets)


State 177

   62 import_from_as_names: import_from_as_name • comma_import_from_as_name_rep

    $default  reduce using rule 63 (comma_import_from_as_name_rep)

    comma_import_from_as_name_rep  go to state 211


State 178

   20 comma_name_rep: comma_name_rep COMMA • NAME

    NAME  shift, and go to state 212


State 179

    8 semi_small_stmt_rep: semi_small_stmt_rep SEMI small_stmt •

    $default  reduce using rule 8 (semi_small_stmt_rep)


State 180

    6 simple_stmt: small_stmt semi_small_stmt_rep semi_opt NEWLINE •

    $default  reduce using rule 6 (simple_stmt)


State 181

   41 equal_OR_yield_OR_testlist_rep: equal_OR_yield_OR_testlist_rep EQUAL yield_OR_testlist •

    $default  reduce using rule 41 (equal_OR_yield_OR_testlist_rep)


State 182

  189 is_not: IS NOT •

    $default  reduce using rule 189 (is_not)


State 183

  188 not_in: NOT IN •

    $default  reduce using rule 188 (not_in)


State 184

  177 comp_op_expr_rep: comp_op_expr_rep comp_op expr •

    $default  reduce using rule 177 (comp_op_expr_rep)


State 185

   98 vbar_xor_expr_rep: vbar_xor_expr_rep VBAR xor_expr •

    $default  reduce using rule 98 (vbar_xor_expr_rep)


State 186

  101 caret_and_expr_rep: caret_and_expr_rep CIRCUMFLEX and_expr •

    $default  reduce using rule 101 (caret_and_expr_rep)


State 187

  104 amper_shift_expr_rep: amper_shift_expr_rep AMPER shift_expr •

    $default  reduce using rule 104 (amper_shift_expr_rep)


State 188

  107 shift_arith_expr_rep: shift_arith_expr_rep shift arith_expr •

    $default  reduce using rule 107 (shift_arith_expr_rep)


State 189

  112 pm_term_rep: pm_term_rep plus_OR_minus term •

    $default  reduce using rule 112 (pm_term_rep)


State 190

  117 factops_factor_rep: factops_factor_rep factops factor •

    $default  reduce using rule 117 (factops_factor_rep)


State 191

   90 comma_test_rep: comma_test_rep COMMA test •

    $default  reduce using rule 90 (comma_test_rep)


State 192

  166 if_or_test_else_test_opt: IF or_test ELSE • test

    FLOATLIT   shift, and go to state 4
    NAME       shift, and go to state 6
    INTLIT     shift, and go to state 7
    STRINGLIT  shift, and go to state 8
    PLUS       shift, and go to state 10
    MINUS      shift, and go to state 11
    TILDE      shift, and go to state 12
    NOT        shift, and go to state 20

    expr        go to state 44
    xor_expr    go to state 45
    and_expr    go to state 46
    shift_expr  go to state 47
    arith_expr  go to state 48
    term        go to state 49
    factor      go to state 50
    pmt         go to state 51
    power       go to state 52
    test        go to state 213
    or_test     go to state 54
    and_test    go to state 55
    not_test    go to state 56
    comparison  go to state 57
    atom        go to state 58


State 193

  169 or_and_test_rep: or_and_test_rep OR and_test •

    $default  reduce using rule 169 (or_and_test_rep)


State 194

  172 and_not_test_rep: and_not_test_rep AND not_test •

    $default  reduce using rule 172 (and_not_test_rep)


State 195

  130 trailer: LPAR arglist_opt • RPAR

    RPAR  shift, and go to state 214


State 196

  134 arglist_opt: arglist •

    $default  reduce using rule 134 (arglist_opt)


State 197

  135 arglist: arg_comma_rep • arg_ORS
  137 arg_comma_rep: arg_comma_rep • argument COMMA

    FLOATLIT    shift, and go to state 4
    NAME        shift, and go to state 6
    INTLIT      shift, and go to state 7
    STRINGLIT   shift, and go to state 8
    PLUS        shift, and go to state 10
    MINUS       shift, and go to state 11
    STAR        shift, and go to state 215
    TILDE       shift, and go to state 12
    DOUBLESTAR  shift, and go to state 216
    NOT         shift, and go to state 20

    expr        go to state 44
    xor_expr    go to state 45
    and_expr    go to state 46
    shift_expr  go to state 47
    arith_expr  go to state 48
    term        go to state 49
    factor      go to state 50
    pmt         go to state 51
    power       go to state 52
    arg_ORS     go to state 217
    argument    go to state 218
    test        go to state 219
    or_test     go to state 54
    and_test    go to state 55
    not_test    go to state 56
    comparison  go to state 57
    atom        go to state 58


State 198

  156 subscript: ELLIPSIS •

    $default  reduce using rule 156 (subscript)


State 199

  131 trailer: LSQB subscriptlist • RSQB

    RSQB  shift, and go to state 220


State 200

  153 subscriptlist: subscript • comma_subscript_rep comma_opt

    $default  reduce using rule 154 (comma_subscript_rep)

    comma_subscript_rep  go to state 221


State 201

  158 subscript: test_opt • COLON test_opt sliceop_opt

    COLON  shift, and go to state 222


State 202

  157 subscript: test •
  163 test_opt: test •

    COLON     reduce using rule 163 (test_opt)
    $default  reduce using rule 157 (subscript)


State 203

  132 trailer: DOT NAME •

    $default  reduce using rule 132 (trailer)


State 204

  191 dstar_factor_opt: DOUBLESTAR factor •

    $default  reduce using rule 191 (dstar_factor_opt)


State 205

   83 test_doublet_opt: COMMA test comma_test_opt •

    $default  reduce using rule 83 (test_doublet_opt)


State 206

   93 comma_expr_rep: comma_expr_rep COMMA expr •

    $default  reduce using rule 93 (comma_expr_rep)


State 207

   70 comma_dotted_as_name_rep: comma_dotted_as_name_rep COMMA dotted_as_name •

    $default  reduce using rule 70 (comma_dotted_as_name_rep)


State 208

   57 import_from: FROM dot_OR_ellipsis_rep_opt dotted_name IMPORT import_from_targets •

    $default  reduce using rule 57 (import_from)


State 209

   65 import_from_as_name: NAME as_name_opt •

    $default  reduce using rule 65 (import_from_as_name)


State 210

   59 import_from_targets: LPAR import_from_as_names • comma_opt RPAR

    COMMA  shift, and go to state 223

    $default  reduce using rule 94 (comma_opt)

    comma_opt  go to state 224


State 211

   62 import_from_as_names: import_from_as_name comma_import_from_as_name_rep •
   64 comma_import_from_as_name_rep: comma_import_from_as_name_rep • COMMA import_from_as_name

    COMMA  shift, and go to state 225

    COMMA     [reduce using rule 62 (import_from_as_names)]
    $default  reduce using rule 62 (import_from_as_names)


State 212

   20 comma_name_rep: comma_name_rep COMMA NAME •

    $default  reduce using rule 20 (comma_name_rep)


State 213

  166 if_or_test_else_test_opt: IF or_test ELSE test •

    $default  reduce using rule 166 (if_or_test_else_test_opt)


State 214

  130 trailer: LPAR arglist_opt RPAR •

    $default  reduce using rule 130 (trailer)


State 215

  139 arg_ORS: STAR • test comma_arg_rep comma_dstar_test_opt

    FLOATLIT   shift, and go to state 4
    NAME       shift, and go to state 6
    INTLIT     shift, and go to state 7
    STRINGLIT  shift, and go to state 8
    PLUS       shift, and go to state 10
    MINUS      shift, and go to state 11
    TILDE      shift, and go to state 12
    NOT        shift, and go to state 20

    expr        go to state 44
    xor_expr    go to state 45
    and_expr    go to state 46
    shift_expr  go to state 47
    arith_expr  go to state 48
    term        go to state 49
    factor      go to state 50
    pmt         go to state 51
    power       go to state 52
    test        go to state 226
    or_test     go to state 54
    and_test    go to state 55
    not_test    go to state 56
    comparison  go to state 57
    atom        go to state 58


State 216

  140 arg_ORS: DOUBLESTAR • test

    FLOATLIT   shift, and go to state 4
    NAME       shift, and go to state 6
    INTLIT     shift, and go to state 7
    STRINGLIT  shift, and go to state 8
    PLUS       shift, and go to state 10
    MINUS      shift, and go to state 11
    TILDE      shift, and go to state 12
    NOT        shift, and go to state 20

    expr        go to state 44
    xor_expr    go to state 45
    and_expr    go to state 46
    shift_expr  go to state 47
    arith_expr  go to state 48
    term        go to state 49
    factor      go to state 50
    pmt         go to state 51
    power       go to state 52
    test        go to state 227
    or_test     go to state 54
    and_test    go to state 55
    not_test    go to state 56
    comparison  go to state 57
    atom        go to state 58


State 217

  135 arglist: arg_comma_rep arg_ORS •

    $default  reduce using rule 135 (arglist)


State 218

  137 arg_comma_rep: arg_comma_rep argument • COMMA
  138 arg_ORS: argument • comma_opt

    COMMA  shift, and go to state 228

    $default  reduce using rule 94 (comma_opt)

    comma_opt  go to state 229


State 219

  145 argument: test • comp_for_opt
  146         | test • EQUAL test

    EQUAL  shift, and go to state 230
    FOR    shift, and go to state 231

    $default  reduce using rule 147 (comp_for_opt)

    comp_for_opt  go to state 232
    comp_for      go to state 233


State 220

  131 trailer: LSQB subscriptlist RSQB •

    $default  reduce using rule 131 (trailer)


State 221

  153 subscriptlist: subscript comma_subscript_rep • comma_opt
  155 comma_subscript_rep: comma_subscript_rep • COMMA subscript

    COMMA  shift, and go to state 234

    $default  reduce using rule 94 (comma_opt)

    comma_opt  go to state 235


State 222

  158 subscript: test_opt COLON • test_opt sliceop_opt

    FLOATLIT   shift, and go to state 4
    NAME       shift, and go to state 6
    INTLIT     shift, and go to state 7
    STRINGLIT  shift, and go to state 8
    PLUS       shift, and go to state 10
    MINUS      shift, and go to state 11
    TILDE      shift, and go to state 12
    NOT        shift, and go to state 20

    $default  reduce using rule 162 (test_opt)

    expr        go to state 44
    xor_expr    go to state 45
    and_expr    go to state 46
    shift_expr  go to state 47
    arith_expr  go to state 48
    term        go to state 49
    factor      go to state 50
    pmt         go to state 51
    power       go to state 52
    test_opt    go to state 236
    test        go to state 237
    or_test     go to state 54
    and_test    go to state 55
    not_test    go to state 56
    comparison  go to state 57
    atom        go to state 58


State 223

   95 comma_opt: COMMA •

    $default  reduce using rule 95 (comma_opt)


State 224

   59 import_from_targets: LPAR import_from_as_names comma_opt • RPAR

    RPAR  shift, and go to state 238


State 225

   64 comma_import_from_as_name_rep: comma_import_from_as_name_rep COMMA • import_from_as_name

    NAME  shift, and go to state 172

    import_from_as_name  go to state 239


State 226

  139 arg_ORS: STAR test • comma_arg_rep comma_dstar_test_opt

    $default  reduce using rule 141 (comma_arg_rep)

    comma_arg_rep  go to state 240


State 227

  140 arg_ORS: DOUBLESTAR test •

    $default  reduce using rule 140 (arg_ORS)


State 228

   95 comma_opt: COMMA •
  137 arg_comma_rep: arg_comma_rep argument COMMA •

    RPAR      reduce using rule 95 (comma_opt)
    $default  reduce using rule 137 (arg_comma_rep)


State 229

  138 arg_ORS: argument comma_opt •

    $default  reduce using rule 138 (arg_ORS)


State 230

  146 argument: test EQUAL • test

    FLOATLIT   shift, and go to state 4
    NAME       shift, and go to state 6
    INTLIT     shift, and go to state 7
    STRINGLIT  shift, and go to state 8
    PLUS       shift, and go to state 10
    MINUS      shift, and go to state 11
    TILDE      shift, and go to state 12
    NOT        shift, and go to state 20

    expr        go to state 44
    xor_expr    go to state 45
    and_expr    go to state 46
    shift_expr  go to state 47
    arith_expr  go to state 48
    term        go to state 49
    factor      go to state 50
    pmt         go to state 51
    power       go to state 52
    test        go to state 241
    or_test     go to state 54
    and_test    go to state 55
    not_test    go to state 56
    comparison  go to state 57
    atom        go to state 58


State 231

  149 comp_for: FOR • exprlist IN or_test comp_iter_opt

    FLOATLIT   shift, and go to state 4
    NAME       shift, and go to state 6
    INTLIT     shift, and go to state 7
    STRINGLIT  shift, and go to state 8
    PLUS       shift, and go to state 10
    MINUS      shift, and go to state 11
    TILDE      shift, and go to state 12

    exprlist    go to state 242
    expr        go to state 62
    xor_expr    go to state 45
    and_expr    go to state 46
    shift_expr  go to state 47
    arith_expr  go to state 48
    term        go to state 49
    factor      go to state 50
    pmt         go to state 51
    power       go to state 52
    atom        go to state 58


State 232

  145 argument: test comp_for_opt •

    $default  reduce using rule 145 (argument)


State 233

  148 comp_for_opt: comp_for •

    $default  reduce using rule 148 (comp_for_opt)


State 234

   95 comma_opt: COMMA •
  155 comma_subscript_rep: comma_subscript_rep COMMA • subscript

    FLOATLIT   shift, and go to state 4
    NAME       shift, and go to state 6
    INTLIT     shift, and go to state 7
    STRINGLIT  shift, and go to state 8
    PLUS       shift, and go to state 10
    MINUS      shift, and go to state 11
    TILDE      shift, and go to state 12
    ELLIPSIS   shift, and go to state 198
    NOT        shift, and go to state 20

    COLON     reduce using rule 162 (test_opt)
    $default  reduce using rule 95 (comma_opt)

    expr        go to state 44
    xor_expr    go to state 45
    and_expr    go to state 46
    shift_expr  go to state 47
    arith_expr  go to state 48
    term        go to state 49
    factor      go to state 50
    pmt         go to state 51
    power       go to state 52
    subscript   go to state 243
    test_opt    go to state 201
    test        go to state 202
    or_test     go to state 54
    and_test    go to state 55
    not_test    go to state 56
    comparison  go to state 57
    atom        go to state 58


State 235

  153 subscriptlist: subscript comma_subscript_rep comma_opt •

    $default  reduce using rule 153 (subscriptlist)


State 236

  158 subscript: test_opt COLON test_opt • sliceop_opt

    COLON  shift, and go to state 244

    $default  reduce using rule 159 (sliceop_opt)

    sliceop_opt  go to state 245
    sliceop      go to state 246


State 237

  163 test_opt: test •

    $default  reduce using rule 163 (test_opt)


State 238

   59 import_from_targets: LPAR import_from_as_names comma_opt RPAR •

    $default  reduce using rule 59 (import_from_targets)


State 239

   64 comma_import_from_as_name_rep: comma_import_from_as_name_rep COMMA import_from_as_name •

    $default  reduce using rule 64 (comma_import_from_as_name_rep)


State 240

  139 arg_ORS: STAR test comma_arg_rep • comma_dstar_test_opt
  142 comma_arg_rep: comma_arg_rep • COMMA argument

    COMMA  shift, and go to state 247

    $default  reduce using rule 143 (comma_dstar_test_opt)

    comma_dstar_test_opt  go to state 248


State 241

  146 argument: test EQUAL test •

    $default  reduce using rule 146 (argument)


State 242

  149 comp_for: FOR exprlist • IN or_test comp_iter_opt

    IN  shift, and go to state 249


State 243

  155 comma_subscript_rep: comma_subscript_rep COMMA subscript •

    $default  reduce using rule 155 (comma_subscript_rep)


State 244

  161 sliceop: COLON • test_opt

    FLOATLIT   shift, and go to state 4
    NAME       shift, and go to state 6
    INTLIT     shift, and go to state 7
    STRINGLIT  shift, and go to state 8
    PLUS       shift, and go to state 10
    MINUS      shift, and go to state 11
    TILDE      shift, and go to state 12
    NOT        shift, and go to state 20

    $default  reduce using rule 162 (test_opt)

    expr        go to state 44
    xor_expr    go to state 45
    and_expr    go to state 46
    shift_expr  go to state 47
    arith_expr  go to state 48
    term        go to state 49
    factor      go to state 50
    pmt         go to state 51
    power       go to state 52
    test_opt    go to state 250
    test        go to state 237
    or_test     go to state 54
    and_test    go to state 55
    not_test    go to state 56
    comparison  go to state 57
    atom        go to state 58


State 245

  158 subscript: test_opt COLON test_opt sliceop_opt •

    $default  reduce using rule 158 (subscript)


State 246

  160 sliceop_opt: sliceop •

    $default  reduce using rule 160 (sliceop_opt)


State 247

  142 comma_arg_rep: comma_arg_rep COMMA • argument
  144 comma_dstar_test_opt: COMMA • DOUBLESTAR test

    FLOATLIT    shift, and go to state 4
    NAME        shift, and go to state 6
    INTLIT      shift, and go to state 7
    STRINGLIT   shift, and go to state 8
    PLUS        shift, and go to state 10
    MINUS       shift, and go to state 11
    TILDE       shift, and go to state 12
    DOUBLESTAR  shift, and go to state 251
    NOT         shift, and go to state 20

    expr        go to state 44
    xor_expr    go to state 45
    and_expr    go to state 46
    shift_expr  go to state 47
    arith_expr  go to state 48
    term        go to state 49
    factor      go to state 50
    pmt         go to state 51
    power       go to state 52
    argument    go to state 252
    test        go to state 219
    or_test     go to state 54
    and_test    go to state 55
    not_test    go to state 56
    comparison  go to state 57
    atom        go to state 58


State 248

  139 arg_ORS: STAR test comma_arg_rep comma_dstar_test_opt •

    $default  reduce using rule 139 (arg_ORS)


State 249

  149 comp_for: FOR exprlist IN • or_test comp_iter_opt

    FLOATLIT   shift, and go to state 4
    NAME       shift, and go to state 6
    INTLIT     shift, and go to state 7
    STRINGLIT  shift, and go to state 8
    PLUS       shift, and go to state 10
    MINUS      shift, and go to state 11
    TILDE      shift, and go to state 12
    NOT        shift, and go to state 20

    expr        go to state 44
    xor_expr    go to state 45
    and_expr    go to state 46
    shift_expr  go to state 47
    arith_expr  go to state 48
    term        go to state 49
    factor      go to state 50
    pmt         go to state 51
    power       go to state 52
    or_test     go to state 253
    and_test    go to state 55
    not_test    go to state 56
    comparison  go to state 57
    atom        go to state 58


State 250

  161 sliceop: COLON test_opt •

    $default  reduce using rule 161 (sliceop)


State 251

  144 comma_dstar_test_opt: COMMA DOUBLESTAR • test

    FLOATLIT   shift, and go to state 4
    NAME       shift, and go to state 6
    INTLIT     shift, and go to state 7
    STRINGLIT  shift, and go to state 8
    PLUS       shift, and go to state 10
    MINUS      shift, and go to state 11
    TILDE      shift, and go to state 12
    NOT        shift, and go to state 20

    expr        go to state 44
    xor_expr    go to state 45
    and_expr    go to state 46
    shift_expr  go to state 47
    arith_expr  go to state 48
    term        go to state 49
    factor      go to state 50
    pmt         go to state 51
    power       go to state 52
    test        go to state 254
    or_test     go to state 54
    and_test    go to state 55
    not_test    go to state 56
    comparison  go to state 57
    atom        go to state 58


State 252

  142 comma_arg_rep: comma_arg_rep COMMA argument •

    $default  reduce using rule 142 (comma_arg_rep)


State 253

  149 comp_for: FOR exprlist IN or_test • comp_iter_opt

    FOR  shift, and go to state 231

    $default  reduce using rule 150 (comp_iter_opt)

    comp_for       go to state 255
    comp_iter_opt  go to state 256
    comp_iter      go to state 257


State 254

  144 comma_dstar_test_opt: COMMA DOUBLESTAR test •

    $default  reduce using rule 144 (comma_dstar_test_opt)


State 255

  152 comp_iter: comp_for •

    $default  reduce using rule 152 (comp_iter)


State 256

  149 comp_for: FOR exprlist IN or_test comp_iter_opt •

    $default  reduce using rule 149 (comp_for)


State 257

  151 comp_iter_opt: comp_iter •

    $default  reduce using rule 151 (comp_iter_opt)
