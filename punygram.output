Terminals unused in grammar

    CLASS
    OP
    TYPE_IGNORE
    ERRORTOKEN
    COMMENT
    ENCODING


State 8 conflicts: 2 shift/reduce, 15 reduce/reduce
State 11 conflicts: 2 shift/reduce, 15 reduce/reduce
State 18 conflicts: 3 shift/reduce, 15 reduce/reduce
State 22 conflicts: 2 shift/reduce
State 54 conflicts: 1 shift/reduce
State 71 conflicts: 1 shift/reduce
State 105 conflicts: 1 shift/reduce
State 111 conflicts: 2 shift/reduce
State 177 conflicts: 14 shift/reduce, 15 reduce/reduce
State 178 conflicts: 1 shift/reduce
State 207 conflicts: 1 reduce/reduce
State 215 conflicts: 1 shift/reduce
State 216 conflicts: 2 shift/reduce, 15 reduce/reduce
State 222 conflicts: 3 shift/reduce, 15 reduce/reduce
State 238 conflicts: 15 reduce/reduce
State 242 conflicts: 1 shift/reduce
State 286 conflicts: 2 shift/reduce
State 337 conflicts: 2 shift/reduce, 15 reduce/reduce
State 413 conflicts: 1 shift/reduce, 1 reduce/reduce
State 429 conflicts: 1 shift/reduce, 1 reduce/reduce


Grammar

    0 $accept: file_input $end

    1 file_input: nl_or_stmt.rep ENDMARKER

    2 nl_or_stmt.rep: %empty
    3               | nl_or_stmt.rep NEWLINE
    4               | nl_or_stmt.rep stmt

    5 stmt: simple_stmt
    6     | compound_stmt

    7 simple_stmt: small_stmt semi_and_small.rep semi.opt nl.opt

    8 nl.opt: %empty
    9       | NEWLINE

   10 semi_and_small.rep: %empty
   11                   | semi_and_small.rep SEMI small_stmt

   12 semi.opt: %empty
   13         | SEMI

   14 small_stmt: del_stmt
   15           | pass_stmt
   16           | import_stmt
   17           | global_stmt
   18           | flow_stmt
   19           | nonlocal_stmt
   20           | expr_stmt
   21           | assert_stmt

   22 del_stmt: DEL exprlist

   23 pass_stmt: PASS

   24 flow_stmt: break_stmt
   25          | continue_stmt
   26          | return_stmt
   27          | raise_stmt
   28          | yield_stmt

   29 nonlocal_stmt: NONLOCAL NAME comma_name.rep

   30 assert_stmt: ASSERT test comma_test_opt

   31 comma_test_opt: %empty
   32               | COMMA test

   33 expr_stmt: testlist_star_expr assign_disjunct

   34 assign_disjunct: yield_test_type.opt
   35                | annassign
   36                | augassign yield_or_test

   37 yield_or_test: yield_expr
   38              | testlist

   39 yield_test_type.opt: %empty
   40                    | EQUAL yield_expr_or_testlist_star_expr_min_1 type_comment.opt

   41 yield_expr_or_testlist_star_expr_min_1: yield_or_testlist_star_expr
   42                                       | yield_expr_or_testlist_star_expr_min_1 yield_or_testlist_star_expr

   43 yield_or_testlist_star_expr: yield_expr
   44                            | testlist_star_expr

   45 annassign: COLON test equals_yield_expr_or_testlist_star_expr.opt

   46 equals_yield_expr_or_testlist_star_expr.opt: %empty
   47                                            | EQUAL yield_expr
   48                                            | EQUAL testlist_star_expr

   49 augassign: PLUSEQUAL
   50          | MINEQUAL
   51          | STAREQUAL
   52          | ATEQUAL
   53          | SLASHEQUAL
   54          | PERCENTEQUAL
   55          | AMPEREQUAL
   56          | VBAREQUAL
   57          | CIRCUMFLEXEQUAL
   58          | LEFTSHIFTEQUAL
   59          | RIGHTSHIFTEQUAL
   60          | DOUBLESTAREQUAL
   61          | DOUBLESLASHEQUAL

   62 comma_name.rep: %empty
   63               | comma_name.rep COMMA NAME

   64 break_stmt: BREAK

   65 continue_stmt: CONTINUE

   66 return_stmt: RETURN testlist_star_expr.opt

   67 testlist_star_expr.opt: %empty
   68                       | testlist_star_expr

   69 raise_stmt: RAISE test.opt_from_test.opt

   70 test.opt_from_test.opt: %empty
   71                       | test from_test.opt

   72 from_test.opt: %empty
   73              | FROM test

   74 yield_stmt: yield_expr

   75 import_stmt: import_name
   76            | import_from

   77 import_name: IMPORT dotted_as_names

   78 import_from: FROM import_dot_expansion IMPORT

   79 import_dot_expansion: dot_or_ellipse.rep dotted_name
   80                     | dot_or_ellipse_min_1

   81 dot_or_ellipse.rep: %empty
   82                   | dot_or_ellipse.rep DOT
   83                   | dot_or_ellipse.rep ELLIPSIS

   84 dot_or_ellipse_min_1: dot_or_ellipse
   85                     | dot_or_ellipse.rep dot_or_ellipse

   86 dot_or_ellipse: DOT
   87               | ELLIPSIS

   88 dotted_as_names: dotted_as_name comma_dotted_as_name.rep comma.opt

   89 comma_dotted_as_name.rep: %empty
   90                         | comma_dotted_as_name.rep COMMA dotted_as_name

   91 dotted_as_name: dotted_name as_name.opt

   92 dotted_name: NAME dot_name.rep

   93 dot_name.rep: %empty
   94             | dot_name.rep DOT NAME

   95 as_name.opt: %empty
   96            | AS NAME

   97 global_stmt: GLOBAL NAME comma_and_name.rep

   98 comma_and_name.rep: %empty
   99                   | comma_and_name.rep COMMA NAME

  100 exprlist: expr comma_and_expr_or_starexpr.rep comma.opt
  101         | star_expr comma_and_expr_or_starexpr.rep comma.opt

  102 comma_and_expr_or_starexpr.rep: %empty
  103                               | comma_and_expr_or_starexpr.rep COMMA expr
  104                               | comma_and_expr_or_starexpr.rep COMMA star_expr

  105 comma.opt: %empty
  106          | COMMA

  107 star_expr: STAR expr

  108 expr: xor_expr lor_and_xor_expr.opt

  109 lor_and_xor_expr.opt: %empty
  110                     | VBAR xor_expr

  111 xor_expr: and_expr caret_and_and_expr.rep

  112 caret_and_and_expr.rep: %empty
  113                       | caret_and_and_expr.rep CIRCUMFLEX and_expr

  114 and_expr: shift_expr amp_and_shift_expr.rep

  115 amp_and_shift_expr.rep: %empty
  116                       | amp_and_shift_expr.rep AMPER shift_expr

  117 shift_expr: arith_expr shift.rep

  118 shift.rep: %empty
  119          | shift.rep LEFTSHIFT arith_expr
  120          | shift.rep RIGHTSHIFT arith_expr

  121 arith_expr: term pm_term.rep

  122 pm_term.rep: %empty
  123            | pm_term.rep PLUS term
  124            | pm_term.rep MINUS term

  125 term: factor factor.rep

  126 factor.rep: %empty
  127           | factor.rep STAR factor
  128           | factor.rep AT factor
  129           | factor.rep SLASH factor
  130           | factor.rep PERCENT factor
  131           | factor.rep DOUBLESLASH factor

  132 factor: plus_minus_negate.rep power

  133 plus_minus_negate.rep: %empty
  134                      | plus_minus_negate.rep PLUS
  135                      | plus_minus_negate.rep MINUS
  136                      | plus_minus_negate.rep TILDE

  137 power: atom_expr exponentiation.opt

  138 exponentiation.opt: %empty
  139                   | DOUBLESTAR factor

  140 atom_expr: await.opt atom trailer.rep

  141 await.opt: %empty
  142          | AWAIT

  143 trailer.rep: %empty
  144            | trailer.rep trailer

  145 trailer: LPAR arglist.opt RPAR
  146        | LSQB subscriptlist RSQB
  147        | DOT NAME

  148 arglist.opt: %empty
  149            | arglist

  150 arglist: argument comma_and_arg.rep comma.opt

  151 subscriptlist: subscript comma_and_subscript.rep comma.opt

  152 subscript: test
  153          | test.opt COLON test.opt sliceop.opt

  154 test.opt: %empty
  155         | test

  156 sliceop.opt: %empty
  157            | sliceop

  158 sliceop: COLON test.opt

  159 comma_and_subscript.rep: %empty
  160                        | comma_and_subscript.rep COMMA subscript

  161 argument: test comp_for.opt
  162         | test COLONEQUAL test
  163         | test EQUAL test
  164         | DOUBLESTAR test
  165         | STAR test

  166 comp_for.opt: %empty
  167             | comp_for.opt comp_for

  168 comp_for: async.opt sync_comp_for

  169 async.opt: %empty
  170          | ASYNC

  171 sync_comp_for: FOR exprlist IN or_test comp_iter.opt

  172 comp_iter.opt: %empty
  173              | comp_iter

  174 comp_iter: comp_for
  175          | comp_if

  176 comp_if: IF test_nocond comp_iter.opt

  177 test_nocond: or_test
  178            | lambdef_nocond

  179 lambdef_nocond: LAMBDA varargslist.opt COLON test

  180 varargslist.opt: %empty
  181                | varargslist

  182 varargslist: ENDMARKER

  183 comma_and_arg.rep: %empty
  184                  | comma_and_arg.rep COMMA argument

  185 atom: LPAR yield_expr.opt RPAR
  186     | LPAR testlist_comp.opt RPAR
  187     | LSQB testlist_comp.opt RSQB
  188     | LBRACE dictorsetmaker.opt RBRACE
  189     | NAME
  190     | INTLIT
  191     | FLOATLIT
  192     | string_min_1
  193     | ELLIPSIS
  194     | NONE
  195     | PYTRUE
  196     | PYFALSE

  197 string_min_1: STRINGLIT
  198             | string_min_1 STRINGLIT

  199 yield_expr.opt: %empty
  200               | yield_expr

  201 testlist_comp.opt: %empty
  202                  | testlist_comp

  203 testlist_comp: namedexpr_test comp_for
  204              | star_expr comp_for
  205              | namedexpr_test comma_and_named_or_star.rep comma.opt
  206              | star_expr comma_and_named_or_star.rep comma.opt

  207 comma_and_named_or_star.rep: %empty
  208                            | comma_and_named_or_star.rep COMMA namedexpr_test
  209                            | comma_and_named_or_star.rep COMMA star_expr

  210 namedexpr_test: test colonequal_and_test.opt

  211 colonequal_and_test.opt: %empty
  212                        | COLONEQUAL test

  213 dictorsetmaker.opt: %empty
  214                   | dictorsetmaker

  215 dictorsetmaker: EMPTY

  216 yield_expr: YIELD yield_arg.opt

  217 yield_arg.opt: %empty
  218              | yield_arg

  219 yield_arg: FROM test
  220          | testlist_star_expr

  221 test: or_test cond.opt
  222     | lambdef

  223 or_test: and_test or_and_and_test.rep

  224 or_and_and_test.rep: %empty
  225                    | or_and_and_test.rep OR and_test

  226 and_test: not_test and_and_not_test.rep

  227 not_test: NOT not_test
  228         | comparison

  229 comparison: expr comp_op_and_expr.rep

  230 and_and_not_test.rep: %empty
  231                     | and_and_not_test.rep AND not_test

  232 testlist_star_expr: test comma_and_test_or_star_expr.rep comma.opt

  233 comp_op_and_expr.rep: %empty
  234                     | comp_op_and_expr.rep comp_op expr

  235 comma_and_test_or_star_expr.rep: %empty
  236                                | comma_and_test_or_star_expr.rep COMMA test
  237                                | comma_and_test_or_star_expr.rep COMMA star_expr

  238 comp_op: LESS
  239        | GREATER
  240        | EQEQUAL
  241        | GREATEREQUAL
  242        | LESSEQUAL
  243        | NOTEQUAL
  244        | IN
  245        | NOT IN
  246        | IS
  247        | IS NOT

  248 cond.opt: %empty
  249         | IF or_test ELSE test

  250 lambdef: LAMBDA varargslist.opt COLON test

  251 compound_stmt: if_stmt
  252              | while_stmt
  253              | for_stmt
  254              | try_stmt
  255              | with_stmt
  256              | funcdef

  257 if_stmt: IF namedexpr_test COLON suite elif_and_named_colon_suite.rep else_and_colon_suite.opt

  258 suite: simple_stmt
  259      | NEWLINE INDENT stmt stmt.rep DEDENT

  260 stmt.rep: %empty
  261         | stmt.rep stmt

  262 elif_and_named_colon_suite.rep: %empty
  263                               | elif_and_named_colon_suite.rep ELIF namedexpr_test COLON suite

  264 else_and_colon_suite.opt: %empty
  265                         | ELSE COLON suite

  266 while_stmt: WHILE namedexpr_test COLON suite else_and_suite.opt

  267 else_and_suite.opt: %empty
  268                   | ELSE COLON suite

  269 for_stmt: FOR exprlist IN testlist COLON type_comment.opt suite else_and_suite.opt

  270 testlist: test comma_and_test.rep comma.opt

  271 type_comment.opt: %empty
  272                 | TYPE_COMMENT

  273 comma_and_test.rep: %empty
  274                   | comma_and_test.rep COMMA test

  275 try_stmt: TRY COLON suite FINALLY COLON suite
  276         | TRY COLON suite except_colon_suite_min_1 else_colon_suite.opt finally_colon_suite.opt

  277 except_colon_suite_min_1: EXCEPT COLON suite
  278                         | except_colon_suite_min_1 EXCEPT COLON suite

  279 else_colon_suite.opt: %empty
  280                     | ELSE COLON suite

  281 finally_colon_suite.opt: %empty
  282                        | FINALLY COLON suite

  283 with_stmt: WITH with_item comma_with_item.rep COLON type_comment.opt suite

  284 with_item: test as_expr.opt

  285 as_expr.opt: %empty
  286            | AS expr

  287 comma_with_item.rep: %empty
  288                    | comma_with_item.rep COMMA with_item

  289 funcdef: PYDEF NAME parameters rarrow_test.opt COLON type_comment.opt func_body_suite

  290 parameters: LPAR typedargslist.opt RPAR

  291 typedargslist.opt: %empty
  292                  | typedargslist

  293 rarrow_test.opt: %empty
  294                | RARROW test

  295 typedargslist: EMPTY

  296 func_body_suite: simple_stmt

  297 $@1: %empty

  298 $@2: %empty

  299 $@3: %empty

  300 $@4: %empty

  301 func_body_suite: NEWLINE $@1 type_comment_nl.opt $@2 INDENT $@3 stmt stmt.rep $@4 DEDENT

  302 type_comment_nl.opt: %empty
  303                    | TYPE_COMMENT NEWLINE


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    FLOATLIT <treeptr> (258) 191
    ENDMARKER <treeptr> (259) 1 182
    NAME <treeptr> (260) 29 63 92 94 96 97 99 147 189 289
    INTLIT <treeptr> (261) 190
    STRINGLIT <treeptr> (262) 197 198
    NEWLINE <treeptr> (263) 3 9 259 301 303
    INDENT <treeptr> (264) 259 301
    DEDENT <treeptr> (265) 259 301
    LPAR <treeptr> (266) 145 185 186 290
    RPAR <treeptr> (267) 145 185 186 290
    LSQB <treeptr> (268) 146 187
    RSQB <treeptr> (269) 146 187
    COLON <treeptr> (270) 45 153 158 179 250 257 263 265 266 268 269 275 276 277 278 280 282 283 289
    COMMA <treeptr> (271) 32 63 90 99 103 104 106 160 184 208 209 236 237 274 288
    SEMI <treeptr> (272) 11 13
    PLUS <treeptr> (273) 123 134
    MINUS <treeptr> (274) 124 135
    STAR <treeptr> (275) 107 127 165
    SLASH <treeptr> (276) 129
    VBAR <treeptr> (277) 110
    AMPER <treeptr> (278) 116
    LESS <treeptr> (279) 238
    GREATER <treeptr> (280) 239
    EQUAL <treeptr> (281) 40 47 48 163
    DOT <treeptr> (282) 82 86 94 147
    PERCENT <treeptr> (283) 130
    LBRACE <treeptr> (284) 188
    RBRACE <treeptr> (285) 188
    EQEQUAL <treeptr> (286) 240
    NOTEQUAL <treeptr> (287) 243
    LESSEQUAL <treeptr> (288) 242
    GREATEREQUAL <treeptr> (289) 241
    TILDE <treeptr> (290) 136
    CIRCUMFLEX <treeptr> (291) 113
    LEFTSHIFT <treeptr> (292) 119
    RIGHTSHIFT <treeptr> (293) 120
    DOUBLESTAR <treeptr> (294) 139 164
    PLUSEQUAL <treeptr> (295) 49
    MINEQUAL <treeptr> (296) 50
    STAREQUAL <treeptr> (297) 51
    SLASHEQUAL <treeptr> (298) 53
    PERCENTEQUAL <treeptr> (299) 54
    AMPEREQUAL <treeptr> (300) 55
    VBAREQUAL <treeptr> (301) 56
    CIRCUMFLEXEQUAL <treeptr> (302) 57
    LEFTSHIFTEQUAL <treeptr> (303) 58
    RIGHTSHIFTEQUAL <treeptr> (304) 59
    DOUBLESTAREQUAL <treeptr> (305) 60
    DOUBLESLASH <treeptr> (306) 131
    DOUBLESLASHEQUAL <treeptr> (307) 61
    AT <treeptr> (308) 128
    ATEQUAL <treeptr> (309) 52
    RARROW <treeptr> (310) 294
    ELLIPSIS <treeptr> (311) 83 87 193
    COLONEQUAL <treeptr> (312) 162 212
    PYFALSE <treeptr> (313) 196
    PYDEF <treeptr> (314) 289
    IF <treeptr> (315) 176 249 257
    RAISE <treeptr> (316) 69
    NONE <treeptr> (317) 194
    DEL <treeptr> (318) 22
    IMPORT <treeptr> (319) 77 78
    RETURN <treeptr> (320) 66
    PYTRUE <treeptr> (321) 195
    ELIF <treeptr> (322) 263
    IN <treeptr> (323) 171 244 245 269
    TRY <treeptr> (324) 275 276
    AND <treeptr> (325) 231
    ELSE <treeptr> (326) 249 265 268 280
    IS <treeptr> (327) 246 247
    WHILE <treeptr> (328) 266
    AS <treeptr> (329) 96 286
    EXCEPT <treeptr> (330) 277 278
    LAMBDA <treeptr> (331) 179 250
    WITH <treeptr> (332) 283
    ASSERT <treeptr> (333) 30
    FINALLY <treeptr> (334) 275 282
    NONLOCAL <treeptr> (335) 29
    YIELD <treeptr> (336) 216
    BREAK <treeptr> (337) 64
    FOR <treeptr> (338) 171 269
    NOT <treeptr> (339) 227 245 247
    CLASS <treeptr> (340)
    FROM <treeptr> (341) 73 78 219
    OR <treeptr> (342) 225
    CONTINUE <treeptr> (343) 65
    GLOBAL <treeptr> (344) 97
    PASS <treeptr> (345) 23
    OP <treeptr> (346)
    AWAIT <treeptr> (347) 142
    ASYNC <treeptr> (348) 170
    TYPE_IGNORE <treeptr> (349)
    TYPE_COMMENT <treeptr> (350) 272 303
    ERRORTOKEN <treeptr> (351)
    COMMENT <treeptr> (352)
    ENCODING <treeptr> (353)
    EMPTY <treeptr> (354) 215 295


Nonterminals, with rules where they appear

    $accept (100)
        on left: 0
    file_input (101)
        on left: 1
        on right: 0
    nl_or_stmt.rep (102)
        on left: 2 3 4
        on right: 1 3 4
    stmt (103)
        on left: 5 6
        on right: 4 259 261 301
    simple_stmt (104)
        on left: 7
        on right: 5 258 296
    nl.opt (105)
        on left: 8 9
        on right: 7
    semi_and_small.rep (106)
        on left: 10 11
        on right: 7 11
    semi.opt (107)
        on left: 12 13
        on right: 7
    small_stmt (108)
        on left: 14 15 16 17 18 19 20 21
        on right: 7 11
    del_stmt (109)
        on left: 22
        on right: 14
    pass_stmt (110)
        on left: 23
        on right: 15
    flow_stmt (111)
        on left: 24 25 26 27 28
        on right: 18
    nonlocal_stmt (112)
        on left: 29
        on right: 19
    assert_stmt (113)
        on left: 30
        on right: 21
    comma_test_opt (114)
        on left: 31 32
        on right: 30
    expr_stmt (115)
        on left: 33
        on right: 20
    assign_disjunct (116)
        on left: 34 35 36
        on right: 33
    yield_or_test (117)
        on left: 37 38
        on right: 36
    yield_test_type.opt (118)
        on left: 39 40
        on right: 34
    yield_expr_or_testlist_star_expr_min_1 (119)
        on left: 41 42
        on right: 40 42
    yield_or_testlist_star_expr (120)
        on left: 43 44
        on right: 41 42
    annassign (121)
        on left: 45
        on right: 35
    equals_yield_expr_or_testlist_star_expr.opt (122)
        on left: 46 47 48
        on right: 45
    augassign (123)
        on left: 49 50 51 52 53 54 55 56 57 58 59 60 61
        on right: 36
    comma_name.rep (124)
        on left: 62 63
        on right: 29 63
    break_stmt (125)
        on left: 64
        on right: 24
    continue_stmt (126)
        on left: 65
        on right: 25
    return_stmt (127)
        on left: 66
        on right: 26
    testlist_star_expr.opt (128)
        on left: 67 68
        on right: 66
    raise_stmt (129)
        on left: 69
        on right: 27
    test.opt_from_test.opt (130)
        on left: 70 71
        on right: 69
    from_test.opt (131)
        on left: 72 73
        on right: 71
    yield_stmt (132)
        on left: 74
        on right: 28
    import_stmt (133)
        on left: 75 76
        on right: 16
    import_name (134)
        on left: 77
        on right: 75
    import_from (135)
        on left: 78
        on right: 76
    import_dot_expansion (136)
        on left: 79 80
        on right: 78
    dot_or_ellipse.rep (137)
        on left: 81 82 83
        on right: 79 82 83 85
    dot_or_ellipse_min_1 (138)
        on left: 84 85
        on right: 80
    dot_or_ellipse (139)
        on left: 86 87
        on right: 84 85
    dotted_as_names (140)
        on left: 88
        on right: 77
    comma_dotted_as_name.rep (141)
        on left: 89 90
        on right: 88 90
    dotted_as_name (142)
        on left: 91
        on right: 88 90
    dotted_name (143)
        on left: 92
        on right: 79 91
    dot_name.rep (144)
        on left: 93 94
        on right: 92 94
    as_name.opt (145)
        on left: 95 96
        on right: 91
    global_stmt (146)
        on left: 97
        on right: 17
    comma_and_name.rep (147)
        on left: 98 99
        on right: 97 99
    exprlist (148)
        on left: 100 101
        on right: 22 171 269
    comma_and_expr_or_starexpr.rep (149)
        on left: 102 103 104
        on right: 100 101 103 104
    comma.opt (150)
        on left: 105 106
        on right: 88 100 101 150 151 205 206 232 270
    star_expr (151)
        on left: 107
        on right: 101 104 204 206 209 237
    expr (152)
        on left: 108
        on right: 100 103 107 229 234 286
    lor_and_xor_expr.opt (153)
        on left: 109 110
        on right: 108
    xor_expr (154)
        on left: 111
        on right: 108 110
    caret_and_and_expr.rep (155)
        on left: 112 113
        on right: 111 113
    and_expr (156)
        on left: 114
        on right: 111 113
    amp_and_shift_expr.rep (157)
        on left: 115 116
        on right: 114 116
    shift_expr (158)
        on left: 117
        on right: 114 116
    shift.rep (159)
        on left: 118 119 120
        on right: 117 119 120
    arith_expr (160)
        on left: 121
        on right: 117 119 120
    pm_term.rep (161)
        on left: 122 123 124
        on right: 121 123 124
    term (162)
        on left: 125
        on right: 121 123 124
    factor.rep (163)
        on left: 126 127 128 129 130 131
        on right: 125 127 128 129 130 131
    factor (164)
        on left: 132
        on right: 125 127 128 129 130 131 139
    plus_minus_negate.rep (165)
        on left: 133 134 135 136
        on right: 132 134 135 136
    power (166)
        on left: 137
        on right: 132
    exponentiation.opt (167)
        on left: 138 139
        on right: 137
    atom_expr (168)
        on left: 140
        on right: 137
    await.opt (169)
        on left: 141 142
        on right: 140
    trailer.rep (170)
        on left: 143 144
        on right: 140 144
    trailer (171)
        on left: 145 146 147
        on right: 144
    arglist.opt (172)
        on left: 148 149
        on right: 145
    arglist (173)
        on left: 150
        on right: 149
    subscriptlist (174)
        on left: 151
        on right: 146
    subscript (175)
        on left: 152 153
        on right: 151 160
    test.opt (176)
        on left: 154 155
        on right: 153 158
    sliceop.opt (177)
        on left: 156 157
        on right: 153
    sliceop (178)
        on left: 158
        on right: 157
    comma_and_subscript.rep (179)
        on left: 159 160
        on right: 151 160
    argument (180)
        on left: 161 162 163 164 165
        on right: 150 184
    comp_for.opt (181)
        on left: 166 167
        on right: 161 167
    comp_for (182)
        on left: 168
        on right: 167 174 203 204
    async.opt (183)
        on left: 169 170
        on right: 168
    sync_comp_for (184)
        on left: 171
        on right: 168
    comp_iter.opt (185)
        on left: 172 173
        on right: 171 176
    comp_iter (186)
        on left: 174 175
        on right: 173
    comp_if (187)
        on left: 176
        on right: 175
    test_nocond (188)
        on left: 177 178
        on right: 176
    lambdef_nocond (189)
        on left: 179
        on right: 178
    varargslist.opt (190)
        on left: 180 181
        on right: 179 250
    varargslist (191)
        on left: 182
        on right: 181
    comma_and_arg.rep (192)
        on left: 183 184
        on right: 150 184
    atom (193)
        on left: 185 186 187 188 189 190 191 192 193 194 195 196
        on right: 140
    string_min_1 (194)
        on left: 197 198
        on right: 192 198
    yield_expr.opt (195)
        on left: 199 200
        on right: 185
    testlist_comp.opt (196)
        on left: 201 202
        on right: 186 187
    testlist_comp (197)
        on left: 203 204 205 206
        on right: 202
    comma_and_named_or_star.rep (198)
        on left: 207 208 209
        on right: 205 206 208 209
    namedexpr_test (199)
        on left: 210
        on right: 203 205 208 257 263 266
    colonequal_and_test.opt (200)
        on left: 211 212
        on right: 210
    dictorsetmaker.opt (201)
        on left: 213 214
        on right: 188
    dictorsetmaker (202)
        on left: 215
        on right: 214
    yield_expr (203)
        on left: 216
        on right: 37 43 47 74 200
    yield_arg.opt (204)
        on left: 217 218
        on right: 216
    yield_arg (205)
        on left: 219 220
        on right: 218
    test (206)
        on left: 221 222
        on right: 30 32 45 71 73 152 155 161 162 163 164 165 179 210 212 219 232 236 249 250 270 274 284 294
    or_test (207)
        on left: 223
        on right: 171 177 221 249
    or_and_and_test.rep (208)
        on left: 224 225
        on right: 223 225
    and_test (209)
        on left: 226
        on right: 223 225
    not_test (210)
        on left: 227 228
        on right: 226 227 231
    comparison (211)
        on left: 229
        on right: 228
    and_and_not_test.rep (212)
        on left: 230 231
        on right: 226 231
    testlist_star_expr (213)
        on left: 232
        on right: 33 44 48 68 220
    comp_op_and_expr.rep (214)
        on left: 233 234
        on right: 229 234
    comma_and_test_or_star_expr.rep (215)
        on left: 235 236 237
        on right: 232 236 237
    comp_op (216)
        on left: 238 239 240 241 242 243 244 245 246 247
        on right: 234
    cond.opt (217)
        on left: 248 249
        on right: 221
    lambdef (218)
        on left: 250
        on right: 222
    compound_stmt (219)
        on left: 251 252 253 254 255 256
        on right: 6
    if_stmt (220)
        on left: 257
        on right: 251
    suite (221)
        on left: 258 259
        on right: 257 263 265 266 268 269 275 276 277 278 280 282 283
    stmt.rep (222)
        on left: 260 261
        on right: 259 261 301
    elif_and_named_colon_suite.rep (223)
        on left: 262 263
        on right: 257 263
    else_and_colon_suite.opt (224)
        on left: 264 265
        on right: 257
    while_stmt (225)
        on left: 266
        on right: 252
    else_and_suite.opt (226)
        on left: 267 268
        on right: 266 269
    for_stmt (227)
        on left: 269
        on right: 253
    testlist (228)
        on left: 270
        on right: 38 269
    type_comment.opt (229)
        on left: 271 272
        on right: 40 269 283 289
    comma_and_test.rep (230)
        on left: 273 274
        on right: 270 274
    try_stmt (231)
        on left: 275 276
        on right: 254
    except_colon_suite_min_1 (232)
        on left: 277 278
        on right: 276 278
    else_colon_suite.opt (233)
        on left: 279 280
        on right: 276
    finally_colon_suite.opt (234)
        on left: 281 282
        on right: 276
    with_stmt (235)
        on left: 283
        on right: 255
    with_item (236)
        on left: 284
        on right: 283 288
    as_expr.opt (237)
        on left: 285 286
        on right: 284
    comma_with_item.rep (238)
        on left: 287 288
        on right: 283 288
    funcdef (239)
        on left: 289
        on right: 256
    parameters (240)
        on left: 290
        on right: 289
    typedargslist.opt (241)
        on left: 291 292
        on right: 290
    rarrow_test.opt (242)
        on left: 293 294
        on right: 289
    typedargslist (243)
        on left: 295
        on right: 292
    func_body_suite (244)
        on left: 296 301
        on right: 289
    $@1 (245)
        on left: 297
        on right: 301
    $@2 (246)
        on left: 298
        on right: 301
    $@3 (247)
        on left: 299
        on right: 301
    $@4 (248)
        on left: 300
        on right: 301
    type_comment_nl.opt (249)
        on left: 302 303
        on right: 301


State 0

    0 $accept: . file_input $end

    $default  reduce using rule 2 (nl_or_stmt.rep)

    file_input      go to state 1
    nl_or_stmt.rep  go to state 2


State 1

    0 $accept: file_input . $end

    $end  shift, and go to state 3


State 2

    1 file_input: nl_or_stmt.rep . ENDMARKER
    3 nl_or_stmt.rep: nl_or_stmt.rep . NEWLINE
    4               | nl_or_stmt.rep . stmt

    ENDMARKER  shift, and go to state 4
    NEWLINE    shift, and go to state 5
    PYDEF      shift, and go to state 6
    IF         shift, and go to state 7
    RAISE      shift, and go to state 8
    DEL        shift, and go to state 9
    IMPORT     shift, and go to state 10
    RETURN     shift, and go to state 11
    TRY        shift, and go to state 12
    WHILE      shift, and go to state 13
    LAMBDA     shift, and go to state 14
    WITH       shift, and go to state 15
    ASSERT     shift, and go to state 16
    NONLOCAL   shift, and go to state 17
    YIELD      shift, and go to state 18
    BREAK      shift, and go to state 19
    FOR        shift, and go to state 20
    NOT        shift, and go to state 21
    FROM       shift, and go to state 22
    CONTINUE   shift, and go to state 23
    GLOBAL     shift, and go to state 24
    PASS       shift, and go to state 25

    $default  reduce using rule 133 (plus_minus_negate.rep)

    stmt                   go to state 26
    simple_stmt            go to state 27
    small_stmt             go to state 28
    del_stmt               go to state 29
    pass_stmt              go to state 30
    flow_stmt              go to state 31
    nonlocal_stmt          go to state 32
    assert_stmt            go to state 33
    expr_stmt              go to state 34
    break_stmt             go to state 35
    continue_stmt          go to state 36
    return_stmt            go to state 37
    raise_stmt             go to state 38
    yield_stmt             go to state 39
    import_stmt            go to state 40
    import_name            go to state 41
    import_from            go to state 42
    global_stmt            go to state 43
    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    yield_expr             go to state 52
    test                   go to state 53
    or_test                go to state 54
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57
    testlist_star_expr     go to state 58
    lambdef                go to state 59
    compound_stmt          go to state 60
    if_stmt                go to state 61
    while_stmt             go to state 62
    for_stmt               go to state 63
    try_stmt               go to state 64
    with_stmt              go to state 65
    funcdef                go to state 66


State 3

    0 $accept: file_input $end .

    $default  accept


State 4

    1 file_input: nl_or_stmt.rep ENDMARKER .

    $default  reduce using rule 1 (file_input)


State 5

    3 nl_or_stmt.rep: nl_or_stmt.rep NEWLINE .

    $default  reduce using rule 3 (nl_or_stmt.rep)


State 6

  289 funcdef: PYDEF . NAME parameters rarrow_test.opt COLON type_comment.opt func_body_suite

    NAME  shift, and go to state 67


State 7

  257 if_stmt: IF . namedexpr_test COLON suite elif_and_named_colon_suite.rep else_and_colon_suite.opt

    LAMBDA  shift, and go to state 14
    NOT     shift, and go to state 21

    $default  reduce using rule 133 (plus_minus_negate.rep)

    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    namedexpr_test         go to state 68
    test                   go to state 69
    or_test                go to state 54
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57
    lambdef                go to state 59


State 8

   69 raise_stmt: RAISE . test.opt_from_test.opt

    LAMBDA  shift, and go to state 14
    NOT     shift, and go to state 21

    FLOATLIT   reduce using rule 70 (test.opt_from_test.opt)
    FLOATLIT   [reduce using rule 133 (plus_minus_negate.rep)]
    NAME       reduce using rule 70 (test.opt_from_test.opt)
    NAME       [reduce using rule 133 (plus_minus_negate.rep)]
    INTLIT     reduce using rule 70 (test.opt_from_test.opt)
    INTLIT     [reduce using rule 133 (plus_minus_negate.rep)]
    STRINGLIT  reduce using rule 70 (test.opt_from_test.opt)
    STRINGLIT  [reduce using rule 133 (plus_minus_negate.rep)]
    LPAR       reduce using rule 70 (test.opt_from_test.opt)
    LPAR       [reduce using rule 133 (plus_minus_negate.rep)]
    LSQB       reduce using rule 70 (test.opt_from_test.opt)
    LSQB       [reduce using rule 133 (plus_minus_negate.rep)]
    PLUS       reduce using rule 70 (test.opt_from_test.opt)
    PLUS       [reduce using rule 133 (plus_minus_negate.rep)]
    MINUS      reduce using rule 70 (test.opt_from_test.opt)
    MINUS      [reduce using rule 133 (plus_minus_negate.rep)]
    LBRACE     reduce using rule 70 (test.opt_from_test.opt)
    LBRACE     [reduce using rule 133 (plus_minus_negate.rep)]
    TILDE      reduce using rule 70 (test.opt_from_test.opt)
    TILDE      [reduce using rule 133 (plus_minus_negate.rep)]
    ELLIPSIS   reduce using rule 70 (test.opt_from_test.opt)
    ELLIPSIS   [reduce using rule 133 (plus_minus_negate.rep)]
    PYFALSE    reduce using rule 70 (test.opt_from_test.opt)
    PYFALSE    [reduce using rule 133 (plus_minus_negate.rep)]
    NONE       reduce using rule 70 (test.opt_from_test.opt)
    NONE       [reduce using rule 133 (plus_minus_negate.rep)]
    PYTRUE     reduce using rule 70 (test.opt_from_test.opt)
    PYTRUE     [reduce using rule 133 (plus_minus_negate.rep)]
    LAMBDA     [reduce using rule 70 (test.opt_from_test.opt)]
    NOT        [reduce using rule 70 (test.opt_from_test.opt)]
    AWAIT      reduce using rule 70 (test.opt_from_test.opt)
    AWAIT      [reduce using rule 133 (plus_minus_negate.rep)]
    $default   reduce using rule 70 (test.opt_from_test.opt)

    test.opt_from_test.opt  go to state 70
    expr                    go to state 44
    xor_expr                go to state 45
    and_expr                go to state 46
    shift_expr              go to state 47
    arith_expr              go to state 48
    term                    go to state 49
    factor                  go to state 50
    plus_minus_negate.rep   go to state 51
    test                    go to state 71
    or_test                 go to state 54
    and_test                go to state 55
    not_test                go to state 56
    comparison              go to state 57
    lambdef                 go to state 59


State 9

   22 del_stmt: DEL . exprlist

    STAR  shift, and go to state 72

    $default  reduce using rule 133 (plus_minus_negate.rep)

    exprlist               go to state 73
    star_expr              go to state 74
    expr                   go to state 75
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51


State 10

   77 import_name: IMPORT . dotted_as_names

    NAME  shift, and go to state 76

    dotted_as_names  go to state 77
    dotted_as_name   go to state 78
    dotted_name      go to state 79


State 11

   66 return_stmt: RETURN . testlist_star_expr.opt

    LAMBDA  shift, and go to state 14
    NOT     shift, and go to state 21

    FLOATLIT   reduce using rule 67 (testlist_star_expr.opt)
    FLOATLIT   [reduce using rule 133 (plus_minus_negate.rep)]
    NAME       reduce using rule 67 (testlist_star_expr.opt)
    NAME       [reduce using rule 133 (plus_minus_negate.rep)]
    INTLIT     reduce using rule 67 (testlist_star_expr.opt)
    INTLIT     [reduce using rule 133 (plus_minus_negate.rep)]
    STRINGLIT  reduce using rule 67 (testlist_star_expr.opt)
    STRINGLIT  [reduce using rule 133 (plus_minus_negate.rep)]
    LPAR       reduce using rule 67 (testlist_star_expr.opt)
    LPAR       [reduce using rule 133 (plus_minus_negate.rep)]
    LSQB       reduce using rule 67 (testlist_star_expr.opt)
    LSQB       [reduce using rule 133 (plus_minus_negate.rep)]
    PLUS       reduce using rule 67 (testlist_star_expr.opt)
    PLUS       [reduce using rule 133 (plus_minus_negate.rep)]
    MINUS      reduce using rule 67 (testlist_star_expr.opt)
    MINUS      [reduce using rule 133 (plus_minus_negate.rep)]
    LBRACE     reduce using rule 67 (testlist_star_expr.opt)
    LBRACE     [reduce using rule 133 (plus_minus_negate.rep)]
    TILDE      reduce using rule 67 (testlist_star_expr.opt)
    TILDE      [reduce using rule 133 (plus_minus_negate.rep)]
    ELLIPSIS   reduce using rule 67 (testlist_star_expr.opt)
    ELLIPSIS   [reduce using rule 133 (plus_minus_negate.rep)]
    PYFALSE    reduce using rule 67 (testlist_star_expr.opt)
    PYFALSE    [reduce using rule 133 (plus_minus_negate.rep)]
    NONE       reduce using rule 67 (testlist_star_expr.opt)
    NONE       [reduce using rule 133 (plus_minus_negate.rep)]
    PYTRUE     reduce using rule 67 (testlist_star_expr.opt)
    PYTRUE     [reduce using rule 133 (plus_minus_negate.rep)]
    LAMBDA     [reduce using rule 67 (testlist_star_expr.opt)]
    NOT        [reduce using rule 67 (testlist_star_expr.opt)]
    AWAIT      reduce using rule 67 (testlist_star_expr.opt)
    AWAIT      [reduce using rule 133 (plus_minus_negate.rep)]
    $default   reduce using rule 67 (testlist_star_expr.opt)

    testlist_star_expr.opt  go to state 80
    expr                    go to state 44
    xor_expr                go to state 45
    and_expr                go to state 46
    shift_expr              go to state 47
    arith_expr              go to state 48
    term                    go to state 49
    factor                  go to state 50
    plus_minus_negate.rep   go to state 51
    test                    go to state 53
    or_test                 go to state 54
    and_test                go to state 55
    not_test                go to state 56
    comparison              go to state 57
    testlist_star_expr      go to state 81
    lambdef                 go to state 59


State 12

  275 try_stmt: TRY . COLON suite FINALLY COLON suite
  276         | TRY . COLON suite except_colon_suite_min_1 else_colon_suite.opt finally_colon_suite.opt

    COLON  shift, and go to state 82


State 13

  266 while_stmt: WHILE . namedexpr_test COLON suite else_and_suite.opt

    LAMBDA  shift, and go to state 14
    NOT     shift, and go to state 21

    $default  reduce using rule 133 (plus_minus_negate.rep)

    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    namedexpr_test         go to state 83
    test                   go to state 69
    or_test                go to state 54
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57
    lambdef                go to state 59


State 14

  250 lambdef: LAMBDA . varargslist.opt COLON test

    ENDMARKER  shift, and go to state 84

    $default  reduce using rule 180 (varargslist.opt)

    varargslist.opt  go to state 85
    varargslist      go to state 86


State 15

  283 with_stmt: WITH . with_item comma_with_item.rep COLON type_comment.opt suite

    LAMBDA  shift, and go to state 14
    NOT     shift, and go to state 21

    $default  reduce using rule 133 (plus_minus_negate.rep)

    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    test                   go to state 87
    or_test                go to state 54
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57
    lambdef                go to state 59
    with_item              go to state 88


State 16

   30 assert_stmt: ASSERT . test comma_test_opt

    LAMBDA  shift, and go to state 14
    NOT     shift, and go to state 21

    $default  reduce using rule 133 (plus_minus_negate.rep)

    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    test                   go to state 89
    or_test                go to state 54
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57
    lambdef                go to state 59


State 17

   29 nonlocal_stmt: NONLOCAL . NAME comma_name.rep

    NAME  shift, and go to state 90


State 18

  216 yield_expr: YIELD . yield_arg.opt

    LAMBDA  shift, and go to state 14
    NOT     shift, and go to state 21
    FROM    shift, and go to state 91

    FLOATLIT   reduce using rule 133 (plus_minus_negate.rep)
    FLOATLIT   [reduce using rule 217 (yield_arg.opt)]
    NAME       reduce using rule 133 (plus_minus_negate.rep)
    NAME       [reduce using rule 217 (yield_arg.opt)]
    INTLIT     reduce using rule 133 (plus_minus_negate.rep)
    INTLIT     [reduce using rule 217 (yield_arg.opt)]
    STRINGLIT  reduce using rule 133 (plus_minus_negate.rep)
    STRINGLIT  [reduce using rule 217 (yield_arg.opt)]
    LPAR       reduce using rule 133 (plus_minus_negate.rep)
    LPAR       [reduce using rule 217 (yield_arg.opt)]
    LSQB       reduce using rule 133 (plus_minus_negate.rep)
    LSQB       [reduce using rule 217 (yield_arg.opt)]
    PLUS       reduce using rule 133 (plus_minus_negate.rep)
    PLUS       [reduce using rule 217 (yield_arg.opt)]
    MINUS      reduce using rule 133 (plus_minus_negate.rep)
    MINUS      [reduce using rule 217 (yield_arg.opt)]
    LBRACE     reduce using rule 133 (plus_minus_negate.rep)
    LBRACE     [reduce using rule 217 (yield_arg.opt)]
    TILDE      reduce using rule 133 (plus_minus_negate.rep)
    TILDE      [reduce using rule 217 (yield_arg.opt)]
    ELLIPSIS   reduce using rule 133 (plus_minus_negate.rep)
    ELLIPSIS   [reduce using rule 217 (yield_arg.opt)]
    PYFALSE    reduce using rule 133 (plus_minus_negate.rep)
    PYFALSE    [reduce using rule 217 (yield_arg.opt)]
    NONE       reduce using rule 133 (plus_minus_negate.rep)
    NONE       [reduce using rule 217 (yield_arg.opt)]
    PYTRUE     reduce using rule 133 (plus_minus_negate.rep)
    PYTRUE     [reduce using rule 217 (yield_arg.opt)]
    LAMBDA     [reduce using rule 217 (yield_arg.opt)]
    NOT        [reduce using rule 217 (yield_arg.opt)]
    FROM       [reduce using rule 217 (yield_arg.opt)]
    AWAIT      reduce using rule 133 (plus_minus_negate.rep)
    AWAIT      [reduce using rule 217 (yield_arg.opt)]
    $default   reduce using rule 217 (yield_arg.opt)

    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    yield_arg.opt          go to state 92
    yield_arg              go to state 93
    test                   go to state 53
    or_test                go to state 54
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57
    testlist_star_expr     go to state 94
    lambdef                go to state 59


State 19

   64 break_stmt: BREAK .

    $default  reduce using rule 64 (break_stmt)


State 20

  269 for_stmt: FOR . exprlist IN testlist COLON type_comment.opt suite else_and_suite.opt

    STAR  shift, and go to state 72

    $default  reduce using rule 133 (plus_minus_negate.rep)

    exprlist               go to state 95
    star_expr              go to state 74
    expr                   go to state 75
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51


State 21

  227 not_test: NOT . not_test

    NOT  shift, and go to state 21

    $default  reduce using rule 133 (plus_minus_negate.rep)

    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    not_test               go to state 96
    comparison             go to state 57


State 22

   78 import_from: FROM . import_dot_expansion IMPORT

    DOT       shift, and go to state 97
    ELLIPSIS  shift, and go to state 98

    DOT       [reduce using rule 81 (dot_or_ellipse.rep)]
    ELLIPSIS  [reduce using rule 81 (dot_or_ellipse.rep)]
    $default  reduce using rule 81 (dot_or_ellipse.rep)

    import_dot_expansion  go to state 99
    dot_or_ellipse.rep    go to state 100
    dot_or_ellipse_min_1  go to state 101
    dot_or_ellipse        go to state 102


State 23

   65 continue_stmt: CONTINUE .

    $default  reduce using rule 65 (continue_stmt)


State 24

   97 global_stmt: GLOBAL . NAME comma_and_name.rep

    NAME  shift, and go to state 103


State 25

   23 pass_stmt: PASS .

    $default  reduce using rule 23 (pass_stmt)


State 26

    4 nl_or_stmt.rep: nl_or_stmt.rep stmt .

    $default  reduce using rule 4 (nl_or_stmt.rep)


State 27

    5 stmt: simple_stmt .

    $default  reduce using rule 5 (stmt)


State 28

    7 simple_stmt: small_stmt . semi_and_small.rep semi.opt nl.opt

    $default  reduce using rule 10 (semi_and_small.rep)

    semi_and_small.rep  go to state 104


State 29

   14 small_stmt: del_stmt .

    $default  reduce using rule 14 (small_stmt)


State 30

   15 small_stmt: pass_stmt .

    $default  reduce using rule 15 (small_stmt)


State 31

   18 small_stmt: flow_stmt .

    $default  reduce using rule 18 (small_stmt)


State 32

   19 small_stmt: nonlocal_stmt .

    $default  reduce using rule 19 (small_stmt)


State 33

   21 small_stmt: assert_stmt .

    $default  reduce using rule 21 (small_stmt)


State 34

   20 small_stmt: expr_stmt .

    $default  reduce using rule 20 (small_stmt)


State 35

   24 flow_stmt: break_stmt .

    $default  reduce using rule 24 (flow_stmt)


State 36

   25 flow_stmt: continue_stmt .

    $default  reduce using rule 25 (flow_stmt)


State 37

   26 flow_stmt: return_stmt .

    $default  reduce using rule 26 (flow_stmt)


State 38

   27 flow_stmt: raise_stmt .

    $default  reduce using rule 27 (flow_stmt)


State 39

   28 flow_stmt: yield_stmt .

    $default  reduce using rule 28 (flow_stmt)


State 40

   16 small_stmt: import_stmt .

    $default  reduce using rule 16 (small_stmt)


State 41

   75 import_stmt: import_name .

    $default  reduce using rule 75 (import_stmt)


State 42

   76 import_stmt: import_from .

    $default  reduce using rule 76 (import_stmt)


State 43

   17 small_stmt: global_stmt .

    $default  reduce using rule 17 (small_stmt)


State 44

  229 comparison: expr . comp_op_and_expr.rep

    $default  reduce using rule 233 (comp_op_and_expr.rep)

    comp_op_and_expr.rep  go to state 105


State 45

  108 expr: xor_expr . lor_and_xor_expr.opt

    VBAR  shift, and go to state 106

    $default  reduce using rule 109 (lor_and_xor_expr.opt)

    lor_and_xor_expr.opt  go to state 107


State 46

  111 xor_expr: and_expr . caret_and_and_expr.rep

    $default  reduce using rule 112 (caret_and_and_expr.rep)

    caret_and_and_expr.rep  go to state 108


State 47

  114 and_expr: shift_expr . amp_and_shift_expr.rep

    $default  reduce using rule 115 (amp_and_shift_expr.rep)

    amp_and_shift_expr.rep  go to state 109


State 48

  117 shift_expr: arith_expr . shift.rep

    $default  reduce using rule 118 (shift.rep)

    shift.rep  go to state 110


State 49

  121 arith_expr: term . pm_term.rep

    $default  reduce using rule 122 (pm_term.rep)

    pm_term.rep  go to state 111


State 50

  125 term: factor . factor.rep

    $default  reduce using rule 126 (factor.rep)

    factor.rep  go to state 112


State 51

  132 factor: plus_minus_negate.rep . power
  134 plus_minus_negate.rep: plus_minus_negate.rep . PLUS
  135                      | plus_minus_negate.rep . MINUS
  136                      | plus_minus_negate.rep . TILDE

    PLUS   shift, and go to state 113
    MINUS  shift, and go to state 114
    TILDE  shift, and go to state 115
    AWAIT  shift, and go to state 116

    $default  reduce using rule 141 (await.opt)

    power      go to state 117
    atom_expr  go to state 118
    await.opt  go to state 119


State 52

   74 yield_stmt: yield_expr .

    $default  reduce using rule 74 (yield_stmt)


State 53

  232 testlist_star_expr: test . comma_and_test_or_star_expr.rep comma.opt

    $default  reduce using rule 235 (comma_and_test_or_star_expr.rep)

    comma_and_test_or_star_expr.rep  go to state 120


State 54

  221 test: or_test . cond.opt

    IF  shift, and go to state 121

    IF        [reduce using rule 248 (cond.opt)]
    $default  reduce using rule 248 (cond.opt)

    cond.opt  go to state 122


State 55

  223 or_test: and_test . or_and_and_test.rep

    $default  reduce using rule 224 (or_and_and_test.rep)

    or_and_and_test.rep  go to state 123


State 56

  226 and_test: not_test . and_and_not_test.rep

    $default  reduce using rule 230 (and_and_not_test.rep)

    and_and_not_test.rep  go to state 124


State 57

  228 not_test: comparison .

    $default  reduce using rule 228 (not_test)


State 58

   33 expr_stmt: testlist_star_expr . assign_disjunct

    COLON             shift, and go to state 125
    EQUAL             shift, and go to state 126
    PLUSEQUAL         shift, and go to state 127
    MINEQUAL          shift, and go to state 128
    STAREQUAL         shift, and go to state 129
    SLASHEQUAL        shift, and go to state 130
    PERCENTEQUAL      shift, and go to state 131
    AMPEREQUAL        shift, and go to state 132
    VBAREQUAL         shift, and go to state 133
    CIRCUMFLEXEQUAL   shift, and go to state 134
    LEFTSHIFTEQUAL    shift, and go to state 135
    RIGHTSHIFTEQUAL   shift, and go to state 136
    DOUBLESTAREQUAL   shift, and go to state 137
    DOUBLESLASHEQUAL  shift, and go to state 138
    ATEQUAL           shift, and go to state 139

    $default  reduce using rule 39 (yield_test_type.opt)

    assign_disjunct      go to state 140
    yield_test_type.opt  go to state 141
    annassign            go to state 142
    augassign            go to state 143


State 59

  222 test: lambdef .

    $default  reduce using rule 222 (test)


State 60

    6 stmt: compound_stmt .

    $default  reduce using rule 6 (stmt)


State 61

  251 compound_stmt: if_stmt .

    $default  reduce using rule 251 (compound_stmt)


State 62

  252 compound_stmt: while_stmt .

    $default  reduce using rule 252 (compound_stmt)


State 63

  253 compound_stmt: for_stmt .

    $default  reduce using rule 253 (compound_stmt)


State 64

  254 compound_stmt: try_stmt .

    $default  reduce using rule 254 (compound_stmt)


State 65

  255 compound_stmt: with_stmt .

    $default  reduce using rule 255 (compound_stmt)


State 66

  256 compound_stmt: funcdef .

    $default  reduce using rule 256 (compound_stmt)


State 67

  289 funcdef: PYDEF NAME . parameters rarrow_test.opt COLON type_comment.opt func_body_suite

    LPAR  shift, and go to state 144

    parameters  go to state 145


State 68

  257 if_stmt: IF namedexpr_test . COLON suite elif_and_named_colon_suite.rep else_and_colon_suite.opt

    COLON  shift, and go to state 146


State 69

  210 namedexpr_test: test . colonequal_and_test.opt

    COLONEQUAL  shift, and go to state 147

    $default  reduce using rule 211 (colonequal_and_test.opt)

    colonequal_and_test.opt  go to state 148


State 70

   69 raise_stmt: RAISE test.opt_from_test.opt .

    $default  reduce using rule 69 (raise_stmt)


State 71

   71 test.opt_from_test.opt: test . from_test.opt

    FROM  shift, and go to state 149

    FROM      [reduce using rule 72 (from_test.opt)]
    $default  reduce using rule 72 (from_test.opt)

    from_test.opt  go to state 150


State 72

  107 star_expr: STAR . expr

    $default  reduce using rule 133 (plus_minus_negate.rep)

    expr                   go to state 151
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51


State 73

   22 del_stmt: DEL exprlist .

    $default  reduce using rule 22 (del_stmt)


State 74

  101 exprlist: star_expr . comma_and_expr_or_starexpr.rep comma.opt

    $default  reduce using rule 102 (comma_and_expr_or_starexpr.rep)

    comma_and_expr_or_starexpr.rep  go to state 152


State 75

  100 exprlist: expr . comma_and_expr_or_starexpr.rep comma.opt

    $default  reduce using rule 102 (comma_and_expr_or_starexpr.rep)

    comma_and_expr_or_starexpr.rep  go to state 153


State 76

   92 dotted_name: NAME . dot_name.rep

    $default  reduce using rule 93 (dot_name.rep)

    dot_name.rep  go to state 154


State 77

   77 import_name: IMPORT dotted_as_names .

    $default  reduce using rule 77 (import_name)


State 78

   88 dotted_as_names: dotted_as_name . comma_dotted_as_name.rep comma.opt

    $default  reduce using rule 89 (comma_dotted_as_name.rep)

    comma_dotted_as_name.rep  go to state 155


State 79

   91 dotted_as_name: dotted_name . as_name.opt

    AS  shift, and go to state 156

    $default  reduce using rule 95 (as_name.opt)

    as_name.opt  go to state 157


State 80

   66 return_stmt: RETURN testlist_star_expr.opt .

    $default  reduce using rule 66 (return_stmt)


State 81

   68 testlist_star_expr.opt: testlist_star_expr .

    $default  reduce using rule 68 (testlist_star_expr.opt)


State 82

  275 try_stmt: TRY COLON . suite FINALLY COLON suite
  276         | TRY COLON . suite except_colon_suite_min_1 else_colon_suite.opt finally_colon_suite.opt

    NEWLINE   shift, and go to state 158
    RAISE     shift, and go to state 8
    DEL       shift, and go to state 9
    IMPORT    shift, and go to state 10
    RETURN    shift, and go to state 11
    LAMBDA    shift, and go to state 14
    ASSERT    shift, and go to state 16
    NONLOCAL  shift, and go to state 17
    YIELD     shift, and go to state 18
    BREAK     shift, and go to state 19
    NOT       shift, and go to state 21
    FROM      shift, and go to state 22
    CONTINUE  shift, and go to state 23
    GLOBAL    shift, and go to state 24
    PASS      shift, and go to state 25

    $default  reduce using rule 133 (plus_minus_negate.rep)

    simple_stmt            go to state 159
    small_stmt             go to state 28
    del_stmt               go to state 29
    pass_stmt              go to state 30
    flow_stmt              go to state 31
    nonlocal_stmt          go to state 32
    assert_stmt            go to state 33
    expr_stmt              go to state 34
    break_stmt             go to state 35
    continue_stmt          go to state 36
    return_stmt            go to state 37
    raise_stmt             go to state 38
    yield_stmt             go to state 39
    import_stmt            go to state 40
    import_name            go to state 41
    import_from            go to state 42
    global_stmt            go to state 43
    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    yield_expr             go to state 52
    test                   go to state 53
    or_test                go to state 54
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57
    testlist_star_expr     go to state 58
    lambdef                go to state 59
    suite                  go to state 160


State 83

  266 while_stmt: WHILE namedexpr_test . COLON suite else_and_suite.opt

    COLON  shift, and go to state 161


State 84

  182 varargslist: ENDMARKER .

    $default  reduce using rule 182 (varargslist)


State 85

  250 lambdef: LAMBDA varargslist.opt . COLON test

    COLON  shift, and go to state 162


State 86

  181 varargslist.opt: varargslist .

    $default  reduce using rule 181 (varargslist.opt)


State 87

  284 with_item: test . as_expr.opt

    AS  shift, and go to state 163

    $default  reduce using rule 285 (as_expr.opt)

    as_expr.opt  go to state 164


State 88

  283 with_stmt: WITH with_item . comma_with_item.rep COLON type_comment.opt suite

    $default  reduce using rule 287 (comma_with_item.rep)

    comma_with_item.rep  go to state 165


State 89

   30 assert_stmt: ASSERT test . comma_test_opt

    COMMA  shift, and go to state 166

    $default  reduce using rule 31 (comma_test_opt)

    comma_test_opt  go to state 167


State 90

   29 nonlocal_stmt: NONLOCAL NAME . comma_name.rep

    $default  reduce using rule 62 (comma_name.rep)

    comma_name.rep  go to state 168


State 91

  219 yield_arg: FROM . test

    LAMBDA  shift, and go to state 14
    NOT     shift, and go to state 21

    $default  reduce using rule 133 (plus_minus_negate.rep)

    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    test                   go to state 169
    or_test                go to state 54
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57
    lambdef                go to state 59


State 92

  216 yield_expr: YIELD yield_arg.opt .

    $default  reduce using rule 216 (yield_expr)


State 93

  218 yield_arg.opt: yield_arg .

    $default  reduce using rule 218 (yield_arg.opt)


State 94

  220 yield_arg: testlist_star_expr .

    $default  reduce using rule 220 (yield_arg)


State 95

  269 for_stmt: FOR exprlist . IN testlist COLON type_comment.opt suite else_and_suite.opt

    IN  shift, and go to state 170


State 96

  227 not_test: NOT not_test .

    $default  reduce using rule 227 (not_test)


State 97

   86 dot_or_ellipse: DOT .

    $default  reduce using rule 86 (dot_or_ellipse)


State 98

   87 dot_or_ellipse: ELLIPSIS .

    $default  reduce using rule 87 (dot_or_ellipse)


State 99

   78 import_from: FROM import_dot_expansion . IMPORT

    IMPORT  shift, and go to state 171


State 100

   79 import_dot_expansion: dot_or_ellipse.rep . dotted_name
   82 dot_or_ellipse.rep: dot_or_ellipse.rep . DOT
   83                   | dot_or_ellipse.rep . ELLIPSIS
   85 dot_or_ellipse_min_1: dot_or_ellipse.rep . dot_or_ellipse

    NAME      shift, and go to state 76
    DOT       shift, and go to state 172
    ELLIPSIS  shift, and go to state 173

    dot_or_ellipse  go to state 174
    dotted_name     go to state 175


State 101

   80 import_dot_expansion: dot_or_ellipse_min_1 .

    $default  reduce using rule 80 (import_dot_expansion)


State 102

   84 dot_or_ellipse_min_1: dot_or_ellipse .

    $default  reduce using rule 84 (dot_or_ellipse_min_1)


State 103

   97 global_stmt: GLOBAL NAME . comma_and_name.rep

    $default  reduce using rule 98 (comma_and_name.rep)

    comma_and_name.rep  go to state 176


State 104

    7 simple_stmt: small_stmt semi_and_small.rep . semi.opt nl.opt
   11 semi_and_small.rep: semi_and_small.rep . SEMI small_stmt

    SEMI  shift, and go to state 177

    $default  reduce using rule 12 (semi.opt)

    semi.opt  go to state 178


State 105

  229 comparison: expr comp_op_and_expr.rep .
  234 comp_op_and_expr.rep: comp_op_and_expr.rep . comp_op expr

    LESS          shift, and go to state 179
    GREATER       shift, and go to state 180
    EQEQUAL       shift, and go to state 181
    NOTEQUAL      shift, and go to state 182
    LESSEQUAL     shift, and go to state 183
    GREATEREQUAL  shift, and go to state 184
    IN            shift, and go to state 185
    IS            shift, and go to state 186
    NOT           shift, and go to state 187

    NOT       [reduce using rule 229 (comparison)]
    $default  reduce using rule 229 (comparison)

    comp_op  go to state 188


State 106

  110 lor_and_xor_expr.opt: VBAR . xor_expr

    $default  reduce using rule 133 (plus_minus_negate.rep)

    xor_expr               go to state 189
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51


State 107

  108 expr: xor_expr lor_and_xor_expr.opt .

    $default  reduce using rule 108 (expr)


State 108

  111 xor_expr: and_expr caret_and_and_expr.rep .
  113 caret_and_and_expr.rep: caret_and_and_expr.rep . CIRCUMFLEX and_expr

    CIRCUMFLEX  shift, and go to state 190

    $default  reduce using rule 111 (xor_expr)


State 109

  114 and_expr: shift_expr amp_and_shift_expr.rep .
  116 amp_and_shift_expr.rep: amp_and_shift_expr.rep . AMPER shift_expr

    AMPER  shift, and go to state 191

    $default  reduce using rule 114 (and_expr)


State 110

  117 shift_expr: arith_expr shift.rep .
  119 shift.rep: shift.rep . LEFTSHIFT arith_expr
  120          | shift.rep . RIGHTSHIFT arith_expr

    LEFTSHIFT   shift, and go to state 192
    RIGHTSHIFT  shift, and go to state 193

    $default  reduce using rule 117 (shift_expr)


State 111

  121 arith_expr: term pm_term.rep .
  123 pm_term.rep: pm_term.rep . PLUS term
  124            | pm_term.rep . MINUS term

    PLUS   shift, and go to state 194
    MINUS  shift, and go to state 195

    PLUS      [reduce using rule 121 (arith_expr)]
    MINUS     [reduce using rule 121 (arith_expr)]
    $default  reduce using rule 121 (arith_expr)


State 112

  125 term: factor factor.rep .
  127 factor.rep: factor.rep . STAR factor
  128           | factor.rep . AT factor
  129           | factor.rep . SLASH factor
  130           | factor.rep . PERCENT factor
  131           | factor.rep . DOUBLESLASH factor

    STAR         shift, and go to state 196
    SLASH        shift, and go to state 197
    PERCENT      shift, and go to state 198
    DOUBLESLASH  shift, and go to state 199
    AT           shift, and go to state 200

    $default  reduce using rule 125 (term)


State 113

  134 plus_minus_negate.rep: plus_minus_negate.rep PLUS .

    $default  reduce using rule 134 (plus_minus_negate.rep)


State 114

  135 plus_minus_negate.rep: plus_minus_negate.rep MINUS .

    $default  reduce using rule 135 (plus_minus_negate.rep)


State 115

  136 plus_minus_negate.rep: plus_minus_negate.rep TILDE .

    $default  reduce using rule 136 (plus_minus_negate.rep)


State 116

  142 await.opt: AWAIT .

    $default  reduce using rule 142 (await.opt)


State 117

  132 factor: plus_minus_negate.rep power .

    $default  reduce using rule 132 (factor)


State 118

  137 power: atom_expr . exponentiation.opt

    DOUBLESTAR  shift, and go to state 201

    $default  reduce using rule 138 (exponentiation.opt)

    exponentiation.opt  go to state 202


State 119

  140 atom_expr: await.opt . atom trailer.rep

    FLOATLIT   shift, and go to state 203
    NAME       shift, and go to state 204
    INTLIT     shift, and go to state 205
    STRINGLIT  shift, and go to state 206
    LPAR       shift, and go to state 207
    LSQB       shift, and go to state 208
    LBRACE     shift, and go to state 209
    ELLIPSIS   shift, and go to state 210
    PYFALSE    shift, and go to state 211
    NONE       shift, and go to state 212
    PYTRUE     shift, and go to state 213

    atom          go to state 214
    string_min_1  go to state 215


State 120

  232 testlist_star_expr: test comma_and_test_or_star_expr.rep . comma.opt
  236 comma_and_test_or_star_expr.rep: comma_and_test_or_star_expr.rep . COMMA test
  237                                | comma_and_test_or_star_expr.rep . COMMA star_expr

    COMMA  shift, and go to state 216

    $default  reduce using rule 105 (comma.opt)

    comma.opt  go to state 217


State 121

  249 cond.opt: IF . or_test ELSE test

    NOT  shift, and go to state 21

    $default  reduce using rule 133 (plus_minus_negate.rep)

    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    or_test                go to state 218
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57


State 122

  221 test: or_test cond.opt .

    $default  reduce using rule 221 (test)


State 123

  223 or_test: and_test or_and_and_test.rep .
  225 or_and_and_test.rep: or_and_and_test.rep . OR and_test

    OR  shift, and go to state 219

    $default  reduce using rule 223 (or_test)


State 124

  226 and_test: not_test and_and_not_test.rep .
  231 and_and_not_test.rep: and_and_not_test.rep . AND not_test

    AND  shift, and go to state 220

    $default  reduce using rule 226 (and_test)


State 125

   45 annassign: COLON . test equals_yield_expr_or_testlist_star_expr.opt

    LAMBDA  shift, and go to state 14
    NOT     shift, and go to state 21

    $default  reduce using rule 133 (plus_minus_negate.rep)

    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    test                   go to state 221
    or_test                go to state 54
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57
    lambdef                go to state 59


State 126

   40 yield_test_type.opt: EQUAL . yield_expr_or_testlist_star_expr_min_1 type_comment.opt

    LAMBDA  shift, and go to state 14
    YIELD   shift, and go to state 18
    NOT     shift, and go to state 21

    $default  reduce using rule 133 (plus_minus_negate.rep)

    yield_expr_or_testlist_star_expr_min_1  go to state 222
    yield_or_testlist_star_expr             go to state 223
    expr                                    go to state 44
    xor_expr                                go to state 45
    and_expr                                go to state 46
    shift_expr                              go to state 47
    arith_expr                              go to state 48
    term                                    go to state 49
    factor                                  go to state 50
    plus_minus_negate.rep                   go to state 51
    yield_expr                              go to state 224
    test                                    go to state 53
    or_test                                 go to state 54
    and_test                                go to state 55
    not_test                                go to state 56
    comparison                              go to state 57
    testlist_star_expr                      go to state 225
    lambdef                                 go to state 59


State 127

   49 augassign: PLUSEQUAL .

    $default  reduce using rule 49 (augassign)


State 128

   50 augassign: MINEQUAL .

    $default  reduce using rule 50 (augassign)


State 129

   51 augassign: STAREQUAL .

    $default  reduce using rule 51 (augassign)


State 130

   53 augassign: SLASHEQUAL .

    $default  reduce using rule 53 (augassign)


State 131

   54 augassign: PERCENTEQUAL .

    $default  reduce using rule 54 (augassign)


State 132

   55 augassign: AMPEREQUAL .

    $default  reduce using rule 55 (augassign)


State 133

   56 augassign: VBAREQUAL .

    $default  reduce using rule 56 (augassign)


State 134

   57 augassign: CIRCUMFLEXEQUAL .

    $default  reduce using rule 57 (augassign)


State 135

   58 augassign: LEFTSHIFTEQUAL .

    $default  reduce using rule 58 (augassign)


State 136

   59 augassign: RIGHTSHIFTEQUAL .

    $default  reduce using rule 59 (augassign)


State 137

   60 augassign: DOUBLESTAREQUAL .

    $default  reduce using rule 60 (augassign)


State 138

   61 augassign: DOUBLESLASHEQUAL .

    $default  reduce using rule 61 (augassign)


State 139

   52 augassign: ATEQUAL .

    $default  reduce using rule 52 (augassign)


State 140

   33 expr_stmt: testlist_star_expr assign_disjunct .

    $default  reduce using rule 33 (expr_stmt)


State 141

   34 assign_disjunct: yield_test_type.opt .

    $default  reduce using rule 34 (assign_disjunct)


State 142

   35 assign_disjunct: annassign .

    $default  reduce using rule 35 (assign_disjunct)


State 143

   36 assign_disjunct: augassign . yield_or_test

    LAMBDA  shift, and go to state 14
    YIELD   shift, and go to state 18
    NOT     shift, and go to state 21

    $default  reduce using rule 133 (plus_minus_negate.rep)

    yield_or_test          go to state 226
    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    yield_expr             go to state 227
    test                   go to state 228
    or_test                go to state 54
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57
    lambdef                go to state 59
    testlist               go to state 229


State 144

  290 parameters: LPAR . typedargslist.opt RPAR

    EMPTY  shift, and go to state 230

    $default  reduce using rule 291 (typedargslist.opt)

    typedargslist.opt  go to state 231
    typedargslist      go to state 232


State 145

  289 funcdef: PYDEF NAME parameters . rarrow_test.opt COLON type_comment.opt func_body_suite

    RARROW  shift, and go to state 233

    $default  reduce using rule 293 (rarrow_test.opt)

    rarrow_test.opt  go to state 234


State 146

  257 if_stmt: IF namedexpr_test COLON . suite elif_and_named_colon_suite.rep else_and_colon_suite.opt

    NEWLINE   shift, and go to state 158
    RAISE     shift, and go to state 8
    DEL       shift, and go to state 9
    IMPORT    shift, and go to state 10
    RETURN    shift, and go to state 11
    LAMBDA    shift, and go to state 14
    ASSERT    shift, and go to state 16
    NONLOCAL  shift, and go to state 17
    YIELD     shift, and go to state 18
    BREAK     shift, and go to state 19
    NOT       shift, and go to state 21
    FROM      shift, and go to state 22
    CONTINUE  shift, and go to state 23
    GLOBAL    shift, and go to state 24
    PASS      shift, and go to state 25

    $default  reduce using rule 133 (plus_minus_negate.rep)

    simple_stmt            go to state 159
    small_stmt             go to state 28
    del_stmt               go to state 29
    pass_stmt              go to state 30
    flow_stmt              go to state 31
    nonlocal_stmt          go to state 32
    assert_stmt            go to state 33
    expr_stmt              go to state 34
    break_stmt             go to state 35
    continue_stmt          go to state 36
    return_stmt            go to state 37
    raise_stmt             go to state 38
    yield_stmt             go to state 39
    import_stmt            go to state 40
    import_name            go to state 41
    import_from            go to state 42
    global_stmt            go to state 43
    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    yield_expr             go to state 52
    test                   go to state 53
    or_test                go to state 54
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57
    testlist_star_expr     go to state 58
    lambdef                go to state 59
    suite                  go to state 235


State 147

  212 colonequal_and_test.opt: COLONEQUAL . test

    LAMBDA  shift, and go to state 14
    NOT     shift, and go to state 21

    $default  reduce using rule 133 (plus_minus_negate.rep)

    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    test                   go to state 236
    or_test                go to state 54
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57
    lambdef                go to state 59


State 148

  210 namedexpr_test: test colonequal_and_test.opt .

    $default  reduce using rule 210 (namedexpr_test)


State 149

   73 from_test.opt: FROM . test

    LAMBDA  shift, and go to state 14
    NOT     shift, and go to state 21

    $default  reduce using rule 133 (plus_minus_negate.rep)

    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    test                   go to state 237
    or_test                go to state 54
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57
    lambdef                go to state 59


State 150

   71 test.opt_from_test.opt: test from_test.opt .

    $default  reduce using rule 71 (test.opt_from_test.opt)


State 151

  107 star_expr: STAR expr .

    $default  reduce using rule 107 (star_expr)


State 152

  101 exprlist: star_expr comma_and_expr_or_starexpr.rep . comma.opt
  103 comma_and_expr_or_starexpr.rep: comma_and_expr_or_starexpr.rep . COMMA expr
  104                               | comma_and_expr_or_starexpr.rep . COMMA star_expr

    COMMA  shift, and go to state 238

    $default  reduce using rule 105 (comma.opt)

    comma.opt  go to state 239


State 153

  100 exprlist: expr comma_and_expr_or_starexpr.rep . comma.opt
  103 comma_and_expr_or_starexpr.rep: comma_and_expr_or_starexpr.rep . COMMA expr
  104                               | comma_and_expr_or_starexpr.rep . COMMA star_expr

    COMMA  shift, and go to state 238

    $default  reduce using rule 105 (comma.opt)

    comma.opt  go to state 240


State 154

   92 dotted_name: NAME dot_name.rep .
   94 dot_name.rep: dot_name.rep . DOT NAME

    DOT  shift, and go to state 241

    $default  reduce using rule 92 (dotted_name)


State 155

   88 dotted_as_names: dotted_as_name comma_dotted_as_name.rep . comma.opt
   90 comma_dotted_as_name.rep: comma_dotted_as_name.rep . COMMA dotted_as_name

    COMMA  shift, and go to state 242

    $default  reduce using rule 105 (comma.opt)

    comma.opt  go to state 243


State 156

   96 as_name.opt: AS . NAME

    NAME  shift, and go to state 244


State 157

   91 dotted_as_name: dotted_name as_name.opt .

    $default  reduce using rule 91 (dotted_as_name)


State 158

  259 suite: NEWLINE . INDENT stmt stmt.rep DEDENT

    INDENT  shift, and go to state 245


State 159

  258 suite: simple_stmt .

    $default  reduce using rule 258 (suite)


State 160

  275 try_stmt: TRY COLON suite . FINALLY COLON suite
  276         | TRY COLON suite . except_colon_suite_min_1 else_colon_suite.opt finally_colon_suite.opt

    EXCEPT   shift, and go to state 246
    FINALLY  shift, and go to state 247

    except_colon_suite_min_1  go to state 248


State 161

  266 while_stmt: WHILE namedexpr_test COLON . suite else_and_suite.opt

    NEWLINE   shift, and go to state 158
    RAISE     shift, and go to state 8
    DEL       shift, and go to state 9
    IMPORT    shift, and go to state 10
    RETURN    shift, and go to state 11
    LAMBDA    shift, and go to state 14
    ASSERT    shift, and go to state 16
    NONLOCAL  shift, and go to state 17
    YIELD     shift, and go to state 18
    BREAK     shift, and go to state 19
    NOT       shift, and go to state 21
    FROM      shift, and go to state 22
    CONTINUE  shift, and go to state 23
    GLOBAL    shift, and go to state 24
    PASS      shift, and go to state 25

    $default  reduce using rule 133 (plus_minus_negate.rep)

    simple_stmt            go to state 159
    small_stmt             go to state 28
    del_stmt               go to state 29
    pass_stmt              go to state 30
    flow_stmt              go to state 31
    nonlocal_stmt          go to state 32
    assert_stmt            go to state 33
    expr_stmt              go to state 34
    break_stmt             go to state 35
    continue_stmt          go to state 36
    return_stmt            go to state 37
    raise_stmt             go to state 38
    yield_stmt             go to state 39
    import_stmt            go to state 40
    import_name            go to state 41
    import_from            go to state 42
    global_stmt            go to state 43
    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    yield_expr             go to state 52
    test                   go to state 53
    or_test                go to state 54
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57
    testlist_star_expr     go to state 58
    lambdef                go to state 59
    suite                  go to state 249


State 162

  250 lambdef: LAMBDA varargslist.opt COLON . test

    LAMBDA  shift, and go to state 14
    NOT     shift, and go to state 21

    $default  reduce using rule 133 (plus_minus_negate.rep)

    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    test                   go to state 250
    or_test                go to state 54
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57
    lambdef                go to state 59


State 163

  286 as_expr.opt: AS . expr

    $default  reduce using rule 133 (plus_minus_negate.rep)

    expr                   go to state 251
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51


State 164

  284 with_item: test as_expr.opt .

    $default  reduce using rule 284 (with_item)


State 165

  283 with_stmt: WITH with_item comma_with_item.rep . COLON type_comment.opt suite
  288 comma_with_item.rep: comma_with_item.rep . COMMA with_item

    COLON  shift, and go to state 252
    COMMA  shift, and go to state 253


State 166

   32 comma_test_opt: COMMA . test

    LAMBDA  shift, and go to state 14
    NOT     shift, and go to state 21

    $default  reduce using rule 133 (plus_minus_negate.rep)

    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    test                   go to state 254
    or_test                go to state 54
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57
    lambdef                go to state 59


State 167

   30 assert_stmt: ASSERT test comma_test_opt .

    $default  reduce using rule 30 (assert_stmt)


State 168

   29 nonlocal_stmt: NONLOCAL NAME comma_name.rep .
   63 comma_name.rep: comma_name.rep . COMMA NAME

    COMMA  shift, and go to state 255

    $default  reduce using rule 29 (nonlocal_stmt)


State 169

  219 yield_arg: FROM test .

    $default  reduce using rule 219 (yield_arg)


State 170

  269 for_stmt: FOR exprlist IN . testlist COLON type_comment.opt suite else_and_suite.opt

    LAMBDA  shift, and go to state 14
    NOT     shift, and go to state 21

    $default  reduce using rule 133 (plus_minus_negate.rep)

    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    test                   go to state 228
    or_test                go to state 54
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57
    lambdef                go to state 59
    testlist               go to state 256


State 171

   78 import_from: FROM import_dot_expansion IMPORT .

    $default  reduce using rule 78 (import_from)


State 172

   82 dot_or_ellipse.rep: dot_or_ellipse.rep DOT .
   86 dot_or_ellipse: DOT .

    IMPORT    reduce using rule 86 (dot_or_ellipse)
    $default  reduce using rule 82 (dot_or_ellipse.rep)


State 173

   83 dot_or_ellipse.rep: dot_or_ellipse.rep ELLIPSIS .
   87 dot_or_ellipse: ELLIPSIS .

    IMPORT    reduce using rule 87 (dot_or_ellipse)
    $default  reduce using rule 83 (dot_or_ellipse.rep)


State 174

   85 dot_or_ellipse_min_1: dot_or_ellipse.rep dot_or_ellipse .

    $default  reduce using rule 85 (dot_or_ellipse_min_1)


State 175

   79 import_dot_expansion: dot_or_ellipse.rep dotted_name .

    $default  reduce using rule 79 (import_dot_expansion)


State 176

   97 global_stmt: GLOBAL NAME comma_and_name.rep .
   99 comma_and_name.rep: comma_and_name.rep . COMMA NAME

    COMMA  shift, and go to state 257

    $default  reduce using rule 97 (global_stmt)


State 177

   11 semi_and_small.rep: semi_and_small.rep SEMI . small_stmt
   13 semi.opt: SEMI .

    RAISE     shift, and go to state 8
    DEL       shift, and go to state 9
    IMPORT    shift, and go to state 10
    RETURN    shift, and go to state 11
    LAMBDA    shift, and go to state 14
    ASSERT    shift, and go to state 16
    NONLOCAL  shift, and go to state 17
    YIELD     shift, and go to state 18
    BREAK     shift, and go to state 19
    NOT       shift, and go to state 21
    FROM      shift, and go to state 22
    CONTINUE  shift, and go to state 23
    GLOBAL    shift, and go to state 24
    PASS      shift, and go to state 25

    FLOATLIT   reduce using rule 13 (semi.opt)
    FLOATLIT   [reduce using rule 133 (plus_minus_negate.rep)]
    NAME       reduce using rule 13 (semi.opt)
    NAME       [reduce using rule 133 (plus_minus_negate.rep)]
    INTLIT     reduce using rule 13 (semi.opt)
    INTLIT     [reduce using rule 133 (plus_minus_negate.rep)]
    STRINGLIT  reduce using rule 13 (semi.opt)
    STRINGLIT  [reduce using rule 133 (plus_minus_negate.rep)]
    LPAR       reduce using rule 13 (semi.opt)
    LPAR       [reduce using rule 133 (plus_minus_negate.rep)]
    LSQB       reduce using rule 13 (semi.opt)
    LSQB       [reduce using rule 133 (plus_minus_negate.rep)]
    PLUS       reduce using rule 13 (semi.opt)
    PLUS       [reduce using rule 133 (plus_minus_negate.rep)]
    MINUS      reduce using rule 13 (semi.opt)
    MINUS      [reduce using rule 133 (plus_minus_negate.rep)]
    LBRACE     reduce using rule 13 (semi.opt)
    LBRACE     [reduce using rule 133 (plus_minus_negate.rep)]
    TILDE      reduce using rule 13 (semi.opt)
    TILDE      [reduce using rule 133 (plus_minus_negate.rep)]
    ELLIPSIS   reduce using rule 13 (semi.opt)
    ELLIPSIS   [reduce using rule 133 (plus_minus_negate.rep)]
    PYFALSE    reduce using rule 13 (semi.opt)
    PYFALSE    [reduce using rule 133 (plus_minus_negate.rep)]
    RAISE      [reduce using rule 13 (semi.opt)]
    NONE       reduce using rule 13 (semi.opt)
    NONE       [reduce using rule 133 (plus_minus_negate.rep)]
    DEL        [reduce using rule 13 (semi.opt)]
    IMPORT     [reduce using rule 13 (semi.opt)]
    RETURN     [reduce using rule 13 (semi.opt)]
    PYTRUE     reduce using rule 13 (semi.opt)
    PYTRUE     [reduce using rule 133 (plus_minus_negate.rep)]
    LAMBDA     [reduce using rule 13 (semi.opt)]
    ASSERT     [reduce using rule 13 (semi.opt)]
    NONLOCAL   [reduce using rule 13 (semi.opt)]
    YIELD      [reduce using rule 13 (semi.opt)]
    BREAK      [reduce using rule 13 (semi.opt)]
    NOT        [reduce using rule 13 (semi.opt)]
    FROM       [reduce using rule 13 (semi.opt)]
    CONTINUE   [reduce using rule 13 (semi.opt)]
    GLOBAL     [reduce using rule 13 (semi.opt)]
    PASS       [reduce using rule 13 (semi.opt)]
    AWAIT      reduce using rule 13 (semi.opt)
    AWAIT      [reduce using rule 133 (plus_minus_negate.rep)]
    $default   reduce using rule 13 (semi.opt)

    small_stmt             go to state 258
    del_stmt               go to state 29
    pass_stmt              go to state 30
    flow_stmt              go to state 31
    nonlocal_stmt          go to state 32
    assert_stmt            go to state 33
    expr_stmt              go to state 34
    break_stmt             go to state 35
    continue_stmt          go to state 36
    return_stmt            go to state 37
    raise_stmt             go to state 38
    yield_stmt             go to state 39
    import_stmt            go to state 40
    import_name            go to state 41
    import_from            go to state 42
    global_stmt            go to state 43
    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    yield_expr             go to state 52
    test                   go to state 53
    or_test                go to state 54
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57
    testlist_star_expr     go to state 58
    lambdef                go to state 59


State 178

    7 simple_stmt: small_stmt semi_and_small.rep semi.opt . nl.opt

    NEWLINE  shift, and go to state 259

    NEWLINE   [reduce using rule 8 (nl.opt)]
    $default  reduce using rule 8 (nl.opt)

    nl.opt  go to state 260


State 179

  238 comp_op: LESS .

    $default  reduce using rule 238 (comp_op)


State 180

  239 comp_op: GREATER .

    $default  reduce using rule 239 (comp_op)


State 181

  240 comp_op: EQEQUAL .

    $default  reduce using rule 240 (comp_op)


State 182

  243 comp_op: NOTEQUAL .

    $default  reduce using rule 243 (comp_op)


State 183

  242 comp_op: LESSEQUAL .

    $default  reduce using rule 242 (comp_op)


State 184

  241 comp_op: GREATEREQUAL .

    $default  reduce using rule 241 (comp_op)


State 185

  244 comp_op: IN .

    $default  reduce using rule 244 (comp_op)


State 186

  246 comp_op: IS .
  247        | IS . NOT

    NOT  shift, and go to state 261

    $default  reduce using rule 246 (comp_op)


State 187

  245 comp_op: NOT . IN

    IN  shift, and go to state 262


State 188

  234 comp_op_and_expr.rep: comp_op_and_expr.rep comp_op . expr

    $default  reduce using rule 133 (plus_minus_negate.rep)

    expr                   go to state 263
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51


State 189

  110 lor_and_xor_expr.opt: VBAR xor_expr .

    $default  reduce using rule 110 (lor_and_xor_expr.opt)


State 190

  113 caret_and_and_expr.rep: caret_and_and_expr.rep CIRCUMFLEX . and_expr

    $default  reduce using rule 133 (plus_minus_negate.rep)

    and_expr               go to state 264
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51


State 191

  116 amp_and_shift_expr.rep: amp_and_shift_expr.rep AMPER . shift_expr

    $default  reduce using rule 133 (plus_minus_negate.rep)

    shift_expr             go to state 265
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51


State 192

  119 shift.rep: shift.rep LEFTSHIFT . arith_expr

    $default  reduce using rule 133 (plus_minus_negate.rep)

    arith_expr             go to state 266
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51


State 193

  120 shift.rep: shift.rep RIGHTSHIFT . arith_expr

    $default  reduce using rule 133 (plus_minus_negate.rep)

    arith_expr             go to state 267
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51


State 194

  123 pm_term.rep: pm_term.rep PLUS . term

    $default  reduce using rule 133 (plus_minus_negate.rep)

    term                   go to state 268
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51


State 195

  124 pm_term.rep: pm_term.rep MINUS . term

    $default  reduce using rule 133 (plus_minus_negate.rep)

    term                   go to state 269
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51


State 196

  127 factor.rep: factor.rep STAR . factor

    $default  reduce using rule 133 (plus_minus_negate.rep)

    factor                 go to state 270
    plus_minus_negate.rep  go to state 51


State 197

  129 factor.rep: factor.rep SLASH . factor

    $default  reduce using rule 133 (plus_minus_negate.rep)

    factor                 go to state 271
    plus_minus_negate.rep  go to state 51


State 198

  130 factor.rep: factor.rep PERCENT . factor

    $default  reduce using rule 133 (plus_minus_negate.rep)

    factor                 go to state 272
    plus_minus_negate.rep  go to state 51


State 199

  131 factor.rep: factor.rep DOUBLESLASH . factor

    $default  reduce using rule 133 (plus_minus_negate.rep)

    factor                 go to state 273
    plus_minus_negate.rep  go to state 51


State 200

  128 factor.rep: factor.rep AT . factor

    $default  reduce using rule 133 (plus_minus_negate.rep)

    factor                 go to state 274
    plus_minus_negate.rep  go to state 51


State 201

  139 exponentiation.opt: DOUBLESTAR . factor

    $default  reduce using rule 133 (plus_minus_negate.rep)

    factor                 go to state 275
    plus_minus_negate.rep  go to state 51


State 202

  137 power: atom_expr exponentiation.opt .

    $default  reduce using rule 137 (power)


State 203

  191 atom: FLOATLIT .

    $default  reduce using rule 191 (atom)


State 204

  189 atom: NAME .

    $default  reduce using rule 189 (atom)


State 205

  190 atom: INTLIT .

    $default  reduce using rule 190 (atom)


State 206

  197 string_min_1: STRINGLIT .

    $default  reduce using rule 197 (string_min_1)


State 207

  185 atom: LPAR . yield_expr.opt RPAR
  186     | LPAR . testlist_comp.opt RPAR

    STAR    shift, and go to state 72
    LAMBDA  shift, and go to state 14
    YIELD   shift, and go to state 18
    NOT     shift, and go to state 21

    RPAR      reduce using rule 199 (yield_expr.opt)
    RPAR      [reduce using rule 201 (testlist_comp.opt)]
    $default  reduce using rule 133 (plus_minus_negate.rep)

    star_expr              go to state 276
    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    yield_expr.opt         go to state 277
    testlist_comp.opt      go to state 278
    testlist_comp          go to state 279
    namedexpr_test         go to state 280
    yield_expr             go to state 281
    test                   go to state 69
    or_test                go to state 54
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57
    lambdef                go to state 59


State 208

  187 atom: LSQB . testlist_comp.opt RSQB

    STAR    shift, and go to state 72
    LAMBDA  shift, and go to state 14
    NOT     shift, and go to state 21

    RSQB      reduce using rule 201 (testlist_comp.opt)
    $default  reduce using rule 133 (plus_minus_negate.rep)

    star_expr              go to state 276
    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    testlist_comp.opt      go to state 282
    testlist_comp          go to state 279
    namedexpr_test         go to state 280
    test                   go to state 69
    or_test                go to state 54
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57
    lambdef                go to state 59


State 209

  188 atom: LBRACE . dictorsetmaker.opt RBRACE

    EMPTY  shift, and go to state 283

    $default  reduce using rule 213 (dictorsetmaker.opt)

    dictorsetmaker.opt  go to state 284
    dictorsetmaker      go to state 285


State 210

  193 atom: ELLIPSIS .

    $default  reduce using rule 193 (atom)


State 211

  196 atom: PYFALSE .

    $default  reduce using rule 196 (atom)


State 212

  194 atom: NONE .

    $default  reduce using rule 194 (atom)


State 213

  195 atom: PYTRUE .

    $default  reduce using rule 195 (atom)


State 214

  140 atom_expr: await.opt atom . trailer.rep

    $default  reduce using rule 143 (trailer.rep)

    trailer.rep  go to state 286


State 215

  192 atom: string_min_1 .
  198 string_min_1: string_min_1 . STRINGLIT

    STRINGLIT  shift, and go to state 287

    STRINGLIT  [reduce using rule 192 (atom)]
    $default   reduce using rule 192 (atom)


State 216

  106 comma.opt: COMMA .
  236 comma_and_test_or_star_expr.rep: comma_and_test_or_star_expr.rep COMMA . test
  237                                | comma_and_test_or_star_expr.rep COMMA . star_expr

    STAR    shift, and go to state 72
    LAMBDA  shift, and go to state 14
    NOT     shift, and go to state 21

    FLOATLIT   reduce using rule 106 (comma.opt)
    FLOATLIT   [reduce using rule 133 (plus_minus_negate.rep)]
    NAME       reduce using rule 106 (comma.opt)
    NAME       [reduce using rule 133 (plus_minus_negate.rep)]
    INTLIT     reduce using rule 106 (comma.opt)
    INTLIT     [reduce using rule 133 (plus_minus_negate.rep)]
    STRINGLIT  reduce using rule 106 (comma.opt)
    STRINGLIT  [reduce using rule 133 (plus_minus_negate.rep)]
    LPAR       reduce using rule 106 (comma.opt)
    LPAR       [reduce using rule 133 (plus_minus_negate.rep)]
    LSQB       reduce using rule 106 (comma.opt)
    LSQB       [reduce using rule 133 (plus_minus_negate.rep)]
    PLUS       reduce using rule 106 (comma.opt)
    PLUS       [reduce using rule 133 (plus_minus_negate.rep)]
    MINUS      reduce using rule 106 (comma.opt)
    MINUS      [reduce using rule 133 (plus_minus_negate.rep)]
    LBRACE     reduce using rule 106 (comma.opt)
    LBRACE     [reduce using rule 133 (plus_minus_negate.rep)]
    TILDE      reduce using rule 106 (comma.opt)
    TILDE      [reduce using rule 133 (plus_minus_negate.rep)]
    ELLIPSIS   reduce using rule 106 (comma.opt)
    ELLIPSIS   [reduce using rule 133 (plus_minus_negate.rep)]
    PYFALSE    reduce using rule 106 (comma.opt)
    PYFALSE    [reduce using rule 133 (plus_minus_negate.rep)]
    NONE       reduce using rule 106 (comma.opt)
    NONE       [reduce using rule 133 (plus_minus_negate.rep)]
    PYTRUE     reduce using rule 106 (comma.opt)
    PYTRUE     [reduce using rule 133 (plus_minus_negate.rep)]
    LAMBDA     [reduce using rule 106 (comma.opt)]
    NOT        [reduce using rule 106 (comma.opt)]
    AWAIT      reduce using rule 106 (comma.opt)
    AWAIT      [reduce using rule 133 (plus_minus_negate.rep)]
    $default   reduce using rule 106 (comma.opt)

    star_expr              go to state 288
    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    test                   go to state 289
    or_test                go to state 54
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57
    lambdef                go to state 59


State 217

  232 testlist_star_expr: test comma_and_test_or_star_expr.rep comma.opt .

    $default  reduce using rule 232 (testlist_star_expr)


State 218

  249 cond.opt: IF or_test . ELSE test

    ELSE  shift, and go to state 290


State 219

  225 or_and_and_test.rep: or_and_and_test.rep OR . and_test

    NOT  shift, and go to state 21

    $default  reduce using rule 133 (plus_minus_negate.rep)

    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    and_test               go to state 291
    not_test               go to state 56
    comparison             go to state 57


State 220

  231 and_and_not_test.rep: and_and_not_test.rep AND . not_test

    NOT  shift, and go to state 21

    $default  reduce using rule 133 (plus_minus_negate.rep)

    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    not_test               go to state 292
    comparison             go to state 57


State 221

   45 annassign: COLON test . equals_yield_expr_or_testlist_star_expr.opt

    EQUAL  shift, and go to state 293

    $default  reduce using rule 46 (equals_yield_expr_or_testlist_star_expr.opt)

    equals_yield_expr_or_testlist_star_expr.opt  go to state 294


State 222

   40 yield_test_type.opt: EQUAL yield_expr_or_testlist_star_expr_min_1 . type_comment.opt
   42 yield_expr_or_testlist_star_expr_min_1: yield_expr_or_testlist_star_expr_min_1 . yield_or_testlist_star_expr

    LAMBDA        shift, and go to state 14
    YIELD         shift, and go to state 18
    NOT           shift, and go to state 21
    TYPE_COMMENT  shift, and go to state 295

    FLOATLIT   reduce using rule 133 (plus_minus_negate.rep)
    FLOATLIT   [reduce using rule 271 (type_comment.opt)]
    NAME       reduce using rule 133 (plus_minus_negate.rep)
    NAME       [reduce using rule 271 (type_comment.opt)]
    INTLIT     reduce using rule 133 (plus_minus_negate.rep)
    INTLIT     [reduce using rule 271 (type_comment.opt)]
    STRINGLIT  reduce using rule 133 (plus_minus_negate.rep)
    STRINGLIT  [reduce using rule 271 (type_comment.opt)]
    LPAR       reduce using rule 133 (plus_minus_negate.rep)
    LPAR       [reduce using rule 271 (type_comment.opt)]
    LSQB       reduce using rule 133 (plus_minus_negate.rep)
    LSQB       [reduce using rule 271 (type_comment.opt)]
    PLUS       reduce using rule 133 (plus_minus_negate.rep)
    PLUS       [reduce using rule 271 (type_comment.opt)]
    MINUS      reduce using rule 133 (plus_minus_negate.rep)
    MINUS      [reduce using rule 271 (type_comment.opt)]
    LBRACE     reduce using rule 133 (plus_minus_negate.rep)
    LBRACE     [reduce using rule 271 (type_comment.opt)]
    TILDE      reduce using rule 133 (plus_minus_negate.rep)
    TILDE      [reduce using rule 271 (type_comment.opt)]
    ELLIPSIS   reduce using rule 133 (plus_minus_negate.rep)
    ELLIPSIS   [reduce using rule 271 (type_comment.opt)]
    PYFALSE    reduce using rule 133 (plus_minus_negate.rep)
    PYFALSE    [reduce using rule 271 (type_comment.opt)]
    NONE       reduce using rule 133 (plus_minus_negate.rep)
    NONE       [reduce using rule 271 (type_comment.opt)]
    PYTRUE     reduce using rule 133 (plus_minus_negate.rep)
    PYTRUE     [reduce using rule 271 (type_comment.opt)]
    LAMBDA     [reduce using rule 271 (type_comment.opt)]
    YIELD      [reduce using rule 271 (type_comment.opt)]
    NOT        [reduce using rule 271 (type_comment.opt)]
    AWAIT      reduce using rule 133 (plus_minus_negate.rep)
    AWAIT      [reduce using rule 271 (type_comment.opt)]
    $default   reduce using rule 271 (type_comment.opt)

    yield_or_testlist_star_expr  go to state 296
    expr                         go to state 44
    xor_expr                     go to state 45
    and_expr                     go to state 46
    shift_expr                   go to state 47
    arith_expr                   go to state 48
    term                         go to state 49
    factor                       go to state 50
    plus_minus_negate.rep        go to state 51
    yield_expr                   go to state 224
    test                         go to state 53
    or_test                      go to state 54
    and_test                     go to state 55
    not_test                     go to state 56
    comparison                   go to state 57
    testlist_star_expr           go to state 225
    lambdef                      go to state 59
    type_comment.opt             go to state 297


State 223

   41 yield_expr_or_testlist_star_expr_min_1: yield_or_testlist_star_expr .

    $default  reduce using rule 41 (yield_expr_or_testlist_star_expr_min_1)


State 224

   43 yield_or_testlist_star_expr: yield_expr .

    $default  reduce using rule 43 (yield_or_testlist_star_expr)


State 225

   44 yield_or_testlist_star_expr: testlist_star_expr .

    $default  reduce using rule 44 (yield_or_testlist_star_expr)


State 226

   36 assign_disjunct: augassign yield_or_test .

    $default  reduce using rule 36 (assign_disjunct)


State 227

   37 yield_or_test: yield_expr .

    $default  reduce using rule 37 (yield_or_test)


State 228

  270 testlist: test . comma_and_test.rep comma.opt

    $default  reduce using rule 273 (comma_and_test.rep)

    comma_and_test.rep  go to state 298


State 229

   38 yield_or_test: testlist .

    $default  reduce using rule 38 (yield_or_test)


State 230

  295 typedargslist: EMPTY .

    $default  reduce using rule 295 (typedargslist)


State 231

  290 parameters: LPAR typedargslist.opt . RPAR

    RPAR  shift, and go to state 299


State 232

  292 typedargslist.opt: typedargslist .

    $default  reduce using rule 292 (typedargslist.opt)


State 233

  294 rarrow_test.opt: RARROW . test

    LAMBDA  shift, and go to state 14
    NOT     shift, and go to state 21

    $default  reduce using rule 133 (plus_minus_negate.rep)

    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    test                   go to state 300
    or_test                go to state 54
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57
    lambdef                go to state 59


State 234

  289 funcdef: PYDEF NAME parameters rarrow_test.opt . COLON type_comment.opt func_body_suite

    COLON  shift, and go to state 301


State 235

  257 if_stmt: IF namedexpr_test COLON suite . elif_and_named_colon_suite.rep else_and_colon_suite.opt

    $default  reduce using rule 262 (elif_and_named_colon_suite.rep)

    elif_and_named_colon_suite.rep  go to state 302


State 236

  212 colonequal_and_test.opt: COLONEQUAL test .

    $default  reduce using rule 212 (colonequal_and_test.opt)


State 237

   73 from_test.opt: FROM test .

    $default  reduce using rule 73 (from_test.opt)


State 238

  103 comma_and_expr_or_starexpr.rep: comma_and_expr_or_starexpr.rep COMMA . expr
  104                               | comma_and_expr_or_starexpr.rep COMMA . star_expr
  106 comma.opt: COMMA .

    STAR  shift, and go to state 72

    FLOATLIT   reduce using rule 106 (comma.opt)
    FLOATLIT   [reduce using rule 133 (plus_minus_negate.rep)]
    NAME       reduce using rule 106 (comma.opt)
    NAME       [reduce using rule 133 (plus_minus_negate.rep)]
    INTLIT     reduce using rule 106 (comma.opt)
    INTLIT     [reduce using rule 133 (plus_minus_negate.rep)]
    STRINGLIT  reduce using rule 106 (comma.opt)
    STRINGLIT  [reduce using rule 133 (plus_minus_negate.rep)]
    LPAR       reduce using rule 106 (comma.opt)
    LPAR       [reduce using rule 133 (plus_minus_negate.rep)]
    LSQB       reduce using rule 106 (comma.opt)
    LSQB       [reduce using rule 133 (plus_minus_negate.rep)]
    PLUS       reduce using rule 106 (comma.opt)
    PLUS       [reduce using rule 133 (plus_minus_negate.rep)]
    MINUS      reduce using rule 106 (comma.opt)
    MINUS      [reduce using rule 133 (plus_minus_negate.rep)]
    LBRACE     reduce using rule 106 (comma.opt)
    LBRACE     [reduce using rule 133 (plus_minus_negate.rep)]
    TILDE      reduce using rule 106 (comma.opt)
    TILDE      [reduce using rule 133 (plus_minus_negate.rep)]
    ELLIPSIS   reduce using rule 106 (comma.opt)
    ELLIPSIS   [reduce using rule 133 (plus_minus_negate.rep)]
    PYFALSE    reduce using rule 106 (comma.opt)
    PYFALSE    [reduce using rule 133 (plus_minus_negate.rep)]
    NONE       reduce using rule 106 (comma.opt)
    NONE       [reduce using rule 133 (plus_minus_negate.rep)]
    PYTRUE     reduce using rule 106 (comma.opt)
    PYTRUE     [reduce using rule 133 (plus_minus_negate.rep)]
    AWAIT      reduce using rule 106 (comma.opt)
    AWAIT      [reduce using rule 133 (plus_minus_negate.rep)]
    $default   reduce using rule 106 (comma.opt)

    star_expr              go to state 303
    expr                   go to state 304
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51


State 239

  101 exprlist: star_expr comma_and_expr_or_starexpr.rep comma.opt .

    $default  reduce using rule 101 (exprlist)


State 240

  100 exprlist: expr comma_and_expr_or_starexpr.rep comma.opt .

    $default  reduce using rule 100 (exprlist)


State 241

   94 dot_name.rep: dot_name.rep DOT . NAME

    NAME  shift, and go to state 305


State 242

   90 comma_dotted_as_name.rep: comma_dotted_as_name.rep COMMA . dotted_as_name
  106 comma.opt: COMMA .

    NAME  shift, and go to state 76

    NAME      [reduce using rule 106 (comma.opt)]
    $default  reduce using rule 106 (comma.opt)

    dotted_as_name  go to state 306
    dotted_name     go to state 79


State 243

   88 dotted_as_names: dotted_as_name comma_dotted_as_name.rep comma.opt .

    $default  reduce using rule 88 (dotted_as_names)


State 244

   96 as_name.opt: AS NAME .

    $default  reduce using rule 96 (as_name.opt)


State 245

  259 suite: NEWLINE INDENT . stmt stmt.rep DEDENT

    PYDEF     shift, and go to state 6
    IF        shift, and go to state 7
    RAISE     shift, and go to state 8
    DEL       shift, and go to state 9
    IMPORT    shift, and go to state 10
    RETURN    shift, and go to state 11
    TRY       shift, and go to state 12
    WHILE     shift, and go to state 13
    LAMBDA    shift, and go to state 14
    WITH      shift, and go to state 15
    ASSERT    shift, and go to state 16
    NONLOCAL  shift, and go to state 17
    YIELD     shift, and go to state 18
    BREAK     shift, and go to state 19
    FOR       shift, and go to state 20
    NOT       shift, and go to state 21
    FROM      shift, and go to state 22
    CONTINUE  shift, and go to state 23
    GLOBAL    shift, and go to state 24
    PASS      shift, and go to state 25

    $default  reduce using rule 133 (plus_minus_negate.rep)

    stmt                   go to state 307
    simple_stmt            go to state 27
    small_stmt             go to state 28
    del_stmt               go to state 29
    pass_stmt              go to state 30
    flow_stmt              go to state 31
    nonlocal_stmt          go to state 32
    assert_stmt            go to state 33
    expr_stmt              go to state 34
    break_stmt             go to state 35
    continue_stmt          go to state 36
    return_stmt            go to state 37
    raise_stmt             go to state 38
    yield_stmt             go to state 39
    import_stmt            go to state 40
    import_name            go to state 41
    import_from            go to state 42
    global_stmt            go to state 43
    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    yield_expr             go to state 52
    test                   go to state 53
    or_test                go to state 54
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57
    testlist_star_expr     go to state 58
    lambdef                go to state 59
    compound_stmt          go to state 60
    if_stmt                go to state 61
    while_stmt             go to state 62
    for_stmt               go to state 63
    try_stmt               go to state 64
    with_stmt              go to state 65
    funcdef                go to state 66


State 246

  277 except_colon_suite_min_1: EXCEPT . COLON suite

    COLON  shift, and go to state 308


State 247

  275 try_stmt: TRY COLON suite FINALLY . COLON suite

    COLON  shift, and go to state 309


State 248

  276 try_stmt: TRY COLON suite except_colon_suite_min_1 . else_colon_suite.opt finally_colon_suite.opt
  278 except_colon_suite_min_1: except_colon_suite_min_1 . EXCEPT COLON suite

    ELSE    shift, and go to state 310
    EXCEPT  shift, and go to state 311

    $default  reduce using rule 279 (else_colon_suite.opt)

    else_colon_suite.opt  go to state 312


State 249

  266 while_stmt: WHILE namedexpr_test COLON suite . else_and_suite.opt

    ELSE  shift, and go to state 313

    $default  reduce using rule 267 (else_and_suite.opt)

    else_and_suite.opt  go to state 314


State 250

  250 lambdef: LAMBDA varargslist.opt COLON test .

    $default  reduce using rule 250 (lambdef)


State 251

  286 as_expr.opt: AS expr .

    $default  reduce using rule 286 (as_expr.opt)


State 252

  283 with_stmt: WITH with_item comma_with_item.rep COLON . type_comment.opt suite

    TYPE_COMMENT  shift, and go to state 295

    $default  reduce using rule 271 (type_comment.opt)

    type_comment.opt  go to state 315


State 253

  288 comma_with_item.rep: comma_with_item.rep COMMA . with_item

    LAMBDA  shift, and go to state 14
    NOT     shift, and go to state 21

    $default  reduce using rule 133 (plus_minus_negate.rep)

    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    test                   go to state 87
    or_test                go to state 54
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57
    lambdef                go to state 59
    with_item              go to state 316


State 254

   32 comma_test_opt: COMMA test .

    $default  reduce using rule 32 (comma_test_opt)


State 255

   63 comma_name.rep: comma_name.rep COMMA . NAME

    NAME  shift, and go to state 317


State 256

  269 for_stmt: FOR exprlist IN testlist . COLON type_comment.opt suite else_and_suite.opt

    COLON  shift, and go to state 318


State 257

   99 comma_and_name.rep: comma_and_name.rep COMMA . NAME

    NAME  shift, and go to state 319


State 258

   11 semi_and_small.rep: semi_and_small.rep SEMI small_stmt .

    $default  reduce using rule 11 (semi_and_small.rep)


State 259

    9 nl.opt: NEWLINE .

    $default  reduce using rule 9 (nl.opt)


State 260

    7 simple_stmt: small_stmt semi_and_small.rep semi.opt nl.opt .

    $default  reduce using rule 7 (simple_stmt)


State 261

  247 comp_op: IS NOT .

    $default  reduce using rule 247 (comp_op)


State 262

  245 comp_op: NOT IN .

    $default  reduce using rule 245 (comp_op)


State 263

  234 comp_op_and_expr.rep: comp_op_and_expr.rep comp_op expr .

    $default  reduce using rule 234 (comp_op_and_expr.rep)


State 264

  113 caret_and_and_expr.rep: caret_and_and_expr.rep CIRCUMFLEX and_expr .

    $default  reduce using rule 113 (caret_and_and_expr.rep)


State 265

  116 amp_and_shift_expr.rep: amp_and_shift_expr.rep AMPER shift_expr .

    $default  reduce using rule 116 (amp_and_shift_expr.rep)


State 266

  119 shift.rep: shift.rep LEFTSHIFT arith_expr .

    $default  reduce using rule 119 (shift.rep)


State 267

  120 shift.rep: shift.rep RIGHTSHIFT arith_expr .

    $default  reduce using rule 120 (shift.rep)


State 268

  123 pm_term.rep: pm_term.rep PLUS term .

    $default  reduce using rule 123 (pm_term.rep)


State 269

  124 pm_term.rep: pm_term.rep MINUS term .

    $default  reduce using rule 124 (pm_term.rep)


State 270

  127 factor.rep: factor.rep STAR factor .

    $default  reduce using rule 127 (factor.rep)


State 271

  129 factor.rep: factor.rep SLASH factor .

    $default  reduce using rule 129 (factor.rep)


State 272

  130 factor.rep: factor.rep PERCENT factor .

    $default  reduce using rule 130 (factor.rep)


State 273

  131 factor.rep: factor.rep DOUBLESLASH factor .

    $default  reduce using rule 131 (factor.rep)


State 274

  128 factor.rep: factor.rep AT factor .

    $default  reduce using rule 128 (factor.rep)


State 275

  139 exponentiation.opt: DOUBLESTAR factor .

    $default  reduce using rule 139 (exponentiation.opt)


State 276

  204 testlist_comp: star_expr . comp_for
  206              | star_expr . comma_and_named_or_star.rep comma.opt

    ASYNC  shift, and go to state 320

    FOR       reduce using rule 169 (async.opt)
    $default  reduce using rule 207 (comma_and_named_or_star.rep)

    comp_for                     go to state 321
    async.opt                    go to state 322
    comma_and_named_or_star.rep  go to state 323


State 277

  185 atom: LPAR yield_expr.opt . RPAR

    RPAR  shift, and go to state 324


State 278

  186 atom: LPAR testlist_comp.opt . RPAR

    RPAR  shift, and go to state 325


State 279

  202 testlist_comp.opt: testlist_comp .

    $default  reduce using rule 202 (testlist_comp.opt)


State 280

  203 testlist_comp: namedexpr_test . comp_for
  205              | namedexpr_test . comma_and_named_or_star.rep comma.opt

    ASYNC  shift, and go to state 320

    FOR       reduce using rule 169 (async.opt)
    $default  reduce using rule 207 (comma_and_named_or_star.rep)

    comp_for                     go to state 326
    async.opt                    go to state 322
    comma_and_named_or_star.rep  go to state 327


State 281

  200 yield_expr.opt: yield_expr .

    $default  reduce using rule 200 (yield_expr.opt)


State 282

  187 atom: LSQB testlist_comp.opt . RSQB

    RSQB  shift, and go to state 328


State 283

  215 dictorsetmaker: EMPTY .

    $default  reduce using rule 215 (dictorsetmaker)


State 284

  188 atom: LBRACE dictorsetmaker.opt . RBRACE

    RBRACE  shift, and go to state 329


State 285

  214 dictorsetmaker.opt: dictorsetmaker .

    $default  reduce using rule 214 (dictorsetmaker.opt)


State 286

  140 atom_expr: await.opt atom trailer.rep .
  144 trailer.rep: trailer.rep . trailer

    LPAR  shift, and go to state 330
    LSQB  shift, and go to state 331
    DOT   shift, and go to state 332

    LPAR      [reduce using rule 140 (atom_expr)]
    LSQB      [reduce using rule 140 (atom_expr)]
    $default  reduce using rule 140 (atom_expr)

    trailer  go to state 333


State 287

  198 string_min_1: string_min_1 STRINGLIT .

    $default  reduce using rule 198 (string_min_1)


State 288

  237 comma_and_test_or_star_expr.rep: comma_and_test_or_star_expr.rep COMMA star_expr .

    $default  reduce using rule 237 (comma_and_test_or_star_expr.rep)


State 289

  236 comma_and_test_or_star_expr.rep: comma_and_test_or_star_expr.rep COMMA test .

    $default  reduce using rule 236 (comma_and_test_or_star_expr.rep)


State 290

  249 cond.opt: IF or_test ELSE . test

    LAMBDA  shift, and go to state 14
    NOT     shift, and go to state 21

    $default  reduce using rule 133 (plus_minus_negate.rep)

    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    test                   go to state 334
    or_test                go to state 54
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57
    lambdef                go to state 59


State 291

  225 or_and_and_test.rep: or_and_and_test.rep OR and_test .

    $default  reduce using rule 225 (or_and_and_test.rep)


State 292

  231 and_and_not_test.rep: and_and_not_test.rep AND not_test .

    $default  reduce using rule 231 (and_and_not_test.rep)


State 293

   47 equals_yield_expr_or_testlist_star_expr.opt: EQUAL . yield_expr
   48                                            | EQUAL . testlist_star_expr

    LAMBDA  shift, and go to state 14
    YIELD   shift, and go to state 18
    NOT     shift, and go to state 21

    $default  reduce using rule 133 (plus_minus_negate.rep)

    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    yield_expr             go to state 335
    test                   go to state 53
    or_test                go to state 54
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57
    testlist_star_expr     go to state 336
    lambdef                go to state 59


State 294

   45 annassign: COLON test equals_yield_expr_or_testlist_star_expr.opt .

    $default  reduce using rule 45 (annassign)


State 295

  272 type_comment.opt: TYPE_COMMENT .

    $default  reduce using rule 272 (type_comment.opt)


State 296

   42 yield_expr_or_testlist_star_expr_min_1: yield_expr_or_testlist_star_expr_min_1 yield_or_testlist_star_expr .

    $default  reduce using rule 42 (yield_expr_or_testlist_star_expr_min_1)


State 297

   40 yield_test_type.opt: EQUAL yield_expr_or_testlist_star_expr_min_1 type_comment.opt .

    $default  reduce using rule 40 (yield_test_type.opt)


State 298

  270 testlist: test comma_and_test.rep . comma.opt
  274 comma_and_test.rep: comma_and_test.rep . COMMA test

    COMMA  shift, and go to state 337

    $default  reduce using rule 105 (comma.opt)

    comma.opt  go to state 338


State 299

  290 parameters: LPAR typedargslist.opt RPAR .

    $default  reduce using rule 290 (parameters)


State 300

  294 rarrow_test.opt: RARROW test .

    $default  reduce using rule 294 (rarrow_test.opt)


State 301

  289 funcdef: PYDEF NAME parameters rarrow_test.opt COLON . type_comment.opt func_body_suite

    TYPE_COMMENT  shift, and go to state 295

    $default  reduce using rule 271 (type_comment.opt)

    type_comment.opt  go to state 339


State 302

  257 if_stmt: IF namedexpr_test COLON suite elif_and_named_colon_suite.rep . else_and_colon_suite.opt
  263 elif_and_named_colon_suite.rep: elif_and_named_colon_suite.rep . ELIF namedexpr_test COLON suite

    ELIF  shift, and go to state 340
    ELSE  shift, and go to state 341

    $default  reduce using rule 264 (else_and_colon_suite.opt)

    else_and_colon_suite.opt  go to state 342


State 303

  104 comma_and_expr_or_starexpr.rep: comma_and_expr_or_starexpr.rep COMMA star_expr .

    $default  reduce using rule 104 (comma_and_expr_or_starexpr.rep)


State 304

  103 comma_and_expr_or_starexpr.rep: comma_and_expr_or_starexpr.rep COMMA expr .

    $default  reduce using rule 103 (comma_and_expr_or_starexpr.rep)


State 305

   94 dot_name.rep: dot_name.rep DOT NAME .

    $default  reduce using rule 94 (dot_name.rep)


State 306

   90 comma_dotted_as_name.rep: comma_dotted_as_name.rep COMMA dotted_as_name .

    $default  reduce using rule 90 (comma_dotted_as_name.rep)


State 307

  259 suite: NEWLINE INDENT stmt . stmt.rep DEDENT

    $default  reduce using rule 260 (stmt.rep)

    stmt.rep  go to state 343


State 308

  277 except_colon_suite_min_1: EXCEPT COLON . suite

    NEWLINE   shift, and go to state 158
    RAISE     shift, and go to state 8
    DEL       shift, and go to state 9
    IMPORT    shift, and go to state 10
    RETURN    shift, and go to state 11
    LAMBDA    shift, and go to state 14
    ASSERT    shift, and go to state 16
    NONLOCAL  shift, and go to state 17
    YIELD     shift, and go to state 18
    BREAK     shift, and go to state 19
    NOT       shift, and go to state 21
    FROM      shift, and go to state 22
    CONTINUE  shift, and go to state 23
    GLOBAL    shift, and go to state 24
    PASS      shift, and go to state 25

    $default  reduce using rule 133 (plus_minus_negate.rep)

    simple_stmt            go to state 159
    small_stmt             go to state 28
    del_stmt               go to state 29
    pass_stmt              go to state 30
    flow_stmt              go to state 31
    nonlocal_stmt          go to state 32
    assert_stmt            go to state 33
    expr_stmt              go to state 34
    break_stmt             go to state 35
    continue_stmt          go to state 36
    return_stmt            go to state 37
    raise_stmt             go to state 38
    yield_stmt             go to state 39
    import_stmt            go to state 40
    import_name            go to state 41
    import_from            go to state 42
    global_stmt            go to state 43
    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    yield_expr             go to state 52
    test                   go to state 53
    or_test                go to state 54
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57
    testlist_star_expr     go to state 58
    lambdef                go to state 59
    suite                  go to state 344


State 309

  275 try_stmt: TRY COLON suite FINALLY COLON . suite

    NEWLINE   shift, and go to state 158
    RAISE     shift, and go to state 8
    DEL       shift, and go to state 9
    IMPORT    shift, and go to state 10
    RETURN    shift, and go to state 11
    LAMBDA    shift, and go to state 14
    ASSERT    shift, and go to state 16
    NONLOCAL  shift, and go to state 17
    YIELD     shift, and go to state 18
    BREAK     shift, and go to state 19
    NOT       shift, and go to state 21
    FROM      shift, and go to state 22
    CONTINUE  shift, and go to state 23
    GLOBAL    shift, and go to state 24
    PASS      shift, and go to state 25

    $default  reduce using rule 133 (plus_minus_negate.rep)

    simple_stmt            go to state 159
    small_stmt             go to state 28
    del_stmt               go to state 29
    pass_stmt              go to state 30
    flow_stmt              go to state 31
    nonlocal_stmt          go to state 32
    assert_stmt            go to state 33
    expr_stmt              go to state 34
    break_stmt             go to state 35
    continue_stmt          go to state 36
    return_stmt            go to state 37
    raise_stmt             go to state 38
    yield_stmt             go to state 39
    import_stmt            go to state 40
    import_name            go to state 41
    import_from            go to state 42
    global_stmt            go to state 43
    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    yield_expr             go to state 52
    test                   go to state 53
    or_test                go to state 54
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57
    testlist_star_expr     go to state 58
    lambdef                go to state 59
    suite                  go to state 345


State 310

  280 else_colon_suite.opt: ELSE . COLON suite

    COLON  shift, and go to state 346


State 311

  278 except_colon_suite_min_1: except_colon_suite_min_1 EXCEPT . COLON suite

    COLON  shift, and go to state 347


State 312

  276 try_stmt: TRY COLON suite except_colon_suite_min_1 else_colon_suite.opt . finally_colon_suite.opt

    FINALLY  shift, and go to state 348

    $default  reduce using rule 281 (finally_colon_suite.opt)

    finally_colon_suite.opt  go to state 349


State 313

  268 else_and_suite.opt: ELSE . COLON suite

    COLON  shift, and go to state 350


State 314

  266 while_stmt: WHILE namedexpr_test COLON suite else_and_suite.opt .

    $default  reduce using rule 266 (while_stmt)


State 315

  283 with_stmt: WITH with_item comma_with_item.rep COLON type_comment.opt . suite

    NEWLINE   shift, and go to state 158
    RAISE     shift, and go to state 8
    DEL       shift, and go to state 9
    IMPORT    shift, and go to state 10
    RETURN    shift, and go to state 11
    LAMBDA    shift, and go to state 14
    ASSERT    shift, and go to state 16
    NONLOCAL  shift, and go to state 17
    YIELD     shift, and go to state 18
    BREAK     shift, and go to state 19
    NOT       shift, and go to state 21
    FROM      shift, and go to state 22
    CONTINUE  shift, and go to state 23
    GLOBAL    shift, and go to state 24
    PASS      shift, and go to state 25

    $default  reduce using rule 133 (plus_minus_negate.rep)

    simple_stmt            go to state 159
    small_stmt             go to state 28
    del_stmt               go to state 29
    pass_stmt              go to state 30
    flow_stmt              go to state 31
    nonlocal_stmt          go to state 32
    assert_stmt            go to state 33
    expr_stmt              go to state 34
    break_stmt             go to state 35
    continue_stmt          go to state 36
    return_stmt            go to state 37
    raise_stmt             go to state 38
    yield_stmt             go to state 39
    import_stmt            go to state 40
    import_name            go to state 41
    import_from            go to state 42
    global_stmt            go to state 43
    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    yield_expr             go to state 52
    test                   go to state 53
    or_test                go to state 54
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57
    testlist_star_expr     go to state 58
    lambdef                go to state 59
    suite                  go to state 351


State 316

  288 comma_with_item.rep: comma_with_item.rep COMMA with_item .

    $default  reduce using rule 288 (comma_with_item.rep)


State 317

   63 comma_name.rep: comma_name.rep COMMA NAME .

    $default  reduce using rule 63 (comma_name.rep)


State 318

  269 for_stmt: FOR exprlist IN testlist COLON . type_comment.opt suite else_and_suite.opt

    TYPE_COMMENT  shift, and go to state 295

    $default  reduce using rule 271 (type_comment.opt)

    type_comment.opt  go to state 352


State 319

   99 comma_and_name.rep: comma_and_name.rep COMMA NAME .

    $default  reduce using rule 99 (comma_and_name.rep)


State 320

  170 async.opt: ASYNC .

    $default  reduce using rule 170 (async.opt)


State 321

  204 testlist_comp: star_expr comp_for .

    $default  reduce using rule 204 (testlist_comp)


State 322

  168 comp_for: async.opt . sync_comp_for

    FOR  shift, and go to state 353

    sync_comp_for  go to state 354


State 323

  206 testlist_comp: star_expr comma_and_named_or_star.rep . comma.opt
  208 comma_and_named_or_star.rep: comma_and_named_or_star.rep . COMMA namedexpr_test
  209                            | comma_and_named_or_star.rep . COMMA star_expr

    COMMA  shift, and go to state 355

    $default  reduce using rule 105 (comma.opt)

    comma.opt  go to state 356


State 324

  185 atom: LPAR yield_expr.opt RPAR .

    $default  reduce using rule 185 (atom)


State 325

  186 atom: LPAR testlist_comp.opt RPAR .

    $default  reduce using rule 186 (atom)


State 326

  203 testlist_comp: namedexpr_test comp_for .

    $default  reduce using rule 203 (testlist_comp)


State 327

  205 testlist_comp: namedexpr_test comma_and_named_or_star.rep . comma.opt
  208 comma_and_named_or_star.rep: comma_and_named_or_star.rep . COMMA namedexpr_test
  209                            | comma_and_named_or_star.rep . COMMA star_expr

    COMMA  shift, and go to state 355

    $default  reduce using rule 105 (comma.opt)

    comma.opt  go to state 357


State 328

  187 atom: LSQB testlist_comp.opt RSQB .

    $default  reduce using rule 187 (atom)


State 329

  188 atom: LBRACE dictorsetmaker.opt RBRACE .

    $default  reduce using rule 188 (atom)


State 330

  145 trailer: LPAR . arglist.opt RPAR

    STAR        shift, and go to state 358
    DOUBLESTAR  shift, and go to state 359
    LAMBDA      shift, and go to state 14
    NOT         shift, and go to state 21

    RPAR      reduce using rule 148 (arglist.opt)
    $default  reduce using rule 133 (plus_minus_negate.rep)

    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    arglist.opt            go to state 360
    arglist                go to state 361
    argument               go to state 362
    test                   go to state 363
    or_test                go to state 54
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57
    lambdef                go to state 59


State 331

  146 trailer: LSQB . subscriptlist RSQB

    LAMBDA  shift, and go to state 14
    NOT     shift, and go to state 21

    COLON     reduce using rule 154 (test.opt)
    $default  reduce using rule 133 (plus_minus_negate.rep)

    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    subscriptlist          go to state 364
    subscript              go to state 365
    test.opt               go to state 366
    test                   go to state 367
    or_test                go to state 54
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57
    lambdef                go to state 59


State 332

  147 trailer: DOT . NAME

    NAME  shift, and go to state 368


State 333

  144 trailer.rep: trailer.rep trailer .

    $default  reduce using rule 144 (trailer.rep)


State 334

  249 cond.opt: IF or_test ELSE test .

    $default  reduce using rule 249 (cond.opt)


State 335

   47 equals_yield_expr_or_testlist_star_expr.opt: EQUAL yield_expr .

    $default  reduce using rule 47 (equals_yield_expr_or_testlist_star_expr.opt)


State 336

   48 equals_yield_expr_or_testlist_star_expr.opt: EQUAL testlist_star_expr .

    $default  reduce using rule 48 (equals_yield_expr_or_testlist_star_expr.opt)


State 337

  106 comma.opt: COMMA .
  274 comma_and_test.rep: comma_and_test.rep COMMA . test

    LAMBDA  shift, and go to state 14
    NOT     shift, and go to state 21

    FLOATLIT   reduce using rule 106 (comma.opt)
    FLOATLIT   [reduce using rule 133 (plus_minus_negate.rep)]
    NAME       reduce using rule 106 (comma.opt)
    NAME       [reduce using rule 133 (plus_minus_negate.rep)]
    INTLIT     reduce using rule 106 (comma.opt)
    INTLIT     [reduce using rule 133 (plus_minus_negate.rep)]
    STRINGLIT  reduce using rule 106 (comma.opt)
    STRINGLIT  [reduce using rule 133 (plus_minus_negate.rep)]
    LPAR       reduce using rule 106 (comma.opt)
    LPAR       [reduce using rule 133 (plus_minus_negate.rep)]
    LSQB       reduce using rule 106 (comma.opt)
    LSQB       [reduce using rule 133 (plus_minus_negate.rep)]
    PLUS       reduce using rule 106 (comma.opt)
    PLUS       [reduce using rule 133 (plus_minus_negate.rep)]
    MINUS      reduce using rule 106 (comma.opt)
    MINUS      [reduce using rule 133 (plus_minus_negate.rep)]
    LBRACE     reduce using rule 106 (comma.opt)
    LBRACE     [reduce using rule 133 (plus_minus_negate.rep)]
    TILDE      reduce using rule 106 (comma.opt)
    TILDE      [reduce using rule 133 (plus_minus_negate.rep)]
    ELLIPSIS   reduce using rule 106 (comma.opt)
    ELLIPSIS   [reduce using rule 133 (plus_minus_negate.rep)]
    PYFALSE    reduce using rule 106 (comma.opt)
    PYFALSE    [reduce using rule 133 (plus_minus_negate.rep)]
    NONE       reduce using rule 106 (comma.opt)
    NONE       [reduce using rule 133 (plus_minus_negate.rep)]
    PYTRUE     reduce using rule 106 (comma.opt)
    PYTRUE     [reduce using rule 133 (plus_minus_negate.rep)]
    LAMBDA     [reduce using rule 106 (comma.opt)]
    NOT        [reduce using rule 106 (comma.opt)]
    AWAIT      reduce using rule 106 (comma.opt)
    AWAIT      [reduce using rule 133 (plus_minus_negate.rep)]
    $default   reduce using rule 106 (comma.opt)

    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    test                   go to state 369
    or_test                go to state 54
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57
    lambdef                go to state 59


State 338

  270 testlist: test comma_and_test.rep comma.opt .

    $default  reduce using rule 270 (testlist)


State 339

  289 funcdef: PYDEF NAME parameters rarrow_test.opt COLON type_comment.opt . func_body_suite

    NEWLINE   shift, and go to state 370
    RAISE     shift, and go to state 8
    DEL       shift, and go to state 9
    IMPORT    shift, and go to state 10
    RETURN    shift, and go to state 11
    LAMBDA    shift, and go to state 14
    ASSERT    shift, and go to state 16
    NONLOCAL  shift, and go to state 17
    YIELD     shift, and go to state 18
    BREAK     shift, and go to state 19
    NOT       shift, and go to state 21
    FROM      shift, and go to state 22
    CONTINUE  shift, and go to state 23
    GLOBAL    shift, and go to state 24
    PASS      shift, and go to state 25

    $default  reduce using rule 133 (plus_minus_negate.rep)

    simple_stmt            go to state 371
    small_stmt             go to state 28
    del_stmt               go to state 29
    pass_stmt              go to state 30
    flow_stmt              go to state 31
    nonlocal_stmt          go to state 32
    assert_stmt            go to state 33
    expr_stmt              go to state 34
    break_stmt             go to state 35
    continue_stmt          go to state 36
    return_stmt            go to state 37
    raise_stmt             go to state 38
    yield_stmt             go to state 39
    import_stmt            go to state 40
    import_name            go to state 41
    import_from            go to state 42
    global_stmt            go to state 43
    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    yield_expr             go to state 52
    test                   go to state 53
    or_test                go to state 54
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57
    testlist_star_expr     go to state 58
    lambdef                go to state 59
    func_body_suite        go to state 372


State 340

  263 elif_and_named_colon_suite.rep: elif_and_named_colon_suite.rep ELIF . namedexpr_test COLON suite

    LAMBDA  shift, and go to state 14
    NOT     shift, and go to state 21

    $default  reduce using rule 133 (plus_minus_negate.rep)

    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    namedexpr_test         go to state 373
    test                   go to state 69
    or_test                go to state 54
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57
    lambdef                go to state 59


State 341

  265 else_and_colon_suite.opt: ELSE . COLON suite

    COLON  shift, and go to state 374


State 342

  257 if_stmt: IF namedexpr_test COLON suite elif_and_named_colon_suite.rep else_and_colon_suite.opt .

    $default  reduce using rule 257 (if_stmt)


State 343

  259 suite: NEWLINE INDENT stmt stmt.rep . DEDENT
  261 stmt.rep: stmt.rep . stmt

    DEDENT    shift, and go to state 375
    PYDEF     shift, and go to state 6
    IF        shift, and go to state 7
    RAISE     shift, and go to state 8
    DEL       shift, and go to state 9
    IMPORT    shift, and go to state 10
    RETURN    shift, and go to state 11
    TRY       shift, and go to state 12
    WHILE     shift, and go to state 13
    LAMBDA    shift, and go to state 14
    WITH      shift, and go to state 15
    ASSERT    shift, and go to state 16
    NONLOCAL  shift, and go to state 17
    YIELD     shift, and go to state 18
    BREAK     shift, and go to state 19
    FOR       shift, and go to state 20
    NOT       shift, and go to state 21
    FROM      shift, and go to state 22
    CONTINUE  shift, and go to state 23
    GLOBAL    shift, and go to state 24
    PASS      shift, and go to state 25

    $default  reduce using rule 133 (plus_minus_negate.rep)

    stmt                   go to state 376
    simple_stmt            go to state 27
    small_stmt             go to state 28
    del_stmt               go to state 29
    pass_stmt              go to state 30
    flow_stmt              go to state 31
    nonlocal_stmt          go to state 32
    assert_stmt            go to state 33
    expr_stmt              go to state 34
    break_stmt             go to state 35
    continue_stmt          go to state 36
    return_stmt            go to state 37
    raise_stmt             go to state 38
    yield_stmt             go to state 39
    import_stmt            go to state 40
    import_name            go to state 41
    import_from            go to state 42
    global_stmt            go to state 43
    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    yield_expr             go to state 52
    test                   go to state 53
    or_test                go to state 54
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57
    testlist_star_expr     go to state 58
    lambdef                go to state 59
    compound_stmt          go to state 60
    if_stmt                go to state 61
    while_stmt             go to state 62
    for_stmt               go to state 63
    try_stmt               go to state 64
    with_stmt              go to state 65
    funcdef                go to state 66


State 344

  277 except_colon_suite_min_1: EXCEPT COLON suite .

    $default  reduce using rule 277 (except_colon_suite_min_1)


State 345

  275 try_stmt: TRY COLON suite FINALLY COLON suite .

    $default  reduce using rule 275 (try_stmt)


State 346

  280 else_colon_suite.opt: ELSE COLON . suite

    NEWLINE   shift, and go to state 158
    RAISE     shift, and go to state 8
    DEL       shift, and go to state 9
    IMPORT    shift, and go to state 10
    RETURN    shift, and go to state 11
    LAMBDA    shift, and go to state 14
    ASSERT    shift, and go to state 16
    NONLOCAL  shift, and go to state 17
    YIELD     shift, and go to state 18
    BREAK     shift, and go to state 19
    NOT       shift, and go to state 21
    FROM      shift, and go to state 22
    CONTINUE  shift, and go to state 23
    GLOBAL    shift, and go to state 24
    PASS      shift, and go to state 25

    $default  reduce using rule 133 (plus_minus_negate.rep)

    simple_stmt            go to state 159
    small_stmt             go to state 28
    del_stmt               go to state 29
    pass_stmt              go to state 30
    flow_stmt              go to state 31
    nonlocal_stmt          go to state 32
    assert_stmt            go to state 33
    expr_stmt              go to state 34
    break_stmt             go to state 35
    continue_stmt          go to state 36
    return_stmt            go to state 37
    raise_stmt             go to state 38
    yield_stmt             go to state 39
    import_stmt            go to state 40
    import_name            go to state 41
    import_from            go to state 42
    global_stmt            go to state 43
    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    yield_expr             go to state 52
    test                   go to state 53
    or_test                go to state 54
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57
    testlist_star_expr     go to state 58
    lambdef                go to state 59
    suite                  go to state 377


State 347

  278 except_colon_suite_min_1: except_colon_suite_min_1 EXCEPT COLON . suite

    NEWLINE   shift, and go to state 158
    RAISE     shift, and go to state 8
    DEL       shift, and go to state 9
    IMPORT    shift, and go to state 10
    RETURN    shift, and go to state 11
    LAMBDA    shift, and go to state 14
    ASSERT    shift, and go to state 16
    NONLOCAL  shift, and go to state 17
    YIELD     shift, and go to state 18
    BREAK     shift, and go to state 19
    NOT       shift, and go to state 21
    FROM      shift, and go to state 22
    CONTINUE  shift, and go to state 23
    GLOBAL    shift, and go to state 24
    PASS      shift, and go to state 25

    $default  reduce using rule 133 (plus_minus_negate.rep)

    simple_stmt            go to state 159
    small_stmt             go to state 28
    del_stmt               go to state 29
    pass_stmt              go to state 30
    flow_stmt              go to state 31
    nonlocal_stmt          go to state 32
    assert_stmt            go to state 33
    expr_stmt              go to state 34
    break_stmt             go to state 35
    continue_stmt          go to state 36
    return_stmt            go to state 37
    raise_stmt             go to state 38
    yield_stmt             go to state 39
    import_stmt            go to state 40
    import_name            go to state 41
    import_from            go to state 42
    global_stmt            go to state 43
    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    yield_expr             go to state 52
    test                   go to state 53
    or_test                go to state 54
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57
    testlist_star_expr     go to state 58
    lambdef                go to state 59
    suite                  go to state 378


State 348

  282 finally_colon_suite.opt: FINALLY . COLON suite

    COLON  shift, and go to state 379


State 349

  276 try_stmt: TRY COLON suite except_colon_suite_min_1 else_colon_suite.opt finally_colon_suite.opt .

    $default  reduce using rule 276 (try_stmt)


State 350

  268 else_and_suite.opt: ELSE COLON . suite

    NEWLINE   shift, and go to state 158
    RAISE     shift, and go to state 8
    DEL       shift, and go to state 9
    IMPORT    shift, and go to state 10
    RETURN    shift, and go to state 11
    LAMBDA    shift, and go to state 14
    ASSERT    shift, and go to state 16
    NONLOCAL  shift, and go to state 17
    YIELD     shift, and go to state 18
    BREAK     shift, and go to state 19
    NOT       shift, and go to state 21
    FROM      shift, and go to state 22
    CONTINUE  shift, and go to state 23
    GLOBAL    shift, and go to state 24
    PASS      shift, and go to state 25

    $default  reduce using rule 133 (plus_minus_negate.rep)

    simple_stmt            go to state 159
    small_stmt             go to state 28
    del_stmt               go to state 29
    pass_stmt              go to state 30
    flow_stmt              go to state 31
    nonlocal_stmt          go to state 32
    assert_stmt            go to state 33
    expr_stmt              go to state 34
    break_stmt             go to state 35
    continue_stmt          go to state 36
    return_stmt            go to state 37
    raise_stmt             go to state 38
    yield_stmt             go to state 39
    import_stmt            go to state 40
    import_name            go to state 41
    import_from            go to state 42
    global_stmt            go to state 43
    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    yield_expr             go to state 52
    test                   go to state 53
    or_test                go to state 54
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57
    testlist_star_expr     go to state 58
    lambdef                go to state 59
    suite                  go to state 380


State 351

  283 with_stmt: WITH with_item comma_with_item.rep COLON type_comment.opt suite .

    $default  reduce using rule 283 (with_stmt)


State 352

  269 for_stmt: FOR exprlist IN testlist COLON type_comment.opt . suite else_and_suite.opt

    NEWLINE   shift, and go to state 158
    RAISE     shift, and go to state 8
    DEL       shift, and go to state 9
    IMPORT    shift, and go to state 10
    RETURN    shift, and go to state 11
    LAMBDA    shift, and go to state 14
    ASSERT    shift, and go to state 16
    NONLOCAL  shift, and go to state 17
    YIELD     shift, and go to state 18
    BREAK     shift, and go to state 19
    NOT       shift, and go to state 21
    FROM      shift, and go to state 22
    CONTINUE  shift, and go to state 23
    GLOBAL    shift, and go to state 24
    PASS      shift, and go to state 25

    $default  reduce using rule 133 (plus_minus_negate.rep)

    simple_stmt            go to state 159
    small_stmt             go to state 28
    del_stmt               go to state 29
    pass_stmt              go to state 30
    flow_stmt              go to state 31
    nonlocal_stmt          go to state 32
    assert_stmt            go to state 33
    expr_stmt              go to state 34
    break_stmt             go to state 35
    continue_stmt          go to state 36
    return_stmt            go to state 37
    raise_stmt             go to state 38
    yield_stmt             go to state 39
    import_stmt            go to state 40
    import_name            go to state 41
    import_from            go to state 42
    global_stmt            go to state 43
    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    yield_expr             go to state 52
    test                   go to state 53
    or_test                go to state 54
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57
    testlist_star_expr     go to state 58
    lambdef                go to state 59
    suite                  go to state 381


State 353

  171 sync_comp_for: FOR . exprlist IN or_test comp_iter.opt

    STAR  shift, and go to state 72

    $default  reduce using rule 133 (plus_minus_negate.rep)

    exprlist               go to state 382
    star_expr              go to state 74
    expr                   go to state 75
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51


State 354

  168 comp_for: async.opt sync_comp_for .

    $default  reduce using rule 168 (comp_for)


State 355

  106 comma.opt: COMMA .
  208 comma_and_named_or_star.rep: comma_and_named_or_star.rep COMMA . namedexpr_test
  209                            | comma_and_named_or_star.rep COMMA . star_expr

    STAR    shift, and go to state 72
    LAMBDA  shift, and go to state 14
    NOT     shift, and go to state 21

    RPAR      reduce using rule 106 (comma.opt)
    RSQB      reduce using rule 106 (comma.opt)
    $default  reduce using rule 133 (plus_minus_negate.rep)

    star_expr              go to state 383
    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    namedexpr_test         go to state 384
    test                   go to state 69
    or_test                go to state 54
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57
    lambdef                go to state 59


State 356

  206 testlist_comp: star_expr comma_and_named_or_star.rep comma.opt .

    $default  reduce using rule 206 (testlist_comp)


State 357

  205 testlist_comp: namedexpr_test comma_and_named_or_star.rep comma.opt .

    $default  reduce using rule 205 (testlist_comp)


State 358

  165 argument: STAR . test

    LAMBDA  shift, and go to state 14
    NOT     shift, and go to state 21

    $default  reduce using rule 133 (plus_minus_negate.rep)

    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    test                   go to state 385
    or_test                go to state 54
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57
    lambdef                go to state 59


State 359

  164 argument: DOUBLESTAR . test

    LAMBDA  shift, and go to state 14
    NOT     shift, and go to state 21

    $default  reduce using rule 133 (plus_minus_negate.rep)

    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    test                   go to state 386
    or_test                go to state 54
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57
    lambdef                go to state 59


State 360

  145 trailer: LPAR arglist.opt . RPAR

    RPAR  shift, and go to state 387


State 361

  149 arglist.opt: arglist .

    $default  reduce using rule 149 (arglist.opt)


State 362

  150 arglist: argument . comma_and_arg.rep comma.opt

    $default  reduce using rule 183 (comma_and_arg.rep)

    comma_and_arg.rep  go to state 388


State 363

  161 argument: test . comp_for.opt
  162         | test . COLONEQUAL test
  163         | test . EQUAL test

    EQUAL       shift, and go to state 389
    COLONEQUAL  shift, and go to state 390

    $default  reduce using rule 166 (comp_for.opt)

    comp_for.opt  go to state 391


State 364

  146 trailer: LSQB subscriptlist . RSQB

    RSQB  shift, and go to state 392


State 365

  151 subscriptlist: subscript . comma_and_subscript.rep comma.opt

    $default  reduce using rule 159 (comma_and_subscript.rep)

    comma_and_subscript.rep  go to state 393


State 366

  153 subscript: test.opt . COLON test.opt sliceop.opt

    COLON  shift, and go to state 394


State 367

  152 subscript: test .
  155 test.opt: test .

    COLON     reduce using rule 155 (test.opt)
    $default  reduce using rule 152 (subscript)


State 368

  147 trailer: DOT NAME .

    $default  reduce using rule 147 (trailer)


State 369

  274 comma_and_test.rep: comma_and_test.rep COMMA test .

    $default  reduce using rule 274 (comma_and_test.rep)


State 370

  301 func_body_suite: NEWLINE . $@1 type_comment_nl.opt $@2 INDENT $@3 stmt stmt.rep $@4 DEDENT

    $default  reduce using rule 297 ($@1)

    $@1  go to state 395


State 371

  296 func_body_suite: simple_stmt .

    $default  reduce using rule 296 (func_body_suite)


State 372

  289 funcdef: PYDEF NAME parameters rarrow_test.opt COLON type_comment.opt func_body_suite .

    $default  reduce using rule 289 (funcdef)


State 373

  263 elif_and_named_colon_suite.rep: elif_and_named_colon_suite.rep ELIF namedexpr_test . COLON suite

    COLON  shift, and go to state 396


State 374

  265 else_and_colon_suite.opt: ELSE COLON . suite

    NEWLINE   shift, and go to state 158
    RAISE     shift, and go to state 8
    DEL       shift, and go to state 9
    IMPORT    shift, and go to state 10
    RETURN    shift, and go to state 11
    LAMBDA    shift, and go to state 14
    ASSERT    shift, and go to state 16
    NONLOCAL  shift, and go to state 17
    YIELD     shift, and go to state 18
    BREAK     shift, and go to state 19
    NOT       shift, and go to state 21
    FROM      shift, and go to state 22
    CONTINUE  shift, and go to state 23
    GLOBAL    shift, and go to state 24
    PASS      shift, and go to state 25

    $default  reduce using rule 133 (plus_minus_negate.rep)

    simple_stmt            go to state 159
    small_stmt             go to state 28
    del_stmt               go to state 29
    pass_stmt              go to state 30
    flow_stmt              go to state 31
    nonlocal_stmt          go to state 32
    assert_stmt            go to state 33
    expr_stmt              go to state 34
    break_stmt             go to state 35
    continue_stmt          go to state 36
    return_stmt            go to state 37
    raise_stmt             go to state 38
    yield_stmt             go to state 39
    import_stmt            go to state 40
    import_name            go to state 41
    import_from            go to state 42
    global_stmt            go to state 43
    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    yield_expr             go to state 52
    test                   go to state 53
    or_test                go to state 54
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57
    testlist_star_expr     go to state 58
    lambdef                go to state 59
    suite                  go to state 397


State 375

  259 suite: NEWLINE INDENT stmt stmt.rep DEDENT .

    $default  reduce using rule 259 (suite)


State 376

  261 stmt.rep: stmt.rep stmt .

    $default  reduce using rule 261 (stmt.rep)


State 377

  280 else_colon_suite.opt: ELSE COLON suite .

    $default  reduce using rule 280 (else_colon_suite.opt)


State 378

  278 except_colon_suite_min_1: except_colon_suite_min_1 EXCEPT COLON suite .

    $default  reduce using rule 278 (except_colon_suite_min_1)


State 379

  282 finally_colon_suite.opt: FINALLY COLON . suite

    NEWLINE   shift, and go to state 158
    RAISE     shift, and go to state 8
    DEL       shift, and go to state 9
    IMPORT    shift, and go to state 10
    RETURN    shift, and go to state 11
    LAMBDA    shift, and go to state 14
    ASSERT    shift, and go to state 16
    NONLOCAL  shift, and go to state 17
    YIELD     shift, and go to state 18
    BREAK     shift, and go to state 19
    NOT       shift, and go to state 21
    FROM      shift, and go to state 22
    CONTINUE  shift, and go to state 23
    GLOBAL    shift, and go to state 24
    PASS      shift, and go to state 25

    $default  reduce using rule 133 (plus_minus_negate.rep)

    simple_stmt            go to state 159
    small_stmt             go to state 28
    del_stmt               go to state 29
    pass_stmt              go to state 30
    flow_stmt              go to state 31
    nonlocal_stmt          go to state 32
    assert_stmt            go to state 33
    expr_stmt              go to state 34
    break_stmt             go to state 35
    continue_stmt          go to state 36
    return_stmt            go to state 37
    raise_stmt             go to state 38
    yield_stmt             go to state 39
    import_stmt            go to state 40
    import_name            go to state 41
    import_from            go to state 42
    global_stmt            go to state 43
    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    yield_expr             go to state 52
    test                   go to state 53
    or_test                go to state 54
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57
    testlist_star_expr     go to state 58
    lambdef                go to state 59
    suite                  go to state 398


State 380

  268 else_and_suite.opt: ELSE COLON suite .

    $default  reduce using rule 268 (else_and_suite.opt)


State 381

  269 for_stmt: FOR exprlist IN testlist COLON type_comment.opt suite . else_and_suite.opt

    ELSE  shift, and go to state 313

    $default  reduce using rule 267 (else_and_suite.opt)

    else_and_suite.opt  go to state 399


State 382

  171 sync_comp_for: FOR exprlist . IN or_test comp_iter.opt

    IN  shift, and go to state 400


State 383

  209 comma_and_named_or_star.rep: comma_and_named_or_star.rep COMMA star_expr .

    $default  reduce using rule 209 (comma_and_named_or_star.rep)


State 384

  208 comma_and_named_or_star.rep: comma_and_named_or_star.rep COMMA namedexpr_test .

    $default  reduce using rule 208 (comma_and_named_or_star.rep)


State 385

  165 argument: STAR test .

    $default  reduce using rule 165 (argument)


State 386

  164 argument: DOUBLESTAR test .

    $default  reduce using rule 164 (argument)


State 387

  145 trailer: LPAR arglist.opt RPAR .

    $default  reduce using rule 145 (trailer)


State 388

  150 arglist: argument comma_and_arg.rep . comma.opt
  184 comma_and_arg.rep: comma_and_arg.rep . COMMA argument

    COMMA  shift, and go to state 401

    $default  reduce using rule 105 (comma.opt)

    comma.opt  go to state 402


State 389

  163 argument: test EQUAL . test

    LAMBDA  shift, and go to state 14
    NOT     shift, and go to state 21

    $default  reduce using rule 133 (plus_minus_negate.rep)

    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    test                   go to state 403
    or_test                go to state 54
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57
    lambdef                go to state 59


State 390

  162 argument: test COLONEQUAL . test

    LAMBDA  shift, and go to state 14
    NOT     shift, and go to state 21

    $default  reduce using rule 133 (plus_minus_negate.rep)

    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    test                   go to state 404
    or_test                go to state 54
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57
    lambdef                go to state 59


State 391

  161 argument: test comp_for.opt .
  167 comp_for.opt: comp_for.opt . comp_for

    ASYNC  shift, and go to state 320

    FOR       reduce using rule 169 (async.opt)
    $default  reduce using rule 161 (argument)

    comp_for   go to state 405
    async.opt  go to state 322


State 392

  146 trailer: LSQB subscriptlist RSQB .

    $default  reduce using rule 146 (trailer)


State 393

  151 subscriptlist: subscript comma_and_subscript.rep . comma.opt
  160 comma_and_subscript.rep: comma_and_subscript.rep . COMMA subscript

    COMMA  shift, and go to state 406

    $default  reduce using rule 105 (comma.opt)

    comma.opt  go to state 407


State 394

  153 subscript: test.opt COLON . test.opt sliceop.opt

    LAMBDA  shift, and go to state 14
    NOT     shift, and go to state 21

    RSQB      reduce using rule 154 (test.opt)
    COLON     reduce using rule 154 (test.opt)
    COMMA     reduce using rule 154 (test.opt)
    $default  reduce using rule 133 (plus_minus_negate.rep)

    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    test.opt               go to state 408
    test                   go to state 409
    or_test                go to state 54
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57
    lambdef                go to state 59


State 395

  301 func_body_suite: NEWLINE $@1 . type_comment_nl.opt $@2 INDENT $@3 stmt stmt.rep $@4 DEDENT

    TYPE_COMMENT  shift, and go to state 410

    $default  reduce using rule 302 (type_comment_nl.opt)

    type_comment_nl.opt  go to state 411


State 396

  263 elif_and_named_colon_suite.rep: elif_and_named_colon_suite.rep ELIF namedexpr_test COLON . suite

    NEWLINE   shift, and go to state 158
    RAISE     shift, and go to state 8
    DEL       shift, and go to state 9
    IMPORT    shift, and go to state 10
    RETURN    shift, and go to state 11
    LAMBDA    shift, and go to state 14
    ASSERT    shift, and go to state 16
    NONLOCAL  shift, and go to state 17
    YIELD     shift, and go to state 18
    BREAK     shift, and go to state 19
    NOT       shift, and go to state 21
    FROM      shift, and go to state 22
    CONTINUE  shift, and go to state 23
    GLOBAL    shift, and go to state 24
    PASS      shift, and go to state 25

    $default  reduce using rule 133 (plus_minus_negate.rep)

    simple_stmt            go to state 159
    small_stmt             go to state 28
    del_stmt               go to state 29
    pass_stmt              go to state 30
    flow_stmt              go to state 31
    nonlocal_stmt          go to state 32
    assert_stmt            go to state 33
    expr_stmt              go to state 34
    break_stmt             go to state 35
    continue_stmt          go to state 36
    return_stmt            go to state 37
    raise_stmt             go to state 38
    yield_stmt             go to state 39
    import_stmt            go to state 40
    import_name            go to state 41
    import_from            go to state 42
    global_stmt            go to state 43
    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    yield_expr             go to state 52
    test                   go to state 53
    or_test                go to state 54
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57
    testlist_star_expr     go to state 58
    lambdef                go to state 59
    suite                  go to state 412


State 397

  265 else_and_colon_suite.opt: ELSE COLON suite .

    $default  reduce using rule 265 (else_and_colon_suite.opt)


State 398

  282 finally_colon_suite.opt: FINALLY COLON suite .

    $default  reduce using rule 282 (finally_colon_suite.opt)


State 399

  269 for_stmt: FOR exprlist IN testlist COLON type_comment.opt suite else_and_suite.opt .

    $default  reduce using rule 269 (for_stmt)


State 400

  171 sync_comp_for: FOR exprlist IN . or_test comp_iter.opt

    NOT  shift, and go to state 21

    $default  reduce using rule 133 (plus_minus_negate.rep)

    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    or_test                go to state 413
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57


State 401

  106 comma.opt: COMMA .
  184 comma_and_arg.rep: comma_and_arg.rep COMMA . argument

    STAR        shift, and go to state 358
    DOUBLESTAR  shift, and go to state 359
    LAMBDA      shift, and go to state 14
    NOT         shift, and go to state 21

    RPAR      reduce using rule 106 (comma.opt)
    $default  reduce using rule 133 (plus_minus_negate.rep)

    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    argument               go to state 414
    test                   go to state 363
    or_test                go to state 54
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57
    lambdef                go to state 59


State 402

  150 arglist: argument comma_and_arg.rep comma.opt .

    $default  reduce using rule 150 (arglist)


State 403

  163 argument: test EQUAL test .

    $default  reduce using rule 163 (argument)


State 404

  162 argument: test COLONEQUAL test .

    $default  reduce using rule 162 (argument)


State 405

  167 comp_for.opt: comp_for.opt comp_for .

    $default  reduce using rule 167 (comp_for.opt)


State 406

  106 comma.opt: COMMA .
  160 comma_and_subscript.rep: comma_and_subscript.rep COMMA . subscript

    LAMBDA  shift, and go to state 14
    NOT     shift, and go to state 21

    RSQB      reduce using rule 106 (comma.opt)
    COLON     reduce using rule 154 (test.opt)
    $default  reduce using rule 133 (plus_minus_negate.rep)

    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    subscript              go to state 415
    test.opt               go to state 366
    test                   go to state 367
    or_test                go to state 54
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57
    lambdef                go to state 59


State 407

  151 subscriptlist: subscript comma_and_subscript.rep comma.opt .

    $default  reduce using rule 151 (subscriptlist)


State 408

  153 subscript: test.opt COLON test.opt . sliceop.opt

    COLON  shift, and go to state 416

    $default  reduce using rule 156 (sliceop.opt)

    sliceop.opt  go to state 417
    sliceop      go to state 418


State 409

  155 test.opt: test .

    $default  reduce using rule 155 (test.opt)


State 410

  303 type_comment_nl.opt: TYPE_COMMENT . NEWLINE

    NEWLINE  shift, and go to state 419


State 411

  301 func_body_suite: NEWLINE $@1 type_comment_nl.opt . $@2 INDENT $@3 stmt stmt.rep $@4 DEDENT

    $default  reduce using rule 298 ($@2)

    $@2  go to state 420


State 412

  263 elif_and_named_colon_suite.rep: elif_and_named_colon_suite.rep ELIF namedexpr_test COLON suite .

    $default  reduce using rule 263 (elif_and_named_colon_suite.rep)


State 413

  171 sync_comp_for: FOR exprlist IN or_test . comp_iter.opt

    IF     shift, and go to state 421
    ASYNC  shift, and go to state 320

    FOR       reduce using rule 169 (async.opt)
    FOR       [reduce using rule 172 (comp_iter.opt)]
    ASYNC     [reduce using rule 172 (comp_iter.opt)]
    $default  reduce using rule 172 (comp_iter.opt)

    comp_for       go to state 422
    async.opt      go to state 322
    comp_iter.opt  go to state 423
    comp_iter      go to state 424
    comp_if        go to state 425


State 414

  184 comma_and_arg.rep: comma_and_arg.rep COMMA argument .

    $default  reduce using rule 184 (comma_and_arg.rep)


State 415

  160 comma_and_subscript.rep: comma_and_subscript.rep COMMA subscript .

    $default  reduce using rule 160 (comma_and_subscript.rep)


State 416

  158 sliceop: COLON . test.opt

    LAMBDA  shift, and go to state 14
    NOT     shift, and go to state 21

    RSQB      reduce using rule 154 (test.opt)
    COMMA     reduce using rule 154 (test.opt)
    $default  reduce using rule 133 (plus_minus_negate.rep)

    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    test.opt               go to state 426
    test                   go to state 409
    or_test                go to state 54
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57
    lambdef                go to state 59


State 417

  153 subscript: test.opt COLON test.opt sliceop.opt .

    $default  reduce using rule 153 (subscript)


State 418

  157 sliceop.opt: sliceop .

    $default  reduce using rule 157 (sliceop.opt)


State 419

  303 type_comment_nl.opt: TYPE_COMMENT NEWLINE .

    $default  reduce using rule 303 (type_comment_nl.opt)


State 420

  301 func_body_suite: NEWLINE $@1 type_comment_nl.opt $@2 . INDENT $@3 stmt stmt.rep $@4 DEDENT

    INDENT  shift, and go to state 427


State 421

  176 comp_if: IF . test_nocond comp_iter.opt

    LAMBDA  shift, and go to state 428
    NOT     shift, and go to state 21

    $default  reduce using rule 133 (plus_minus_negate.rep)

    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    test_nocond            go to state 429
    lambdef_nocond         go to state 430
    or_test                go to state 431
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57


State 422

  174 comp_iter: comp_for .

    $default  reduce using rule 174 (comp_iter)


State 423

  171 sync_comp_for: FOR exprlist IN or_test comp_iter.opt .

    $default  reduce using rule 171 (sync_comp_for)


State 424

  173 comp_iter.opt: comp_iter .

    $default  reduce using rule 173 (comp_iter.opt)


State 425

  175 comp_iter: comp_if .

    $default  reduce using rule 175 (comp_iter)


State 426

  158 sliceop: COLON test.opt .

    $default  reduce using rule 158 (sliceop)


State 427

  301 func_body_suite: NEWLINE $@1 type_comment_nl.opt $@2 INDENT . $@3 stmt stmt.rep $@4 DEDENT

    $default  reduce using rule 299 ($@3)

    $@3  go to state 432


State 428

  179 lambdef_nocond: LAMBDA . varargslist.opt COLON test

    ENDMARKER  shift, and go to state 84

    $default  reduce using rule 180 (varargslist.opt)

    varargslist.opt  go to state 433
    varargslist      go to state 86


State 429

  176 comp_if: IF test_nocond . comp_iter.opt

    IF     shift, and go to state 421
    ASYNC  shift, and go to state 320

    FOR       reduce using rule 169 (async.opt)
    FOR       [reduce using rule 172 (comp_iter.opt)]
    ASYNC     [reduce using rule 172 (comp_iter.opt)]
    $default  reduce using rule 172 (comp_iter.opt)

    comp_for       go to state 422
    async.opt      go to state 322
    comp_iter.opt  go to state 434
    comp_iter      go to state 424
    comp_if        go to state 425


State 430

  178 test_nocond: lambdef_nocond .

    $default  reduce using rule 178 (test_nocond)


State 431

  177 test_nocond: or_test .

    $default  reduce using rule 177 (test_nocond)


State 432

  301 func_body_suite: NEWLINE $@1 type_comment_nl.opt $@2 INDENT $@3 . stmt stmt.rep $@4 DEDENT

    PYDEF     shift, and go to state 6
    IF        shift, and go to state 7
    RAISE     shift, and go to state 8
    DEL       shift, and go to state 9
    IMPORT    shift, and go to state 10
    RETURN    shift, and go to state 11
    TRY       shift, and go to state 12
    WHILE     shift, and go to state 13
    LAMBDA    shift, and go to state 14
    WITH      shift, and go to state 15
    ASSERT    shift, and go to state 16
    NONLOCAL  shift, and go to state 17
    YIELD     shift, and go to state 18
    BREAK     shift, and go to state 19
    FOR       shift, and go to state 20
    NOT       shift, and go to state 21
    FROM      shift, and go to state 22
    CONTINUE  shift, and go to state 23
    GLOBAL    shift, and go to state 24
    PASS      shift, and go to state 25

    $default  reduce using rule 133 (plus_minus_negate.rep)

    stmt                   go to state 435
    simple_stmt            go to state 27
    small_stmt             go to state 28
    del_stmt               go to state 29
    pass_stmt              go to state 30
    flow_stmt              go to state 31
    nonlocal_stmt          go to state 32
    assert_stmt            go to state 33
    expr_stmt              go to state 34
    break_stmt             go to state 35
    continue_stmt          go to state 36
    return_stmt            go to state 37
    raise_stmt             go to state 38
    yield_stmt             go to state 39
    import_stmt            go to state 40
    import_name            go to state 41
    import_from            go to state 42
    global_stmt            go to state 43
    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    yield_expr             go to state 52
    test                   go to state 53
    or_test                go to state 54
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57
    testlist_star_expr     go to state 58
    lambdef                go to state 59
    compound_stmt          go to state 60
    if_stmt                go to state 61
    while_stmt             go to state 62
    for_stmt               go to state 63
    try_stmt               go to state 64
    with_stmt              go to state 65
    funcdef                go to state 66


State 433

  179 lambdef_nocond: LAMBDA varargslist.opt . COLON test

    COLON  shift, and go to state 436


State 434

  176 comp_if: IF test_nocond comp_iter.opt .

    $default  reduce using rule 176 (comp_if)


State 435

  301 func_body_suite: NEWLINE $@1 type_comment_nl.opt $@2 INDENT $@3 stmt . stmt.rep $@4 DEDENT

    $default  reduce using rule 260 (stmt.rep)

    stmt.rep  go to state 437


State 436

  179 lambdef_nocond: LAMBDA varargslist.opt COLON . test

    LAMBDA  shift, and go to state 14
    NOT     shift, and go to state 21

    $default  reduce using rule 133 (plus_minus_negate.rep)

    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    test                   go to state 438
    or_test                go to state 54
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57
    lambdef                go to state 59


State 437

  261 stmt.rep: stmt.rep . stmt
  301 func_body_suite: NEWLINE $@1 type_comment_nl.opt $@2 INDENT $@3 stmt stmt.rep . $@4 DEDENT

    PYDEF     shift, and go to state 6
    IF        shift, and go to state 7
    RAISE     shift, and go to state 8
    DEL       shift, and go to state 9
    IMPORT    shift, and go to state 10
    RETURN    shift, and go to state 11
    TRY       shift, and go to state 12
    WHILE     shift, and go to state 13
    LAMBDA    shift, and go to state 14
    WITH      shift, and go to state 15
    ASSERT    shift, and go to state 16
    NONLOCAL  shift, and go to state 17
    YIELD     shift, and go to state 18
    BREAK     shift, and go to state 19
    FOR       shift, and go to state 20
    NOT       shift, and go to state 21
    FROM      shift, and go to state 22
    CONTINUE  shift, and go to state 23
    GLOBAL    shift, and go to state 24
    PASS      shift, and go to state 25

    DEDENT    reduce using rule 300 ($@4)
    $default  reduce using rule 133 (plus_minus_negate.rep)

    stmt                   go to state 376
    simple_stmt            go to state 27
    small_stmt             go to state 28
    del_stmt               go to state 29
    pass_stmt              go to state 30
    flow_stmt              go to state 31
    nonlocal_stmt          go to state 32
    assert_stmt            go to state 33
    expr_stmt              go to state 34
    break_stmt             go to state 35
    continue_stmt          go to state 36
    return_stmt            go to state 37
    raise_stmt             go to state 38
    yield_stmt             go to state 39
    import_stmt            go to state 40
    import_name            go to state 41
    import_from            go to state 42
    global_stmt            go to state 43
    expr                   go to state 44
    xor_expr               go to state 45
    and_expr               go to state 46
    shift_expr             go to state 47
    arith_expr             go to state 48
    term                   go to state 49
    factor                 go to state 50
    plus_minus_negate.rep  go to state 51
    yield_expr             go to state 52
    test                   go to state 53
    or_test                go to state 54
    and_test               go to state 55
    not_test               go to state 56
    comparison             go to state 57
    testlist_star_expr     go to state 58
    lambdef                go to state 59
    compound_stmt          go to state 60
    if_stmt                go to state 61
    while_stmt             go to state 62
    for_stmt               go to state 63
    try_stmt               go to state 64
    with_stmt              go to state 65
    funcdef                go to state 66
    $@4                    go to state 439


State 438

  179 lambdef_nocond: LAMBDA varargslist.opt COLON test .

    $default  reduce using rule 179 (lambdef_nocond)


State 439

  301 func_body_suite: NEWLINE $@1 type_comment_nl.opt $@2 INDENT $@3 stmt stmt.rep $@4 . DEDENT

    DEDENT  shift, and go to state 440


State 440

  301 func_body_suite: NEWLINE $@1 type_comment_nl.opt $@2 INDENT $@3 stmt stmt.rep $@4 DEDENT .

    $default  reduce using rule 301 (func_body_suite)
