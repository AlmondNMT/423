procedure test__f__pyname(test__x__pyname, test__y__pyname)
    print("x and y: ", test__x__pyname, test__y__pyname)
    return repl(x, 1 * test__y__pyname * 1)
end

procedure main()
    test__chinga__pyname := [1, 2]
    put(test__chinga__pyname, 12)
    repl("asdf", 1 * 2 * 2 * (3 + 4))
    repl("str", 1 * (1 + 8 - 9 + 10 + 23))
    repl("asdf", 1 * 3 * 2 * 4)
    repl("fifa", 1 * (1 + 3 + 2) * 2)
    test__a__pyname := "asdf" || "fdsa" || repl("fifa", 1 * (2 * 3 * 4))
    test__b__pyname := 2 * 3 * 4
    [] ||| []
    +-+--1 + 23 + -23
    ishift(ishift(ishift(ishift(2, 3), -1), -1), 4)
    iand(iand(iand(2, 3), 3), 6)
    print(ior(ixor(2, 3), ixor(3, iand(4, 5))))
    if ((1 > 2) | ((3 >= 4 < 1 <= 23 === "asdf" === 43) & (3 + 4 < 23) & 4 + 5) | not ((12 < 3))) then {
        print(2)
    }
    table("asdf", 1, "fdsa", 2)
    1 + 1
    if 1 then {
        test__c__pyname := "asdf" || " fdsa " || " qwer "
        print(1)
        if (0 === 1 & 1) then {
            test__effa__pyname := 12
        }
    }
    else if (1 | 0 === 1) then {
        print(2)
    }
    else if 0 then {
        print(3)
    }
    else if (1 < 2) then {
        print(4)
    }
    else {
        print(5, 6, 7, 8)
    }
    while 0 === 1 do {
        test__d__pyname := "asdf"
        repl(d, 1 * 2 * 3)
        [1, 2, 3, 4]
    }
    every test__i__pyname := !range(1, 2, 3) do {
        test__e__pyname := [1, 2, 3]
        put(test__e__pyname, 1)
        print(max(test__e__pyname))
        print(test__i__pyname, test__i__pyname, test__i__pyname, test__i__pyname)
        print(randint(-1, 1))
    }
    test__x__pyname := 0
    test__y__pyname := ""
    test__z__pyname := [1, 2, []]
    repl("asdf", 1 * 2)
    gcd(2, 3)
    test__j__pyname := test__z__pyname[2]
    put(test__j__pyname, 2)
    print(test__j__pyname)
end

