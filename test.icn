procedure test__f(test__x, test__y)
    print("x and y: ", test__x, test__y)
    return repl(x, 1 * test__y * 1)
end

procedure main()
    test__chinga := [1, 2]
    put(test__chinga, 12)
    print(repl("asdf", 1 * 2 * 2 * (3 + 4)))
    print(repl("str", 1 * (1 + 8 - 9 + 10 + 23)))
    print(repl("asdf", 1 * 3 * 2 * 4))
    print(repl("fifa", 1 * (1 + 3 + 2) * 2))
    test__a := "asdf" || "fdsa" || repl("fifa", 1 * (2 * 3 * 4))
    print(test__a)
    test__b := 2 * 3 * 4
    print(test__b)
    print([] ||| [])
    print(+-+--1 + 23 + -23)
    print(ishift(ishift(ishift(ishift(2, 3), -1), -1), 4))
    print(iand(iand(iand(2, 3), 3), 6))
    print(ior(ixor(2, 3), ixor(3, iand(4, 5))))
    if ((1 > 2) | ((3 >= 4 < 1 <= 23 === "asdf" === 43) & (3 + 4 < 23) & 4 + 5) | not ((12 < 3))) then {
        print(2)
    }
    print(table("asdf", 1, "fdsa", 2))
    print(1 + 1)
    if 1 then {
        test__c := "asdf" || " fdsa " || " qwer "
        print(1)
        if (0 === 1 & 1) then {
            test__effa := 12
        }
    }
    else if (1 | 0 === 1) then {
        print(2)
    }
    else if 0 then {
        print(3)
    }
    else if (1 < 2) then {
        print(4)
    }
    else {
        print(5, 6, 7, 8)
    }
    while 0 === 1 do {
        test__d := "asdf"
        repl(d, 1 * 2 * 3)
        [1, 2, 3, 4]
    }
    every test__i := !range(1, 10, 3) do {
        test__e := [1, 2, 3]
        put(test__e, 1)
        print(max(test__e))
        print(test__i, test__i, test__i, test__i)
        print(randint(-1, 1))
    }
    test__x := 0
    test__y := ""
    test__z := [1, 2, []]
    repl("asdf", 1 * 2)
    print(gcd(2, 3))
    test__j := test__z[3]
    put(test__j, 2)
    print(test__j)
end

